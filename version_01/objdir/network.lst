   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"network.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.swap,"ax",%progbits
  16              		.align	1
  17              		.global	swap
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	swap:
  25              	.LVL0:
  26              	.LFB3:
  27              		.file 1 "network.c"
   1:network.c     **** #include "network.h"
   2:network.c     **** #include <stdint.h>
   3:network.c     **** #include <math.h>
   4:network.c     **** 
   5:network.c     **** void swap(int *a, int *b){
  28              		.loc 1 5 26 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
   6:network.c     ****     int temp = *a;
  33              		.loc 1 6 5 view .LVU1
  34              		.loc 1 6 9 is_stmt 0 view .LVU2
  35 0000 0368     		ldr	r3, [r0]
  36              	.LVL1:
   7:network.c     ****     *a = *b;
  37              		.loc 1 7 5 is_stmt 1 view .LVU3
  38              		.loc 1 7 10 is_stmt 0 view .LVU4
  39 0002 0A68     		ldr	r2, [r1]
  40              		.loc 1 7 8 view .LVU5
  41 0004 0260     		str	r2, [r0]
   8:network.c     ****     *b = temp;
  42              		.loc 1 8 5 is_stmt 1 view .LVU6
  43              		.loc 1 8 8 is_stmt 0 view .LVU7
  44 0006 0B60     		str	r3, [r1]
   9:network.c     **** }
  45              		.loc 1 9 1 view .LVU8
  46 0008 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE3:
  50              		.section	.rodata.str1.1,"aMS",%progbits,1
  51              	.LC0:
  52 0000 46726565 		.ascii	"Freeing mem...\000"
  52      696E6720 
  52      6D656D2E 
  52      2E2E00
  53              		.section	.text.free_network_memory,"ax",%progbits
  54              		.align	1
  55              		.global	free_network_memory
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	free_network_memory:
  62              	.LVL2:
  63              	.LFB4:
  10:network.c     **** 
  11:network.c     **** /** 
  12:network.c     **** * @brief
  13:network.c     **** * Shuffles the array using the Fisher-Yates shuffle
  14:network.c     **** */
  15:network.c     **** void free_network_memory(network *net, int ****rand_indices){
  64              		.loc 1 15 61 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  16:network.c     **** 
  17:network.c     ****     int nidx = 0;
  68              		.loc 1 17 5 view .LVU10
  18:network.c     ****     int *rand_n_idx, *rand_w_idx;
  69              		.loc 1 18 5 view .LVU11
  19:network.c     ****     int ***rand_n_indices_ptr = rand_indices[0];
  70              		.loc 1 19 5 view .LVU12
  20:network.c     ****     int **rand_n_indices = *rand_n_indices_ptr;
  71              		.loc 1 20 5 view .LVU13
  21:network.c     ****     int ***rand_ws_indices = rand_indices[1];
  72              		.loc 1 21 5 view .LVU14
  15:network.c     **** 
  73              		.loc 1 15 61 is_stmt 0 view .LVU15
  74 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 32
  77              		.cfi_offset 3, -32
  78              		.cfi_offset 4, -28
  79              		.cfi_offset 5, -24
  80              		.cfi_offset 6, -20
  81              		.cfi_offset 7, -16
  82              		.cfi_offset 8, -12
  83              		.cfi_offset 9, -8
  84              		.cfi_offset 14, -4
  85              		.loc 1 21 12 view .LVU16
  86 0004 4F68     		ldr	r7, [r1, #4]
  87              	.LVL3:
  22:network.c     **** 
  23:network.c     ****     // free the dynamically allocated fields inside rand_indices
  24:network.c     ****     for (int i=1; i < net->num_layers; i++){
  88              		.loc 1 24 5 is_stmt 1 view .LVU17
  89              	.LBB6:
  90              		.loc 1 24 10 view .LVU18
  25:network.c     ****         //rand_n_idx = rand_n_indices[i - 1];
  26:network.c     ****         for (int j=0; j < net->layers[i].num_neurons; j++){
  27:network.c     ****             //nidx = rand_n_idx[j];  
  28:network.c     ****             rand_w_idx = rand_ws_indices[i - 1][j];
  29:network.c     ****             
  30:network.c     ****             //free(rand_w_idx);
  31:network.c     ****             free(rand_ws_indices[i - 1][j]);
  32:network.c     ****         }
  33:network.c     ****         free(rand_ws_indices[i - 1]);
  34:network.c     ****         printf("Freeing mem...\n"); 
  91              		.loc 1 34 9 is_stmt 0 view .LVU19
  92 0006 DFF87890 		ldr	r9, .L11
  93              	.LBE6:
  15:network.c     **** 
  94              		.loc 1 15 61 view .LVU20
  95 000a 0446     		mov	r4, r0
  96              	.LBB9:
  24:network.c     ****         //rand_n_idx = rand_n_indices[i - 1];
  97              		.loc 1 24 14 view .LVU21
  98 000c 0125     		movs	r5, #1
  99              	.LBB7:
  28:network.c     ****             
 100              		.loc 1 28 41 view .LVU22
 101 000e 043F     		subs	r7, r7, #4
 102              	.LVL4:
 103              	.L3:
  28:network.c     ****             
 104              		.loc 1 28 41 view .LVU23
 105              	.LBE7:
  24:network.c     ****         //rand_n_idx = rand_n_indices[i - 1];
 106              		.loc 1 24 19 is_stmt 1 discriminator 1 view .LVU24
  24:network.c     ****         //rand_n_idx = rand_n_indices[i - 1];
 107              		.loc 1 24 5 is_stmt 0 discriminator 1 view .LVU25
 108 0010 2368     		ldr	r3, [r4]
 109 0012 AB42     		cmp	r3, r5
 110 0014 2BDD     		ble	.L10
 111 0016 4FEAC508 		lsl	r8, r5, #3
 112              	.LBB8:
  26:network.c     ****             //nidx = rand_n_idx[j];  
 113              		.loc 1 26 18 view .LVU26
 114 001a 0026     		movs	r6, #0
 115 001c 04E0     		b	.L6
 116              	.LVL5:
 117              	.L4:
  28:network.c     ****             
 118              		.loc 1 28 13 is_stmt 1 discriminator 3 view .LVU27
  31:network.c     ****         }
 119              		.loc 1 31 13 discriminator 3 view .LVU28
 120 001e 50F82600 		ldr	r0, [r0, r6, lsl #2]
 121              	.LVL6:
  31:network.c     ****         }
 122              		.loc 1 31 13 is_stmt 0 discriminator 3 view .LVU29
 123 0022 FFF7FEFF 		bl	free
 124              	.LVL7:
  26:network.c     ****             //nidx = rand_n_idx[j];  
 125              		.loc 1 26 55 is_stmt 1 discriminator 3 view .LVU30
  26:network.c     ****             //nidx = rand_n_idx[j];  
 126              		.loc 1 26 56 is_stmt 0 discriminator 3 view .LVU31
 127 0026 0136     		adds	r6, r6, #1
 128              	.LVL8:
 129              	.L6:
  26:network.c     ****             //nidx = rand_n_idx[j];  
 130              		.loc 1 26 23 is_stmt 1 discriminator 1 view .LVU32
  26:network.c     ****             //nidx = rand_n_idx[j];  
 131              		.loc 1 26 41 is_stmt 0 discriminator 1 view .LVU33
 132 0028 6368     		ldr	r3, [r4, #4]
  28:network.c     ****             
 133              		.loc 1 28 41 discriminator 1 view .LVU34
 134 002a 57F82500 		ldr	r0, [r7, r5, lsl #2]
  26:network.c     ****             //nidx = rand_n_idx[j];  
 135              		.loc 1 26 9 discriminator 1 view .LVU35
 136 002e 53F80830 		ldr	r3, [r3, r8]
 137 0032 B342     		cmp	r3, r6
 138 0034 F3DC     		bgt	.L4
 139              	.LBE8:
  33:network.c     ****         printf("Freeing mem...\n"); 
 140              		.loc 1 33 9 is_stmt 1 discriminator 2 view .LVU36
 141 0036 FFF7FEFF 		bl	free
 142              	.LVL9:
 143              		.loc 1 34 9 discriminator 2 view .LVU37
 144 003a 4846     		mov	r0, r9
 145 003c FFF7FEFF 		bl	puts
 146              	.LVL10:
  24:network.c     ****         //rand_n_idx = rand_n_indices[i - 1];
 147              		.loc 1 24 40 discriminator 2 view .LVU38
  24:network.c     ****         //rand_n_idx = rand_n_indices[i - 1];
 148              		.loc 1 24 41 is_stmt 0 discriminator 2 view .LVU39
 149 0040 0135     		adds	r5, r5, #1
 150              	.LVL11:
  24:network.c     ****         //rand_n_idx = rand_n_indices[i - 1];
 151              		.loc 1 24 41 discriminator 2 view .LVU40
 152 0042 E5E7     		b	.L3
 153              	.LVL12:
 154              	.L7:
  24:network.c     ****         //rand_n_idx = rand_n_indices[i - 1];
 155              		.loc 1 24 41 discriminator 2 view .LVU41
 156              	.LBE9:
 157              	.LBB10:
 158              	.LBB11:
  35:network.c     ****     }
  36:network.c     ****     for (int i=1; i< net->num_layers; i++){
  37:network.c     ****         //free(rand_n_indices[i - 1]);
  38:network.c     ****     }
  39:network.c     ****     
  40:network.c     **** 
  41:network.c     **** 
  42:network.c     ****     // free the dynamically allocated fields inside the network struct
  43:network.c     ****     for (int i=0; i < net->num_layers; i++){
  44:network.c     ****         
  45:network.c     ****         for(int j=0; j< net->layers[i].num_neurons; j++){
  46:network.c     ****             free(net->layers[i].neurons[j].weights);
 159              		.loc 1 46 13 is_stmt 1 view .LVU42
 160              		.loc 1 46 43 is_stmt 0 view .LVU43
 161 0044 08FB0500 		mla	r0, r8, r5, r0
  45:network.c     ****             free(net->layers[i].neurons[j].weights);
 162              		.loc 1 45 54 view .LVU44
 163 0048 0135     		adds	r5, r5, #1
 164              	.LVL13:
 165              		.loc 1 46 13 view .LVU45
 166 004a 4068     		ldr	r0, [r0, #4]
 167 004c FFF7FEFF 		bl	free
 168              	.LVL14:
  47:network.c     ****             if ((i > 0) && (i < net->num_layers - 1)) {
 169              		.loc 1 47 13 is_stmt 1 view .LVU46
  48:network.c     ****                 //free(rand_indices[1][i][j]); //individual ws indices
  49:network.c     ****             }
 170              		.loc 1 49 13 view .LVU47
  45:network.c     ****             free(net->layers[i].neurons[j].weights);
 171              		.loc 1 45 53 view .LVU48
 172              	.L9:
  45:network.c     ****             free(net->layers[i].neurons[j].weights);
 173              		.loc 1 45 22 discriminator 1 view .LVU49
  45:network.c     ****             free(net->layers[i].neurons[j].weights);
 174              		.loc 1 45 36 is_stmt 0 discriminator 1 view .LVU50
 175 0050 6368     		ldr	r3, [r4, #4]
 176 0052 DA19     		adds	r2, r3, r7
  45:network.c     ****             free(net->layers[i].neurons[j].weights);
 177              		.loc 1 45 9 discriminator 1 view .LVU51
 178 0054 DB59     		ldr	r3, [r3, r7]
  46:network.c     ****             if ((i > 0) && (i < net->num_layers - 1)) {
 179              		.loc 1 46 32 discriminator 1 view .LVU52
 180 0056 5068     		ldr	r0, [r2, #4]
  45:network.c     ****             free(net->layers[i].neurons[j].weights);
 181              		.loc 1 45 9 discriminator 1 view .LVU53
 182 0058 AB42     		cmp	r3, r5
 183 005a F3DC     		bgt	.L7
 184              	.LBE11:
  50:network.c     ****         }
  51:network.c     ****         if (i < net->num_layers - 1) {
 185              		.loc 1 51 9 is_stmt 1 view .LVU54
  52:network.c     ****             //free(*rand_indices[0][i]);  //ns
  53:network.c     ****             //free(rand_indices[1][i]);   //ws
  54:network.c     ****         }
 186              		.loc 1 54 9 view .LVU55
  55:network.c     ****         free(net->layers[i].neurons);
 187              		.loc 1 55 9 view .LVU56
 188 005c FFF7FEFF 		bl	free
 189              	.LVL15:
  43:network.c     ****         
 190              		.loc 1 43 40 view .LVU57
  43:network.c     ****         
 191              		.loc 1 43 41 is_stmt 0 view .LVU58
 192 0060 0136     		adds	r6, r6, #1
 193              	.LVL16:
 194              	.L5:
  43:network.c     ****         
 195              		.loc 1 43 19 is_stmt 1 discriminator 1 view .LVU59
  43:network.c     ****         
 196              		.loc 1 43 5 is_stmt 0 discriminator 1 view .LVU60
 197 0062 2368     		ldr	r3, [r4]
 198 0064 B342     		cmp	r3, r6
 199 0066 06DD     		ble	.L8
 200 0068 F700     		lsls	r7, r6, #3
 201              	.LBB12:
  45:network.c     ****             free(net->layers[i].neurons[j].weights);
 202              		.loc 1 45 17 view .LVU61
 203 006a 0025     		movs	r5, #0
 204 006c F0E7     		b	.L9
 205              	.LVL17:
 206              	.L10:
  45:network.c     ****             free(net->layers[i].neurons[j].weights);
 207              		.loc 1 45 17 view .LVU62
 208              	.LBE12:
  43:network.c     ****         
 209              		.loc 1 43 14 view .LVU63
 210 006e 0026     		movs	r6, #0
 211              	.LBB13:
  46:network.c     ****             if ((i > 0) && (i < net->num_layers - 1)) {
 212              		.loc 1 46 43 view .LVU64
 213 0070 4FF01408 		mov	r8, #20
 214 0074 F5E7     		b	.L5
 215              	.LVL18:
 216              	.L8:
  46:network.c     ****             if ((i > 0) && (i < net->num_layers - 1)) {
 217              		.loc 1 46 43 view .LVU65
 218              	.LBE13:
 219              	.LBE10:
  56:network.c     ****     }
  57:network.c     ****     free(net->layers);
 220              		.loc 1 57 5 is_stmt 1 view .LVU66
 221 0076 6068     		ldr	r0, [r4, #4]
  58:network.c     ****     //free(net); net is stack allocated as of right now
  59:network.c     **** }
 222              		.loc 1 59 1 is_stmt 0 view .LVU67
 223 0078 BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 224              	.LCFI1:
 225              		.cfi_restore 14
 226              		.cfi_restore 9
 227              		.cfi_restore 8
 228              		.cfi_restore 7
 229              		.cfi_restore 6
 230              		.cfi_restore 5
 231              		.cfi_restore 4
 232              		.cfi_restore 3
 233              		.cfi_def_cfa_offset 0
 234              	.LVL19:
  57:network.c     ****     //free(net); net is stack allocated as of right now
 235              		.loc 1 57 5 view .LVU68
 236 007c FFF7FEBF 		b	free
 237              	.LVL20:
 238              	.L12:
 239              		.align	2
 240              	.L11:
 241 0080 00000000 		.word	.LC0
 242              		.cfi_endproc
 243              	.LFE4:
 245              		.section	.text.shuffleArray,"ax",%progbits
 246              		.align	1
 247              		.global	shuffleArray
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu softvfp
 253              	shuffleArray:
 254              	.LVL21:
 255              	.LFB5:
  60:network.c     **** 
  61:network.c     **** 
  62:network.c     **** void shuffleArray(int arr[], int size){
 256              		.loc 1 62 39 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
  63:network.c     ****     srand(time(NULL));
 260              		.loc 1 63 5 view .LVU70
  62:network.c     ****     srand(time(NULL));
 261              		.loc 1 62 39 is_stmt 0 view .LVU71
 262 0000 38B5     		push	{r3, r4, r5, lr}
 263              	.LCFI2:
 264              		.cfi_def_cfa_offset 16
 265              		.cfi_offset 3, -16
 266              		.cfi_offset 4, -12
 267              		.cfi_offset 5, -8
 268              		.cfi_offset 14, -4
  62:network.c     ****     srand(time(NULL));
 269              		.loc 1 62 39 view .LVU72
 270 0002 0546     		mov	r5, r0
 271              		.loc 1 63 11 view .LVU73
 272 0004 0020     		movs	r0, #0
 273              	.LVL22:
  62:network.c     ****     srand(time(NULL));
 274              		.loc 1 62 39 view .LVU74
 275 0006 0C46     		mov	r4, r1
 276              		.loc 1 63 11 view .LVU75
 277 0008 FFF7FEFF 		bl	time
 278              	.LVL23:
 279              		.loc 1 63 5 view .LVU76
 280 000c FFF7FEFF 		bl	srand
 281              	.LVL24:
  64:network.c     ****     for (int i = size - 1; i > 0; i--) {
 282              		.loc 1 64 5 is_stmt 1 view .LVU77
 283              	.LBB14:
 284              		.loc 1 64 10 view .LVU78
 285              	.L16:
 286              		.loc 1 64 35 discriminator 3 view .LVU79
 287              		.loc 1 64 36 is_stmt 0 discriminator 3 view .LVU80
 288 0010 013C     		subs	r4, r4, #1
 289              	.LVL25:
 290              		.loc 1 64 28 is_stmt 1 discriminator 3 view .LVU81
 291              		.loc 1 64 5 is_stmt 0 discriminator 3 view .LVU82
 292 0012 002C     		cmp	r4, #0
 293 0014 00DC     		bgt	.L15
 294              	.LBE14:
  65:network.c     ****         int j = rand() % (i + 1);
  66:network.c     ****         swap(&arr[i], &arr[j]);
  67:network.c     ****     }
  68:network.c     **** }
 295              		.loc 1 68 1 view .LVU83
 296 0016 38BD     		pop	{r3, r4, r5, pc}
 297              	.LVL26:
 298              	.L15:
 299              	.LBB18:
 300              	.LBB15:
  65:network.c     ****         int j = rand() % (i + 1);
 301              		.loc 1 65 9 is_stmt 1 discriminator 3 view .LVU84
  65:network.c     ****         int j = rand() % (i + 1);
 302              		.loc 1 65 17 is_stmt 0 discriminator 3 view .LVU85
 303 0018 FFF7FEFF 		bl	rand
 304              	.LVL27:
  66:network.c     ****     }
 305              		.loc 1 66 9 is_stmt 1 discriminator 3 view .LVU86
  65:network.c     ****         int j = rand() % (i + 1);
 306              		.loc 1 65 13 is_stmt 0 discriminator 3 view .LVU87
 307 001c 631C     		adds	r3, r4, #1
 308 001e 90FBF3F2 		sdiv	r2, r0, r3
 309 0022 02FB1300 		mls	r0, r2, r3, r0
 310              	.LVL28:
 311              	.LBB16:
 312              	.LBI16:
   5:network.c     ****     int temp = *a;
 313              		.loc 1 5 6 is_stmt 1 discriminator 3 view .LVU88
 314              	.LBB17:
   6:network.c     ****     *a = *b;
 315              		.loc 1 6 5 discriminator 3 view .LVU89
   6:network.c     ****     *a = *b;
 316              		.loc 1 6 9 is_stmt 0 discriminator 3 view .LVU90
 317 0026 55F82430 		ldr	r3, [r5, r4, lsl #2]
 318              	.LVL29:
   7:network.c     ****     *b = temp;
 319              		.loc 1 7 5 is_stmt 1 discriminator 3 view .LVU91
   7:network.c     ****     *b = temp;
 320              		.loc 1 7 10 is_stmt 0 discriminator 3 view .LVU92
 321 002a 55F82020 		ldr	r2, [r5, r0, lsl #2]
   7:network.c     ****     *b = temp;
 322              		.loc 1 7 8 discriminator 3 view .LVU93
 323 002e 45F82420 		str	r2, [r5, r4, lsl #2]
   8:network.c     **** }
 324              		.loc 1 8 5 is_stmt 1 discriminator 3 view .LVU94
   8:network.c     **** }
 325              		.loc 1 8 8 is_stmt 0 discriminator 3 view .LVU95
 326 0032 45F82030 		str	r3, [r5, r0, lsl #2]
 327 0036 EBE7     		b	.L16
 328              	.LBE17:
 329              	.LBE16:
 330              	.LBE15:
 331              	.LBE18:
 332              		.cfi_endproc
 333              	.LFE5:
 335              		.section	.text.get_random_indices,"ax",%progbits
 336              		.align	1
 337              		.global	get_random_indices
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu softvfp
 343              	get_random_indices:
 344              	.LVL30:
 345              	.LFB6:
  69:network.c     **** 
  70:network.c     **** int* get_random_indices(int size){
 346              		.loc 1 70 34 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
  71:network.c     ****     int *arr = malloc(size * sizeof(int));
 350              		.loc 1 71 5 view .LVU97
  70:network.c     ****     int *arr = malloc(size * sizeof(int));
 351              		.loc 1 70 34 is_stmt 0 view .LVU98
 352 0000 38B5     		push	{r3, r4, r5, lr}
 353              	.LCFI3:
 354              		.cfi_def_cfa_offset 16
 355              		.cfi_offset 3, -16
 356              		.cfi_offset 4, -12
 357              		.cfi_offset 5, -8
 358              		.cfi_offset 14, -4
  70:network.c     ****     int *arr = malloc(size * sizeof(int));
 359              		.loc 1 70 34 view .LVU99
 360 0002 0546     		mov	r5, r0
 361              		.loc 1 71 16 view .LVU100
 362 0004 8000     		lsls	r0, r0, #2
 363              	.LVL31:
 364              		.loc 1 71 16 view .LVU101
 365 0006 FFF7FEFF 		bl	malloc
 366              	.LVL32:
 367              	.LBB19:
  72:network.c     ****     for (int i=0; i<size; i++){
 368              		.loc 1 72 14 view .LVU102
 369 000a 0023     		movs	r3, #0
 370              	.LBE19:
  71:network.c     ****     int *arr = malloc(size * sizeof(int));
 371              		.loc 1 71 16 view .LVU103
 372 000c 0446     		mov	r4, r0
 373              	.LVL33:
 374              		.loc 1 72 5 is_stmt 1 view .LVU104
 375              	.LBB20:
 376              		.loc 1 72 10 view .LVU105
 377              	.L18:
 378              		.loc 1 72 19 discriminator 1 view .LVU106
 379              		.loc 1 72 5 is_stmt 0 discriminator 1 view .LVU107
 380 000e AB42     		cmp	r3, r5
 381 0010 05DB     		blt	.L19
 382              	.LBE20:
  73:network.c     ****         arr[i] = i;
  74:network.c     ****     }
  75:network.c     ****     shuffleArray(arr, size);
 383              		.loc 1 75 5 is_stmt 1 view .LVU108
 384 0012 2046     		mov	r0, r4
 385              	.LVL34:
 386              		.loc 1 75 5 is_stmt 0 view .LVU109
 387 0014 2946     		mov	r1, r5
 388 0016 FFF7FEFF 		bl	shuffleArray
 389              	.LVL35:
  76:network.c     ****     return arr;
 390              		.loc 1 76 5 is_stmt 1 view .LVU110
  77:network.c     **** }
 391              		.loc 1 77 1 is_stmt 0 view .LVU111
 392 001a 2046     		mov	r0, r4
 393 001c 38BD     		pop	{r3, r4, r5, pc}
 394              	.LVL36:
 395              	.L19:
 396              	.LBB21:
  73:network.c     ****         arr[i] = i;
 397              		.loc 1 73 9 is_stmt 1 discriminator 3 view .LVU112
  73:network.c     ****         arr[i] = i;
 398              		.loc 1 73 16 is_stmt 0 discriminator 3 view .LVU113
 399 001e 44F82330 		str	r3, [r4, r3, lsl #2]
  72:network.c     ****         arr[i] = i;
 400              		.loc 1 72 27 is_stmt 1 discriminator 3 view .LVU114
  72:network.c     ****         arr[i] = i;
 401              		.loc 1 72 28 is_stmt 0 discriminator 3 view .LVU115
 402 0022 0133     		adds	r3, r3, #1
 403              	.LVL37:
  72:network.c     ****         arr[i] = i;
 404              		.loc 1 72 28 discriminator 3 view .LVU116
 405 0024 F3E7     		b	.L18
 406              	.LBE21:
 407              		.cfi_endproc
 408              	.LFE6:
 410              		.global	__aeabi_i2f
 411              		.global	__aeabi_fmul
 412              		.section	.text.create_neuron,"ax",%progbits
 413              		.align	1
 414              		.global	create_neuron
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu softvfp
 420              	create_neuron:
 421              	.LVL38:
 422              	.LFB7:
  78:network.c     **** 
  79:network.c     **** neuron create_neuron(int num_out_weights){
 423              		.loc 1 79 42 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
  80:network.c     ****     neuron new_neuron;
 427              		.loc 1 80 5 view .LVU118
  81:network.c     ****     new_neuron.bias = 0.0;
 428              		.loc 1 81 5 view .LVU119
  82:network.c     ****     new_neuron.z = 0.0;
 429              		.loc 1 82 5 view .LVU120
  83:network.c     ****     new_neuron.a = 0.0;
 430              		.loc 1 83 5 view .LVU121
  84:network.c     ****     new_neuron.weights = (float*) malloc(num_out_weights * sizeof(float));
 431              		.loc 1 84 5 view .LVU122
  79:network.c     ****     neuron new_neuron;
 432              		.loc 1 79 42 is_stmt 0 view .LVU123
 433 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 434              	.LCFI4:
 435              		.cfi_def_cfa_offset 24
 436              		.cfi_offset 4, -24
 437              		.cfi_offset 5, -20
 438              		.cfi_offset 6, -16
 439              		.cfi_offset 7, -12
 440              		.cfi_offset 8, -8
 441              		.cfi_offset 14, -4
  79:network.c     ****     neuron new_neuron;
 442              		.loc 1 79 42 view .LVU124
 443 0004 0446     		mov	r4, r0
 444              		.loc 1 84 35 view .LVU125
 445 0006 8800     		lsls	r0, r1, #2
 446              	.LVL39:
  79:network.c     ****     neuron new_neuron;
 447              		.loc 1 79 42 view .LVU126
 448 0008 0D46     		mov	r5, r1
 449              		.loc 1 84 35 view .LVU127
 450 000a FFF7FEFF 		bl	malloc
 451              	.LVL40:
 452              	.LBB22:
  85:network.c     ****     new_neuron.num_weights = num_out_weights;
  86:network.c     **** 
  87:network.c     ****     for (int i=0; i<num_out_weights; i++){
 453              		.loc 1 87 14 view .LVU128
 454 000e 0027     		movs	r7, #0
 455              	.LBE22:
  84:network.c     ****     new_neuron.num_weights = num_out_weights;
 456              		.loc 1 84 35 view .LVU129
 457 0010 0646     		mov	r6, r0
 458              	.LVL41:
  85:network.c     ****     new_neuron.num_weights = num_out_weights;
 459              		.loc 1 85 5 is_stmt 1 view .LVU130
 460              		.loc 1 87 5 view .LVU131
 461              	.LBB23:
 462              		.loc 1 87 10 view .LVU132
  88:network.c     ****         new_neuron.weights[i] = ((float)rand())/((float)RAND_MAX);
 463              		.loc 1 88 48 is_stmt 0 view .LVU133
 464 0012 4FF04058 		mov	r8, #805306368
 465              	.LVL42:
 466              	.L21:
  87:network.c     ****         new_neuron.weights[i] = ((float)rand())/((float)RAND_MAX);
 467              		.loc 1 87 19 is_stmt 1 discriminator 1 view .LVU134
  87:network.c     ****         new_neuron.weights[i] = ((float)rand())/((float)RAND_MAX);
 468              		.loc 1 87 5 is_stmt 0 discriminator 1 view .LVU135
 469 0016 AF42     		cmp	r7, r5
 470 0018 08DB     		blt	.L22
 471              	.LBE23:
  89:network.c     ****     }
  90:network.c     ****     return new_neuron;
 472              		.loc 1 90 5 is_stmt 1 view .LVU136
 473              		.loc 1 90 12 is_stmt 0 view .LVU137
 474 001a 0023     		movs	r3, #0
 475 001c C4E90056 		strd	r5, r6, [r4]
 476 0020 A360     		str	r3, [r4, #8]	@ float
 477 0022 E360     		str	r3, [r4, #12]	@ float
 478 0024 2361     		str	r3, [r4, #16]	@ float
 479              	.LVL43:
  91:network.c     **** }
 480              		.loc 1 91 1 view .LVU138
 481 0026 2046     		mov	r0, r4
 482 0028 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 483              	.LVL44:
 484              	.L22:
 485              	.LBB24:
  88:network.c     ****     }
 486              		.loc 1 88 9 is_stmt 1 discriminator 3 view .LVU139
  88:network.c     ****     }
 487              		.loc 1 88 41 is_stmt 0 discriminator 3 view .LVU140
 488 002c FFF7FEFF 		bl	rand
 489              	.LVL45:
  88:network.c     ****     }
 490              		.loc 1 88 34 discriminator 3 view .LVU141
 491 0030 FFF7FEFF 		bl	__aeabi_i2f
 492              	.LVL46:
  88:network.c     ****     }
 493              		.loc 1 88 48 discriminator 3 view .LVU142
 494 0034 4146     		mov	r1, r8
 495 0036 FFF7FEFF 		bl	__aeabi_fmul
 496              	.LVL47:
  88:network.c     ****     }
 497              		.loc 1 88 31 discriminator 3 view .LVU143
 498 003a 46F82700 		str	r0, [r6, r7, lsl #2]	@ float
  87:network.c     ****         new_neuron.weights[i] = ((float)rand())/((float)RAND_MAX);
 499              		.loc 1 87 38 is_stmt 1 discriminator 3 view .LVU144
  87:network.c     ****         new_neuron.weights[i] = ((float)rand())/((float)RAND_MAX);
 500              		.loc 1 87 39 is_stmt 0 discriminator 3 view .LVU145
 501 003e 0137     		adds	r7, r7, #1
 502              	.LVL48:
  87:network.c     ****         new_neuron.weights[i] = ((float)rand())/((float)RAND_MAX);
 503              		.loc 1 87 39 discriminator 3 view .LVU146
 504 0040 E9E7     		b	.L21
 505              	.LBE24:
 506              		.cfi_endproc
 507              	.LFE7:
 509              		.section	.text.create_layer,"ax",%progbits
 510              		.align	1
 511              		.global	create_layer
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu softvfp
 517              	create_layer:
 518              	.LVL49:
 519              	.LFB8:
  92:network.c     **** 
  93:network.c     **** layer create_layer(int num_neurons){
 520              		.loc 1 93 36 is_stmt 1 view -0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
  94:network.c     ****     layer lay;
 524              		.loc 1 94 5 view .LVU148
  95:network.c     ****     lay.num_neurons = num_neurons;
 525              		.loc 1 95 5 view .LVU149
  96:network.c     ****     lay.neurons = (neuron*) malloc(num_neurons * sizeof(neuron));
 526              		.loc 1 96 5 view .LVU150
  93:network.c     ****     layer lay;
 527              		.loc 1 93 36 is_stmt 0 view .LVU151
 528 0000 38B5     		push	{r3, r4, r5, lr}
 529              	.LCFI5:
 530              		.cfi_def_cfa_offset 16
 531              		.cfi_offset 3, -16
 532              		.cfi_offset 4, -12
 533              		.cfi_offset 5, -8
 534              		.cfi_offset 14, -4
  93:network.c     ****     layer lay;
 535              		.loc 1 93 36 view .LVU152
 536 0002 0446     		mov	r4, r0
 537              		.loc 1 96 29 view .LVU153
 538 0004 1420     		movs	r0, #20
 539              	.LVL50:
 540              		.loc 1 96 29 view .LVU154
 541 0006 4843     		muls	r0, r1, r0
  93:network.c     ****     layer lay;
 542              		.loc 1 93 36 view .LVU155
 543 0008 0D46     		mov	r5, r1
 544              		.loc 1 96 29 view .LVU156
 545 000a FFF7FEFF 		bl	malloc
 546              	.LVL51:
  97:network.c     ****     return lay;
 547              		.loc 1 97 5 is_stmt 1 view .LVU157
 548              		.loc 1 97 12 is_stmt 0 view .LVU158
 549 000e C4E90050 		strd	r5, r0, [r4]
 550              	.LVL52:
  98:network.c     **** }
 551              		.loc 1 98 1 view .LVU159
 552 0012 2046     		mov	r0, r4
 553 0014 38BD     		pop	{r3, r4, r5, pc}
 554              		.loc 1 98 1 view .LVU160
 555              		.cfi_endproc
 556              	.LFE8:
 558              		.section	.text.create_network,"ax",%progbits
 559              		.align	1
 560              		.global	create_network
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu softvfp
 566              	create_network:
 567              	.LVL53:
 568              	.LFB9:
  99:network.c     **** 
 100:network.c     **** network create_network(int num_layers){
 569              		.loc 1 100 39 is_stmt 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 101:network.c     ****     network net;
 573              		.loc 1 101 5 view .LVU162
 102:network.c     ****     net.num_layers = num_layers;
 574              		.loc 1 102 5 view .LVU163
 103:network.c     ****     net.layers = (layer*) malloc(num_layers * sizeof(layer));
 575              		.loc 1 103 5 view .LVU164
 100:network.c     ****     network net;
 576              		.loc 1 100 39 is_stmt 0 view .LVU165
 577 0000 38B5     		push	{r3, r4, r5, lr}
 578              	.LCFI6:
 579              		.cfi_def_cfa_offset 16
 580              		.cfi_offset 3, -16
 581              		.cfi_offset 4, -12
 582              		.cfi_offset 5, -8
 583              		.cfi_offset 14, -4
 100:network.c     ****     network net;
 584              		.loc 1 100 39 view .LVU166
 585 0002 0446     		mov	r4, r0
 586              		.loc 1 103 27 view .LVU167
 587 0004 C800     		lsls	r0, r1, #3
 588              	.LVL54:
 100:network.c     ****     network net;
 589              		.loc 1 100 39 view .LVU168
 590 0006 0D46     		mov	r5, r1
 591              		.loc 1 103 27 view .LVU169
 592 0008 FFF7FEFF 		bl	malloc
 593              	.LVL55:
 104:network.c     ****     return net;
 594              		.loc 1 104 5 is_stmt 1 view .LVU170
 595              		.loc 1 104 12 is_stmt 0 view .LVU171
 596 000c C4E90050 		strd	r5, r0, [r4]
 597              	.LVL56:
 105:network.c     **** }
 598              		.loc 1 105 1 view .LVU172
 599 0010 2046     		mov	r0, r4
 600 0012 38BD     		pop	{r3, r4, r5, pc}
 601              		.loc 1 105 1 view .LVU173
 602              		.cfi_endproc
 603              	.LFE9:
 605              		.section	.text.construct_network,"ax",%progbits
 606              		.align	1
 607              		.global	construct_network
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu softvfp
 613              	construct_network:
 614              	.LVL57:
 615              	.LFB10:
 106:network.c     **** 
 107:network.c     **** network construct_network(int num_outputs, int num_layers, int *num_neurons) {
 616              		.loc 1 107 78 is_stmt 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 40
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 108:network.c     **** 
 109:network.c     ****     network net = create_network(num_layers);
 620              		.loc 1 109 5 view .LVU175
 107:network.c     **** 
 621              		.loc 1 107 78 is_stmt 0 view .LVU176
 622 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 623              	.LCFI7:
 624              		.cfi_def_cfa_offset 36
 625              		.cfi_offset 4, -36
 626              		.cfi_offset 5, -32
 627              		.cfi_offset 6, -28
 628              		.cfi_offset 7, -24
 629              		.cfi_offset 8, -20
 630              		.cfi_offset 9, -16
 631              		.cfi_offset 10, -12
 632              		.cfi_offset 11, -8
 633              		.cfi_offset 14, -4
 634 0004 0746     		mov	r7, r0
 635 0006 8BB0     		sub	sp, sp, #44
 636              	.LCFI8:
 637              		.cfi_def_cfa_offset 80
 107:network.c     **** 
 638              		.loc 1 107 78 view .LVU177
 639 0008 8946     		mov	r9, r1
 640              		.loc 1 109 19 view .LVU178
 641 000a 1146     		mov	r1, r2
 642              	.LVL58:
 107:network.c     **** 
 643              		.loc 1 107 78 view .LVU179
 644 000c 1446     		mov	r4, r2
 645 000e 9846     		mov	r8, r3
 646              		.loc 1 109 19 view .LVU180
 647 0010 FFF7FEFF 		bl	create_network
 648              	.LVL59:
 649              		.loc 1 109 19 view .LVU181
 650 0014 7E68     		ldr	r6, [r7, #4]
 651              	.LVL60:
 110:network.c     ****     int i, j;
 652              		.loc 1 110 5 is_stmt 1 view .LVU182
 111:network.c     ****     for (i=0; i<num_layers; i++){
 653              		.loc 1 111 5 view .LVU183
 654              		.loc 1 111 11 is_stmt 0 view .LVU184
 655 0016 0025     		movs	r5, #0
 112:network.c     ****         net.layers[i] = create_layer(num_neurons[i]);
 656              		.loc 1 112 25 view .LVU185
 657 0018 0DF1200A 		add	r10, sp, #32
 658              	.LVL61:
 659              	.L26:
 111:network.c     ****     for (i=0; i<num_layers; i++){
 660              		.loc 1 111 15 is_stmt 1 discriminator 1 view .LVU186
 111:network.c     ****     for (i=0; i<num_layers; i++){
 661              		.loc 1 111 5 is_stmt 0 discriminator 1 view .LVU187
 662 001c A542     		cmp	r5, r4
 663 001e 15DB     		blt	.L27
 113:network.c     ****     }
 114:network.c     **** 
 115:network.c     ****     // For each layer create neurons with number of weights eqaual to the number of neurons in the 
 116:network.c     ****     for (i=1; i<num_layers; i++){
 664              		.loc 1 116 11 view .LVU188
 665 0020 0125     		movs	r5, #1
 666              	.LVL62:
 117:network.c     ****         for (j=0; j<net.layers[i - 1].num_neurons; j++){
 667              		.loc 1 117 38 view .LVU189
 668 0022 A6F1080A 		sub	r10, r6, #8
 118:network.c     ****             net.layers[i - 1].neurons[j] = create_neuron(net.layers[i].num_neurons);
 669              		.loc 1 118 30 view .LVU190
 670 0026 A6F1040B 		sub	fp, r6, #4
 671              	.LVL63:
 672              	.L28:
 116:network.c     ****         for (j=0; j<net.layers[i - 1].num_neurons; j++){
 673              		.loc 1 116 15 is_stmt 1 discriminator 1 view .LVU191
 116:network.c     ****         for (j=0; j<net.layers[i - 1].num_neurons; j++){
 674              		.loc 1 116 5 is_stmt 0 discriminator 1 view .LVU192
 675 002a A542     		cmp	r5, r4
 676 002c 3ADB     		blt	.L33
 119:network.c     ****         }
 120:network.c     ****     }
 121:network.c     ****     // Create neurons for the last layer - the number of outputs is given "by the user"
 122:network.c     ****     for (j=0; j<net.layers[num_layers - 1].num_neurons; j++){
 677              		.loc 1 122 27 view .LVU193
 678 002e 04F10054 		add	r4, r4, #536870912
 679              	.LVL64:
 680              		.loc 1 122 27 view .LVU194
 681 0032 013C     		subs	r4, r4, #1
 682              	.LVL65:
 683              		.loc 1 122 27 view .LVU195
 684 0034 06EBC404 		add	r4, r6, r4, lsl #3
 685              	.LVL66:
 123:network.c     ****         net.layers[num_layers - 1].neurons[j] = create_neuron(num_outputs);
 686              		.loc 1 123 49 view .LVU196
 687 0038 4FF01408 		mov	r8, #20
 122:network.c     ****         net.layers[num_layers - 1].neurons[j] = create_neuron(num_outputs);
 688              		.loc 1 122 11 view .LVU197
 689 003c 0026     		movs	r6, #0
 690              	.LVL67:
 691              	.L31:
 122:network.c     ****         net.layers[num_layers - 1].neurons[j] = create_neuron(num_outputs);
 692              		.loc 1 122 15 is_stmt 1 discriminator 1 view .LVU198
 122:network.c     ****         net.layers[num_layers - 1].neurons[j] = create_neuron(num_outputs);
 693              		.loc 1 122 5 is_stmt 0 discriminator 1 view .LVU199
 694 003e 2368     		ldr	r3, [r4]
 695 0040 B342     		cmp	r3, r6
 696 0042 32DC     		bgt	.L32
 124:network.c     ****     }
 125:network.c     ****     return net;
 697              		.loc 1 125 5 is_stmt 1 view .LVU200
 698              	.LVL68:
 126:network.c     **** }
 699              		.loc 1 126 1 is_stmt 0 view .LVU201
 700 0044 3846     		mov	r0, r7
 701 0046 0BB0     		add	sp, sp, #44
 702              	.LCFI9:
 703              		.cfi_remember_state
 704              		.cfi_def_cfa_offset 36
 705              		@ sp needed
 706 0048 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 707              	.LVL69:
 708              	.L27:
 709              	.LCFI10:
 710              		.cfi_restore_state
 112:network.c     ****     }
 711              		.loc 1 112 9 is_stmt 1 discriminator 3 view .LVU202
 112:network.c     ****     }
 712              		.loc 1 112 25 is_stmt 0 discriminator 3 view .LVU203
 713 004c 58F82510 		ldr	r1, [r8, r5, lsl #2]
 714 0050 5046     		mov	r0, r10
 715 0052 FFF7FEFF 		bl	create_layer
 716              	.LVL70:
 717 0056 9AE80300 		ldm	r10, {r0, r1}
 718 005a 06EBC503 		add	r3, r6, r5, lsl #3
 719 005e 83E80300 		stm	r3, {r0, r1}
 111:network.c     ****         net.layers[i] = create_layer(num_neurons[i]);
 720              		.loc 1 111 29 is_stmt 1 discriminator 3 view .LVU204
 111:network.c     ****         net.layers[i] = create_layer(num_neurons[i]);
 721              		.loc 1 111 30 is_stmt 0 discriminator 3 view .LVU205
 722 0062 0135     		adds	r5, r5, #1
 723              	.LVL71:
 111:network.c     ****         net.layers[i] = create_layer(num_neurons[i]);
 724              		.loc 1 111 30 discriminator 3 view .LVU206
 725 0064 DAE7     		b	.L26
 726              	.LVL72:
 727              	.L29:
 118:network.c     ****         }
 728              		.loc 1 118 13 is_stmt 1 discriminator 3 view .LVU207
 118:network.c     ****         }
 729              		.loc 1 118 44 is_stmt 0 discriminator 3 view .LVU208
 730 0066 5BF83530 		ldr	r3, [fp, r5, lsl #3]
 731 006a 56F83510 		ldr	r1, [r6, r5, lsl #3]
 732 006e 1422     		movs	r2, #20
 733 0070 02FB0833 		mla	r3, r2, r8, r3
 734 0074 02A8     		add	r0, sp, #8
 735 0076 0193     		str	r3, [sp, #4]
 736 0078 FFF7FEFF 		bl	create_neuron
 737              	.LVL73:
 738 007c 019B     		ldr	r3, [sp, #4]
 739 007e 0DF1080E 		add	lr, sp, #8
 740 0082 9C46     		mov	ip, r3
 741 0084 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 742 0088 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 743 008c DEF80030 		ldr	r3, [lr]
 744 0090 CCF80030 		str	r3, [ip]
 117:network.c     ****             net.layers[i - 1].neurons[j] = create_neuron(net.layers[i].num_neurons);
 745              		.loc 1 117 52 is_stmt 1 discriminator 3 view .LVU209
 117:network.c     ****             net.layers[i - 1].neurons[j] = create_neuron(net.layers[i].num_neurons);
 746              		.loc 1 117 53 is_stmt 0 discriminator 3 view .LVU210
 747 0094 08F10108 		add	r8, r8, #1
 748              	.LVL74:
 749              	.L30:
 117:network.c     ****             net.layers[i - 1].neurons[j] = create_neuron(net.layers[i].num_neurons);
 750              		.loc 1 117 19 is_stmt 1 discriminator 1 view .LVU211
 117:network.c     ****             net.layers[i - 1].neurons[j] = create_neuron(net.layers[i].num_neurons);
 751              		.loc 1 117 9 is_stmt 0 discriminator 1 view .LVU212
 752 0098 5AF83530 		ldr	r3, [r10, r5, lsl #3]
 753 009c 4345     		cmp	r3, r8
 754 009e E2DC     		bgt	.L29
 116:network.c     ****         for (j=0; j<net.layers[i - 1].num_neurons; j++){
 755              		.loc 1 116 29 is_stmt 1 discriminator 2 view .LVU213
 116:network.c     ****         for (j=0; j<net.layers[i - 1].num_neurons; j++){
 756              		.loc 1 116 30 is_stmt 0 discriminator 2 view .LVU214
 757 00a0 0135     		adds	r5, r5, #1
 758              	.LVL75:
 116:network.c     ****         for (j=0; j<net.layers[i - 1].num_neurons; j++){
 759              		.loc 1 116 30 discriminator 2 view .LVU215
 760 00a2 C2E7     		b	.L28
 761              	.LVL76:
 762              	.L33:
 117:network.c     ****             net.layers[i - 1].neurons[j] = create_neuron(net.layers[i].num_neurons);
 763              		.loc 1 117 15 view .LVU216
 764 00a4 4FF00008 		mov	r8, #0
 765 00a8 F6E7     		b	.L30
 766              	.LVL77:
 767              	.L32:
 123:network.c     ****     }
 768              		.loc 1 123 9 is_stmt 1 discriminator 3 view .LVU217
 123:network.c     ****     }
 769              		.loc 1 123 49 is_stmt 0 discriminator 3 view .LVU218
 770 00aa 4946     		mov	r1, r9
 771 00ac 02A8     		add	r0, sp, #8
 772 00ae 6568     		ldr	r5, [r4, #4]
 773 00b0 FFF7FEFF 		bl	create_neuron
 774              	.LVL78:
 775 00b4 0DF1080C 		add	ip, sp, #8
 776 00b8 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 777 00bc 08FB0655 		mla	r5, r8, r6, r5
 778 00c0 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 779 00c2 DCF80030 		ldr	r3, [ip]
 780 00c6 2B60     		str	r3, [r5]
 122:network.c     ****         net.layers[num_layers - 1].neurons[j] = create_neuron(num_outputs);
 781              		.loc 1 122 57 is_stmt 1 discriminator 3 view .LVU219
 122:network.c     ****         net.layers[num_layers - 1].neurons[j] = create_neuron(num_outputs);
 782              		.loc 1 122 58 is_stmt 0 discriminator 3 view .LVU220
 783 00c8 0136     		adds	r6, r6, #1
 784              	.LVL79:
 122:network.c     ****         net.layers[num_layers - 1].neurons[j] = create_neuron(num_outputs);
 785              		.loc 1 122 58 discriminator 3 view .LVU221
 786 00ca B8E7     		b	.L31
 787              		.cfi_endproc
 788              	.LFE10:
 790              		.section	.text.forward_layer,"ax",%progbits
 791              		.align	1
 792              		.global	forward_layer
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
 796              		.fpu softvfp
 798              	forward_layer:
 799              	.LVL80:
 800              	.LFB11:
 127:network.c     **** 
 128:network.c     **** void forward_layer(network net, int layer_idx){
 801              		.loc 1 128 47 is_stmt 1 view -0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 8
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 129:network.c     ****     
 130:network.c     **** }
 806              		.loc 1 130 1 view .LVU223
 128:network.c     ****     
 807              		.loc 1 128 47 is_stmt 0 view .LVU224
 808 0000 82B0     		sub	sp, sp, #8
 809              	.LCFI11:
 810              		.cfi_def_cfa_offset 8
 128:network.c     ****     
 811              		.loc 1 128 47 view .LVU225
 812 0002 02AB     		add	r3, sp, #8
 813 0004 03E90300 		stmdb	r3, {r0, r1}
 814              		.loc 1 130 1 view .LVU226
 815 0008 02B0     		add	sp, sp, #8
 816              	.LCFI12:
 817              		.cfi_def_cfa_offset 0
 818              		@ sp needed
 819 000a 7047     		bx	lr
 820              		.cfi_endproc
 821              	.LFE11:
 823              		.section	.text.generate_random_indices,"ax",%progbits
 824              		.align	1
 825              		.global	generate_random_indices
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
 829              		.fpu softvfp
 831              	generate_random_indices:
 832              	.LFB12:
 131:network.c     **** 
 132:network.c     **** int ****generate_random_indices(network net) {
 833              		.loc 1 132 46 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 24
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 838              	.LCFI13:
 839              		.cfi_def_cfa_offset 36
 840              		.cfi_offset 4, -36
 841              		.cfi_offset 5, -32
 842              		.cfi_offset 6, -28
 843              		.cfi_offset 7, -24
 844              		.cfi_offset 8, -20
 845              		.cfi_offset 9, -16
 846              		.cfi_offset 10, -12
 847              		.cfi_offset 11, -8
 848              		.cfi_offset 14, -4
 133:network.c     ****     int i, j; //, k;
 134:network.c     **** 
 135:network.c     ****     int **rand_n_indices = malloc((net.num_layers - 1) * sizeof(int*));
 849              		.loc 1 135 51 is_stmt 0 view .LVU228
 850 0004 441E     		subs	r4, r0, #1
 132:network.c     ****     int i, j; //, k;
 851              		.loc 1 132 46 view .LVU229
 852 0006 87B0     		sub	sp, sp, #28
 853              	.LCFI14:
 854              		.cfi_def_cfa_offset 64
 132:network.c     ****     int i, j; //, k;
 855              		.loc 1 132 46 view .LVU230
 856 0008 02AB     		add	r3, sp, #8
 857              		.loc 1 135 28 view .LVU231
 858 000a A400     		lsls	r4, r4, #2
 132:network.c     ****     int i, j; //, k;
 859              		.loc 1 132 46 view .LVU232
 860 000c 83E80300 		stm	r3, {r0, r1}
 861 0010 8146     		mov	r9, r0
 862              	.LVL81:
 863              		.loc 1 135 28 view .LVU233
 864 0012 2046     		mov	r0, r4
 865              	.LVL82:
 866              		.loc 1 135 28 view .LVU234
 867 0014 0F46     		mov	r7, r1
 868              	.LVL83:
 133:network.c     ****     int i, j; //, k;
 869              		.loc 1 133 5 is_stmt 1 view .LVU235
 870              		.loc 1 135 5 view .LVU236
 871              		.loc 1 135 28 is_stmt 0 view .LVU237
 872 0016 FFF7FEFF 		bl	malloc
 873              	.LVL84:
 874              		.loc 1 135 28 view .LVU238
 875 001a 0546     		mov	r5, r0
 876              		.loc 1 135 11 view .LVU239
 877 001c 0590     		str	r0, [sp, #20]
 136:network.c     ****     int ***rand_ws_indices  = malloc((net.num_layers - 1) * sizeof(int**));
 878              		.loc 1 136 5 is_stmt 1 view .LVU240
 879              		.loc 1 136 31 is_stmt 0 view .LVU241
 880 001e 2046     		mov	r0, r4
 881 0020 FFF7FEFF 		bl	malloc
 882              	.LVL85:
 883 0024 043D     		subs	r5, r5, #4
 884 0026 0646     		mov	r6, r0
 885              	.LVL86:
 137:network.c     ****     
 138:network.c     ****     for (i=1; i<net.num_layers; i++){
 886              		.loc 1 138 5 is_stmt 1 view .LVU242
 887              		.loc 1 138 5 is_stmt 0 view .LVU243
 888 0028 A0F1040A 		sub	r10, r0, #4
 889              		.loc 1 138 11 view .LVU244
 890 002c 0124     		movs	r4, #1
 891              	.LBB25:
 892              	.LBB26:
 139:network.c     ****         // for each layer
 140:network.c     ****         int *rand_n_idx = get_random_indices(net.layers[i].num_neurons);
 141:network.c     ****         rand_n_indices[i - 1] = rand_n_idx;
 142:network.c     **** 
 143:network.c     **** 
 144:network.c     ****         int **rand_w_indices = malloc((net.layers[i].num_neurons) * sizeof(int*));
 145:network.c     ****         // for each neuron in this layer
 146:network.c     ****         for (j=0; j<net.layers[i].num_neurons; j++){
 147:network.c     ****             int *rand_w_idx = get_random_indices(net.layers[i - 1].num_neurons);
 893              		.loc 1 147 31 view .LVU245
 894 002e A7F1080B 		sub	fp, r7, #8
 895              	.LVL87:
 896              	.L36:
 897              		.loc 1 147 31 view .LVU246
 898              	.LBE26:
 899              	.LBE25:
 138:network.c     ****         // for each layer
 900              		.loc 1 138 15 is_stmt 1 discriminator 1 view .LVU247
 138:network.c     ****         // for each layer
 901              		.loc 1 138 5 is_stmt 0 discriminator 1 view .LVU248
 902 0032 4C45     		cmp	r4, r9
 903 0034 08DB     		blt	.L39
 148:network.c     ****             rand_w_indices[j] = rand_w_idx;
 149:network.c     ****         }
 150:network.c     ****         rand_ws_indices[i - 1] = rand_w_indices;
 151:network.c     ****     }
 152:network.c     **** 
 153:network.c     ****     int ***rand_n_indices_ptr = &rand_n_indices;
 904              		.loc 1 153 5 is_stmt 1 view .LVU249
 905              	.LVL88:
 154:network.c     **** 
 155:network.c     ****     int ****returned_ptr = malloc(2 * sizeof(int***));
 906              		.loc 1 155 5 view .LVU250
 907              		.loc 1 155 28 is_stmt 0 view .LVU251
 908 0036 0820     		movs	r0, #8
 909 0038 FFF7FEFF 		bl	malloc
 910              	.LVL89:
 156:network.c     ****     returned_ptr[0] = rand_n_indices_ptr;
 911              		.loc 1 156 5 is_stmt 1 view .LVU252
 912              		.loc 1 156 21 is_stmt 0 view .LVU253
 913 003c 05AA     		add	r2, sp, #20
 914              	.LVL90:
 157:network.c     ****     returned_ptr[1] = rand_ws_indices;
 915              		.loc 1 157 21 view .LVU254
 916 003e C0E90026 		strd	r2, r6, [r0]
 158:network.c     **** 
 159:network.c     ****     return returned_ptr;
 917              		.loc 1 159 5 is_stmt 1 view .LVU255
 160:network.c     **** }
 918              		.loc 1 160 1 is_stmt 0 view .LVU256
 919 0042 07B0     		add	sp, sp, #28
 920              	.LCFI15:
 921              		.cfi_remember_state
 922              		.cfi_def_cfa_offset 36
 923              		@ sp needed
 924 0044 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 925              	.LVL91:
 926              	.L39:
 927              	.LCFI16:
 928              		.cfi_restore_state
 929              	.LBB28:
 140:network.c     ****         rand_n_indices[i - 1] = rand_n_idx;
 930              		.loc 1 140 9 is_stmt 1 view .LVU257
 140:network.c     ****         rand_n_indices[i - 1] = rand_n_idx;
 931              		.loc 1 140 27 is_stmt 0 view .LVU258
 932 0048 57F83400 		ldr	r0, [r7, r4, lsl #3]
 933 004c FFF7FEFF 		bl	get_random_indices
 934              	.LVL92:
 141:network.c     **** 
 935              		.loc 1 141 9 is_stmt 1 view .LVU259
 141:network.c     **** 
 936              		.loc 1 141 31 is_stmt 0 view .LVU260
 937 0050 45F8040F 		str	r0, [r5, #4]!
 144:network.c     ****         // for each neuron in this layer
 938              		.loc 1 144 9 is_stmt 1 view .LVU261
 144:network.c     ****         // for each neuron in this layer
 939              		.loc 1 144 32 is_stmt 0 view .LVU262
 940 0054 57F83400 		ldr	r0, [r7, r4, lsl #3]
 941              	.LVL93:
 144:network.c     ****         // for each neuron in this layer
 942              		.loc 1 144 32 view .LVU263
 943 0058 8000     		lsls	r0, r0, #2
 944 005a FFF7FEFF 		bl	malloc
 945              	.LVL94:
 146:network.c     ****             int *rand_w_idx = get_random_indices(net.layers[i - 1].num_neurons);
 946              		.loc 1 146 15 view .LVU264
 947 005e 0023     		movs	r3, #0
 144:network.c     ****         // for each neuron in this layer
 948              		.loc 1 144 32 view .LVU265
 949 0060 8046     		mov	r8, r0
 950              	.LVL95:
 146:network.c     ****             int *rand_w_idx = get_random_indices(net.layers[i - 1].num_neurons);
 951              		.loc 1 146 9 is_stmt 1 view .LVU266
 952              	.L37:
 146:network.c     ****             int *rand_w_idx = get_random_indices(net.layers[i - 1].num_neurons);
 953              		.loc 1 146 19 discriminator 1 view .LVU267
 146:network.c     ****             int *rand_w_idx = get_random_indices(net.layers[i - 1].num_neurons);
 954              		.loc 1 146 9 is_stmt 0 discriminator 1 view .LVU268
 955 0062 57F83420 		ldr	r2, [r7, r4, lsl #3]
 956 0066 9A42     		cmp	r2, r3
 957 0068 03DC     		bgt	.L38
 150:network.c     ****     }
 958              		.loc 1 150 9 is_stmt 1 discriminator 2 view .LVU269
 150:network.c     ****     }
 959              		.loc 1 150 32 is_stmt 0 discriminator 2 view .LVU270
 960 006a 4AF8048F 		str	r8, [r10, #4]!
 961              	.LBE28:
 138:network.c     ****         // for each layer
 962              		.loc 1 138 33 is_stmt 1 discriminator 2 view .LVU271
 138:network.c     ****         // for each layer
 963              		.loc 1 138 34 is_stmt 0 discriminator 2 view .LVU272
 964 006e 0134     		adds	r4, r4, #1
 965              	.LVL96:
 138:network.c     ****         // for each layer
 966              		.loc 1 138 34 discriminator 2 view .LVU273
 967 0070 DFE7     		b	.L36
 968              	.L38:
 969              	.LBB29:
 970              	.LBB27:
 147:network.c     ****             rand_w_indices[j] = rand_w_idx;
 971              		.loc 1 147 31 discriminator 3 view .LVU274
 972 0072 5BF83400 		ldr	r0, [fp, r4, lsl #3]
 973 0076 0193     		str	r3, [sp, #4]
 147:network.c     ****             rand_w_indices[j] = rand_w_idx;
 974              		.loc 1 147 13 is_stmt 1 discriminator 3 view .LVU275
 147:network.c     ****             rand_w_indices[j] = rand_w_idx;
 975              		.loc 1 147 31 is_stmt 0 discriminator 3 view .LVU276
 976 0078 FFF7FEFF 		bl	get_random_indices
 977              	.LVL97:
 148:network.c     ****         }
 978              		.loc 1 148 13 is_stmt 1 discriminator 3 view .LVU277
 148:network.c     ****         }
 979              		.loc 1 148 31 is_stmt 0 discriminator 3 view .LVU278
 980 007c 019B     		ldr	r3, [sp, #4]
 981 007e 48F82300 		str	r0, [r8, r3, lsl #2]
 982              	.LBE27:
 146:network.c     ****             int *rand_w_idx = get_random_indices(net.layers[i - 1].num_neurons);
 983              		.loc 1 146 48 is_stmt 1 discriminator 3 view .LVU279
 146:network.c     ****             int *rand_w_idx = get_random_indices(net.layers[i - 1].num_neurons);
 984              		.loc 1 146 49 is_stmt 0 discriminator 3 view .LVU280
 985 0082 0133     		adds	r3, r3, #1
 986              	.LVL98:
 146:network.c     ****             int *rand_w_idx = get_random_indices(net.layers[i - 1].num_neurons);
 987              		.loc 1 146 49 discriminator 3 view .LVU281
 988 0084 EDE7     		b	.L37
 989              	.LBE29:
 990              		.cfi_endproc
 991              	.LFE12:
 993              		.section	.text.get_random_binary_indices,"ax",%progbits
 994              		.align	1
 995              		.global	get_random_binary_indices
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 999              		.fpu softvfp
 1001              	get_random_binary_indices:
 1002              	.LVL99:
 1003              	.LFB14:
 161:network.c     **** 
 162:network.c     **** 
 163:network.c     **** int ***generate_random_dummy_operations(network net){
 164:network.c     ****     int i, j;
 165:network.c     ****     int ***dummy_ops = malloc((net.num_layers - 1) * sizeof(int**));
 166:network.c     **** 
 167:network.c     ****     for (i=1; i<net.num_layers; i++){
 168:network.c     ****         int **layer_wise_dummy_ops = malloc((net.layers[i].num_neurons) * sizeof(int*));
 169:network.c     ****         // for each neuron in this layer
 170:network.c     ****         for (j=0; j<net.layers[i].num_neurons; j++){
 171:network.c     ****             int *neuron_wise_dummy_ops_indices = get_random_binary_indices(net.layers[i - 1].num_ne
 172:network.c     ****             layer_wise_dummy_ops[j] = neuron_wise_dummy_ops_indices;
 173:network.c     ****         }
 174:network.c     ****         dummy_ops[i - 1] = layer_wise_dummy_ops;
 175:network.c     ****     }
 176:network.c     ****     return dummy_ops;
 177:network.c     **** }
 178:network.c     **** 
 179:network.c     **** int* get_random_binary_indices(int size){
 1004              		.loc 1 179 41 is_stmt 1 view -0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 180:network.c     ****     int *indices;
 1008              		.loc 1 180 5 view .LVU283
 181:network.c     ****     for (int i=0; i<size; i++){
 1009              		.loc 1 181 5 view .LVU284
 1010              	.LBB30:
 1011              		.loc 1 181 10 view .LVU285
 1012              		.loc 1 181 10 is_stmt 0 view .LVU286
 1013              	.LBE30:
 179:network.c     ****     int *indices;
 1014              		.loc 1 179 41 view .LVU287
 1015 0000 38B5     		push	{r3, r4, r5, lr}
 1016              	.LCFI17:
 1017              		.cfi_def_cfa_offset 16
 1018              		.cfi_offset 3, -16
 1019              		.cfi_offset 4, -12
 1020              		.cfi_offset 5, -8
 1021              		.cfi_offset 14, -4
 179:network.c     ****     int *indices;
 1022              		.loc 1 179 41 view .LVU288
 1023 0002 0546     		mov	r5, r0
 1024              	.LBB31:
 1025              		.loc 1 181 14 view .LVU289
 1026 0004 0024     		movs	r4, #0
 1027              	.LVL100:
 1028              	.L41:
 1029              		.loc 1 181 19 is_stmt 1 discriminator 1 view .LVU290
 1030              		.loc 1 181 5 is_stmt 0 discriminator 1 view .LVU291
 1031 0006 AC42     		cmp	r4, r5
 1032 0008 01DB     		blt	.L42
 1033              	.LBE31:
 182:network.c     ****         indices[i] = rand() % 2;
 183:network.c     ****     }
 184:network.c     ****     return indices;
 1034              		.loc 1 184 5 is_stmt 1 view .LVU292
 185:network.c     **** }
 1035              		.loc 1 185 1 is_stmt 0 view .LVU293
 1036 000a 0020     		movs	r0, #0
 1037 000c 38BD     		pop	{r3, r4, r5, pc}
 1038              	.LVL101:
 1039              	.L42:
 1040              	.LBB32:
 182:network.c     ****         indices[i] = rand() % 2;
 1041              		.loc 1 182 9 is_stmt 1 discriminator 3 view .LVU294
 182:network.c     ****         indices[i] = rand() % 2;
 1042              		.loc 1 182 22 is_stmt 0 discriminator 3 view .LVU295
 1043 000e FFF7FEFF 		bl	rand
 1044              	.LVL102:
 182:network.c     ****         indices[i] = rand() % 2;
 1045              		.loc 1 182 29 discriminator 3 view .LVU296
 1046 0012 031E     		subs	r3, r0, #0
 1047 0014 03F00103 		and	r3, r3, #1
 182:network.c     ****         indices[i] = rand() % 2;
 1048              		.loc 1 182 20 discriminator 3 view .LVU297
 1049 0018 4FF00002 		mov	r2, #0
 182:network.c     ****         indices[i] = rand() % 2;
 1050              		.loc 1 182 29 discriminator 3 view .LVU298
 1051 001c B8BF     		it	lt
 1052 001e 5B42     		rsblt	r3, r3, #0
 182:network.c     ****         indices[i] = rand() % 2;
 1053              		.loc 1 182 20 discriminator 3 view .LVU299
 1054 0020 42F82430 		str	r3, [r2, r4, lsl #2]
 181:network.c     ****         indices[i] = rand() % 2;
 1055              		.loc 1 181 27 is_stmt 1 discriminator 3 view .LVU300
 181:network.c     ****         indices[i] = rand() % 2;
 1056              		.loc 1 181 28 is_stmt 0 discriminator 3 view .LVU301
 1057 0024 0134     		adds	r4, r4, #1
 1058              	.LVL103:
 181:network.c     ****         indices[i] = rand() % 2;
 1059              		.loc 1 181 28 discriminator 3 view .LVU302
 1060 0026 EEE7     		b	.L41
 1061              	.LBE32:
 1062              		.cfi_endproc
 1063              	.LFE14:
 1065              		.section	.text.generate_random_dummy_operations,"ax",%progbits
 1066              		.align	1
 1067              		.global	generate_random_dummy_operations
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu softvfp
 1073              	generate_random_dummy_operations:
 1074              	.LFB13:
 163:network.c     ****     int i, j;
 1075              		.loc 1 163 53 is_stmt 1 view -0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079 0000 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 1080              	.LCFI18:
 1081              		.cfi_def_cfa_offset 40
 1082              		.cfi_offset 4, -32
 1083              		.cfi_offset 5, -28
 1084              		.cfi_offset 6, -24
 1085              		.cfi_offset 7, -20
 1086              		.cfi_offset 8, -16
 1087              		.cfi_offset 9, -12
 1088              		.cfi_offset 10, -8
 1089              		.cfi_offset 14, -4
 163:network.c     ****     int i, j;
 1090              		.loc 1 163 53 is_stmt 0 view .LVU304
 1091 0004 02AB     		add	r3, sp, #8
 1092 0006 03E90300 		stmdb	r3, {r0, r1}
 1093 000a 8046     		mov	r8, r0
 1094              	.LVL104:
 165:network.c     **** 
 1095              		.loc 1 165 47 view .LVU305
 1096 000c 0138     		subs	r0, r0, #1
 1097              	.LVL105:
 165:network.c     **** 
 1098              		.loc 1 165 24 view .LVU306
 1099 000e 8000     		lsls	r0, r0, #2
 1100 0010 0C46     		mov	r4, r1
 1101              	.LVL106:
 164:network.c     ****     int ***dummy_ops = malloc((net.num_layers - 1) * sizeof(int**));
 1102              		.loc 1 164 5 is_stmt 1 view .LVU307
 165:network.c     **** 
 1103              		.loc 1 165 5 view .LVU308
 165:network.c     **** 
 1104              		.loc 1 165 24 is_stmt 0 view .LVU309
 1105 0012 FFF7FEFF 		bl	malloc
 1106              	.LVL107:
 167:network.c     ****         int **layer_wise_dummy_ops = malloc((net.layers[i].num_neurons) * sizeof(int*));
 1107              		.loc 1 167 11 view .LVU310
 1108 0016 4FF0010A 		mov	r10, #1
 165:network.c     **** 
 1109              		.loc 1 165 24 view .LVU311
 1110 001a 0546     		mov	r5, r0
 1111              	.LVL108:
 167:network.c     ****         int **layer_wise_dummy_ops = malloc((net.layers[i].num_neurons) * sizeof(int*));
 1112              		.loc 1 167 5 is_stmt 1 view .LVU312
 167:network.c     ****         int **layer_wise_dummy_ops = malloc((net.layers[i].num_neurons) * sizeof(int*));
 1113              		.loc 1 167 5 is_stmt 0 view .LVU313
 1114 001c A0F10409 		sub	r9, r0, #4
 1115              	.LVL109:
 1116              	.L44:
 167:network.c     ****         int **layer_wise_dummy_ops = malloc((net.layers[i].num_neurons) * sizeof(int*));
 1117              		.loc 1 167 15 is_stmt 1 discriminator 1 view .LVU314
 167:network.c     ****         int **layer_wise_dummy_ops = malloc((net.layers[i].num_neurons) * sizeof(int*));
 1118              		.loc 1 167 5 is_stmt 0 discriminator 1 view .LVU315
 1119 0020 C245     		cmp	r10, r8
 1120 0022 03DB     		blt	.L47
 176:network.c     **** }
 1121              		.loc 1 176 5 is_stmt 1 view .LVU316
 177:network.c     **** 
 1122              		.loc 1 177 1 is_stmt 0 view .LVU317
 1123 0024 2846     		mov	r0, r5
 1124 0026 02B0     		add	sp, sp, #8
 1125              	.LCFI19:
 1126              		.cfi_remember_state
 1127              		.cfi_def_cfa_offset 32
 1128              	.LVL110:
 177:network.c     **** 
 1129              		.loc 1 177 1 view .LVU318
 1130              		@ sp needed
 1131 0028 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1132              	.LVL111:
 1133              	.L47:
 1134              	.LCFI20:
 1135              		.cfi_restore_state
 1136              	.LBB33:
 168:network.c     ****         // for each neuron in this layer
 1137              		.loc 1 168 9 is_stmt 1 view .LVU319
 168:network.c     ****         // for each neuron in this layer
 1138              		.loc 1 168 38 is_stmt 0 view .LVU320
 1139 002c A068     		ldr	r0, [r4, #8]
 1140 002e 8000     		lsls	r0, r0, #2
 1141 0030 FFF7FEFF 		bl	malloc
 1142              	.LVL112:
 170:network.c     ****             int *neuron_wise_dummy_ops_indices = get_random_binary_indices(net.layers[i - 1].num_ne
 1143              		.loc 1 170 15 view .LVU321
 1144 0034 0027     		movs	r7, #0
 168:network.c     ****         // for each neuron in this layer
 1145              		.loc 1 168 38 view .LVU322
 1146 0036 0646     		mov	r6, r0
 1147              	.LVL113:
 170:network.c     ****             int *neuron_wise_dummy_ops_indices = get_random_binary_indices(net.layers[i - 1].num_ne
 1148              		.loc 1 170 9 is_stmt 1 view .LVU323
 1149              	.L45:
 170:network.c     ****             int *neuron_wise_dummy_ops_indices = get_random_binary_indices(net.layers[i - 1].num_ne
 1150              		.loc 1 170 19 discriminator 1 view .LVU324
 170:network.c     ****             int *neuron_wise_dummy_ops_indices = get_random_binary_indices(net.layers[i - 1].num_ne
 1151              		.loc 1 170 9 is_stmt 0 discriminator 1 view .LVU325
 1152 0038 A368     		ldr	r3, [r4, #8]
 1153 003a BB42     		cmp	r3, r7
 1154 003c 05DC     		bgt	.L46
 174:network.c     ****     }
 1155              		.loc 1 174 9 is_stmt 1 discriminator 2 view .LVU326
 174:network.c     ****     }
 1156              		.loc 1 174 26 is_stmt 0 discriminator 2 view .LVU327
 1157 003e 49F8046F 		str	r6, [r9, #4]!
 1158              	.LBE33:
 167:network.c     ****         int **layer_wise_dummy_ops = malloc((net.layers[i].num_neurons) * sizeof(int*));
 1159              		.loc 1 167 33 is_stmt 1 discriminator 2 view .LVU328
 167:network.c     ****         int **layer_wise_dummy_ops = malloc((net.layers[i].num_neurons) * sizeof(int*));
 1160              		.loc 1 167 34 is_stmt 0 discriminator 2 view .LVU329
 1161 0042 0AF1010A 		add	r10, r10, #1
 1162              	.LVL114:
 167:network.c     ****         int **layer_wise_dummy_ops = malloc((net.layers[i].num_neurons) * sizeof(int*));
 1163              		.loc 1 167 34 discriminator 2 view .LVU330
 1164 0046 0834     		adds	r4, r4, #8
 1165 0048 EAE7     		b	.L44
 1166              	.L46:
 1167              	.LBB35:
 1168              	.LBB34:
 171:network.c     ****             layer_wise_dummy_ops[j] = neuron_wise_dummy_ops_indices;
 1169              		.loc 1 171 13 is_stmt 1 discriminator 3 view .LVU331
 171:network.c     ****             layer_wise_dummy_ops[j] = neuron_wise_dummy_ops_indices;
 1170              		.loc 1 171 50 is_stmt 0 discriminator 3 view .LVU332
 1171 004a 2068     		ldr	r0, [r4]
 1172 004c FFF7FEFF 		bl	get_random_binary_indices
 1173              	.LVL115:
 172:network.c     ****         }
 1174              		.loc 1 172 13 is_stmt 1 discriminator 3 view .LVU333
 172:network.c     ****         }
 1175              		.loc 1 172 37 is_stmt 0 discriminator 3 view .LVU334
 1176 0050 46F82700 		str	r0, [r6, r7, lsl #2]
 1177              	.LBE34:
 170:network.c     ****             int *neuron_wise_dummy_ops_indices = get_random_binary_indices(net.layers[i - 1].num_ne
 1178              		.loc 1 170 48 is_stmt 1 discriminator 3 view .LVU335
 170:network.c     ****             int *neuron_wise_dummy_ops_indices = get_random_binary_indices(net.layers[i - 1].num_ne
 1179              		.loc 1 170 49 is_stmt 0 discriminator 3 view .LVU336
 1180 0054 0137     		adds	r7, r7, #1
 1181              	.LVL116:
 170:network.c     ****             int *neuron_wise_dummy_ops_indices = get_random_binary_indices(net.layers[i - 1].num_ne
 1182              		.loc 1 170 49 discriminator 3 view .LVU337
 1183 0056 EFE7     		b	.L45
 1184              	.LBE35:
 1185              		.cfi_endproc
 1186              	.LFE13:
 1188              		.global	__aeabi_fadd
 1189              		.global	__aeabi_fcmplt
 1190              		.global	__aeabi_f2d
 1191              		.global	__aeabi_dadd
 1192              		.global	__aeabi_ddiv
 1193              		.global	__aeabi_d2f
 1194              		.section	.text.forward_shuffled_NO,"ax",%progbits
 1195              		.align	1
 1196              		.global	forward_shuffled_NO
 1197              		.syntax unified
 1198              		.thumb
 1199              		.thumb_func
 1200              		.fpu softvfp
 1202              	forward_shuffled_NO:
 1203              	.LVL117:
 1204              	.LFB15:
 186:network.c     **** 
 187:network.c     **** void forward_shuffled_NO(network net, int**** random_indices, int dummy_operations) {
 1205              		.loc 1 187 85 is_stmt 1 view -0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 48
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              		.loc 1 187 85 is_stmt 0 view .LVU339
 1210 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1211              	.LCFI21:
 1212              		.cfi_def_cfa_offset 36
 1213              		.cfi_offset 4, -36
 1214              		.cfi_offset 5, -32
 1215              		.cfi_offset 6, -28
 1216              		.cfi_offset 7, -24
 1217              		.cfi_offset 8, -20
 1218              		.cfi_offset 9, -16
 1219              		.cfi_offset 10, -12
 1220              		.cfi_offset 11, -8
 1221              		.cfi_offset 14, -4
 1222 0004 8DB0     		sub	sp, sp, #52
 1223              	.LCFI22:
 1224              		.cfi_def_cfa_offset 88
 1225              		.loc 1 187 85 view .LVU340
 1226 0006 06AB     		add	r3, sp, #24
 1227              	.LVL118:
 1228              		.loc 1 187 85 view .LVU341
 1229 0008 83E80300 		stm	r3, {r0, r1}
 188:network.c     ****     //int i, j, k,
 189:network.c     ****     int nidx = 0;
 190:network.c     ****     int *rand_n_idx, *rand_w_idx;
 191:network.c     **** 
 192:network.c     ****     int **rand_n_indices = *random_indices[0];
 1230              		.loc 1 192 11 view .LVU342
 1231 000c 1368     		ldr	r3, [r2]
 1232 000e 1B68     		ldr	r3, [r3]
 1233 0010 0293     		str	r3, [sp, #8]
 193:network.c     ****     int ***rand_ws_indices = random_indices[1];
 1234              		.loc 1 193 12 view .LVU343
 1235 0012 5368     		ldr	r3, [r2, #4]
 1236 0014 0393     		str	r3, [sp, #12]
 1237              	.LBB36:
 194:network.c     **** 
 195:network.c     ****     //uint8_t result, scmd = 16;
 196:network.c     ****     // for each layer
 197:network.c     ****     for (volatile int i=1; i<net.num_layers; i++){
 1238              		.loc 1 197 23 view .LVU344
 1239 0016 0123     		movs	r3, #1
 1240 0018 8246     		mov	r10, r0
 1241              	.LVL119:
 1242              		.loc 1 197 23 view .LVU345
 1243 001a 0C46     		mov	r4, r1
 1244              	.LVL120:
 1245              		.loc 1 197 23 view .LVU346
 1246              	.LBE36:
 189:network.c     ****     int *rand_n_idx, *rand_w_idx;
 1247              		.loc 1 189 5 is_stmt 1 view .LVU347
 190:network.c     **** 
 1248              		.loc 1 190 5 view .LVU348
 192:network.c     ****     int ***rand_ws_indices = random_indices[1];
 1249              		.loc 1 192 5 view .LVU349
 193:network.c     **** 
 1250              		.loc 1 193 5 view .LVU350
 1251              		.loc 1 197 5 view .LVU351
 1252              	.LBB44:
 1253              		.loc 1 197 10 view .LVU352
 1254              		.loc 1 197 23 is_stmt 0 view .LVU353
 1255 001c 0993     		str	r3, [sp, #36]
 1256              	.LBB37:
 198:network.c     ****         
 199:network.c     ****         rand_n_idx = rand_n_indices[i - 1];
 200:network.c     ****         // for each neuron in this layer
 201:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 202:network.c     ****             nidx = rand_n_idx[j];  
 203:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 204:network.c     **** 
 205:network.c     **** 
 206:network.c     ****             rand_w_idx = rand_ws_indices[i - 1][j];
 207:network.c     ****             // for all neurons on the previous layer
 208:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 209:network.c     ****                 
 210:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 211:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 212:network.c     ****                 // We are looking for THIS MULTIPLICATION
 213:network.c     ****             }
 214:network.c     ****             //get a values
 215:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 216:network.c     ****             //apply relu
 217:network.c     ****             if(i < net.num_layers-1){
 218:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1257              		.loc 1 218 19 view .LVU354
 1258 001e 4FF0000B 		mov	fp, #0
 1259              	.LVL121:
 1260              	.L49:
 1261              		.loc 1 218 19 view .LVU355
 1262              	.LBE37:
 197:network.c     ****         
 1263              		.loc 1 197 28 is_stmt 1 discriminator 1 view .LVU356
 197:network.c     ****         
 1264              		.loc 1 197 29 is_stmt 0 discriminator 1 view .LVU357
 1265 0022 099B     		ldr	r3, [sp, #36]
 197:network.c     ****         
 1266              		.loc 1 197 5 discriminator 1 view .LVU358
 1267 0024 5345     		cmp	r3, r10
 1268 0026 02DB     		blt	.L58
 1269              	.LBE44:
 219:network.c     ****                 {
 220:network.c     ****                     net.layers[i].neurons[nidx].a = 0;
 221:network.c     ****                 }
 222:network.c     **** 
 223:network.c     ****                 else
 224:network.c     ****                 {
 225:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 226:network.c     ****                 }
 227:network.c     ****             }
 228:network.c     ****             //apply sigmoid to the last layer
 229:network.c     ****             else{
 230:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 231:network.c     ****             }
 232:network.c     ****         }
 233:network.c     **** 
 234:network.c     ****         //OPTIONAL DUMMY OPERATIONS
 235:network.c     ****         //if (dummy_operations > 0){
 236:network.c     ****         //    for (volatile int dummy_i = 0; dummy_i<10; dummy_i++) {
 237:network.c     ****         //        result = scmd *scmd;
 238:network.c     ****         //        result = scmd *scmd;
 239:network.c     ****         //        result = scmd *scmd;
 240:network.c     ****         //    }
 241:network.c     ****         //}   
 242:network.c     ****     }
 243:network.c     **** }
 1270              		.loc 1 243 1 view .LVU359
 1271 0028 0DB0     		add	sp, sp, #52
 1272              	.LCFI23:
 1273              		.cfi_remember_state
 1274              		.cfi_def_cfa_offset 36
 1275              		@ sp needed
 1276 002a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1277              	.LVL122:
 1278              	.L58:
 1279              	.LCFI24:
 1280              		.cfi_restore_state
 1281              	.LBB45:
 199:network.c     ****         // for each neuron in this layer
 1282              		.loc 1 199 9 is_stmt 1 view .LVU360
 199:network.c     ****         // for each neuron in this layer
 1283              		.loc 1 199 36 is_stmt 0 view .LVU361
 1284 002e 099B     		ldr	r3, [sp, #36]
 199:network.c     ****         // for each neuron in this layer
 1285              		.loc 1 199 20 view .LVU362
 1286 0030 029A     		ldr	r2, [sp, #8]
 199:network.c     ****         // for each neuron in this layer
 1287              		.loc 1 199 36 view .LVU363
 1288 0032 03F18043 		add	r3, r3, #1073741824
 1289 0036 013B     		subs	r3, r3, #1
 1290              	.LBB41:
 203:network.c     **** 
 1291              		.loc 1 203 66 view .LVU364
 1292 0038 1427     		movs	r7, #20
 1293              	.LBE41:
 199:network.c     ****         // for each neuron in this layer
 1294              		.loc 1 199 20 view .LVU365
 1295 003a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1296 003e 0493     		str	r3, [sp, #16]
 1297              	.LVL123:
 201:network.c     ****             nidx = rand_n_idx[j];  
 1298              		.loc 1 201 9 is_stmt 1 view .LVU366
 1299              	.LBB42:
 201:network.c     ****             nidx = rand_n_idx[j];  
 1300              		.loc 1 201 14 view .LVU367
 201:network.c     ****             nidx = rand_n_idx[j];  
 1301              		.loc 1 201 27 is_stmt 0 view .LVU368
 1302 0040 0023     		movs	r3, #0
 1303              	.LVL124:
 201:network.c     ****             nidx = rand_n_idx[j];  
 1304              		.loc 1 201 27 view .LVU369
 1305 0042 0A93     		str	r3, [sp, #40]
 1306              	.L50:
 201:network.c     ****             nidx = rand_n_idx[j];  
 1307              		.loc 1 201 32 is_stmt 1 discriminator 1 view .LVU370
 201:network.c     ****             nidx = rand_n_idx[j];  
 1308              		.loc 1 201 44 is_stmt 0 discriminator 1 view .LVU371
 1309 0044 099A     		ldr	r2, [sp, #36]
 201:network.c     ****             nidx = rand_n_idx[j];  
 1310              		.loc 1 201 33 discriminator 1 view .LVU372
 1311 0046 0A9B     		ldr	r3, [sp, #40]
 201:network.c     ****             nidx = rand_n_idx[j];  
 1312              		.loc 1 201 9 discriminator 1 view .LVU373
 1313 0048 54F83220 		ldr	r2, [r4, r2, lsl #3]
 1314 004c 9A42     		cmp	r2, r3
 1315 004e 03DC     		bgt	.L57
 1316              	.LBE42:
 197:network.c     ****         
 1317              		.loc 1 197 46 is_stmt 1 discriminator 2 view .LVU374
 197:network.c     ****         
 1318              		.loc 1 197 47 is_stmt 0 discriminator 2 view .LVU375
 1319 0050 099B     		ldr	r3, [sp, #36]
 1320 0052 0133     		adds	r3, r3, #1
 1321 0054 0993     		str	r3, [sp, #36]
 1322 0056 E4E7     		b	.L49
 1323              	.L57:
 1324              	.LBB43:
 202:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 1325              		.loc 1 202 13 is_stmt 1 view .LVU376
 202:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 1326              		.loc 1 202 30 is_stmt 0 view .LVU377
 1327 0058 0A9B     		ldr	r3, [sp, #40]
 1328              	.LVL125:
 203:network.c     **** 
 1329              		.loc 1 203 13 is_stmt 1 view .LVU378
 203:network.c     **** 
 1330              		.loc 1 203 66 is_stmt 0 view .LVU379
 1331 005a 0499     		ldr	r1, [sp, #16]
 203:network.c     **** 
 1332              		.loc 1 203 55 view .LVU380
 1333 005c 099A     		ldr	r2, [sp, #36]
 203:network.c     **** 
 1334              		.loc 1 203 66 view .LVU381
 1335 005e 51F82360 		ldr	r6, [r1, r3, lsl #2]
 203:network.c     **** 
 1336              		.loc 1 203 23 view .LVU382
 1337 0062 099B     		ldr	r3, [sp, #36]
 1338              	.LVL126:
 206:network.c     ****             // for all neurons on the previous layer
 1339              		.loc 1 206 24 view .LVU383
 1340 0064 0399     		ldr	r1, [sp, #12]
 203:network.c     **** 
 1341              		.loc 1 203 72 view .LVU384
 1342 0066 04EBC202 		add	r2, r4, r2, lsl #3
 203:network.c     **** 
 1343              		.loc 1 203 43 view .LVU385
 1344 006a 04EBC303 		add	r3, r4, r3, lsl #3
 203:network.c     **** 
 1345              		.loc 1 203 72 view .LVU386
 1346 006e 5268     		ldr	r2, [r2, #4]
 203:network.c     **** 
 1347              		.loc 1 203 43 view .LVU387
 1348 0070 5B68     		ldr	r3, [r3, #4]
 203:network.c     **** 
 1349              		.loc 1 203 66 view .LVU388
 1350 0072 07FB06F5 		mul	r5, r7, r6
 203:network.c     **** 
 1351              		.loc 1 203 72 view .LVU389
 1352 0076 2A44     		add	r2, r2, r5
 203:network.c     **** 
 1353              		.loc 1 203 43 view .LVU390
 1354 0078 2B44     		add	r3, r3, r5
 1355 007a 9268     		ldr	r2, [r2, #8]	@ float
 1356 007c DA60     		str	r2, [r3, #12]	@ float
 206:network.c     ****             // for all neurons on the previous layer
 1357              		.loc 1 206 13 is_stmt 1 view .LVU391
 206:network.c     ****             // for all neurons on the previous layer
 1358              		.loc 1 206 41 is_stmt 0 view .LVU392
 1359 007e 099B     		ldr	r3, [sp, #36]
 206:network.c     ****             // for all neurons on the previous layer
 1360              		.loc 1 206 48 view .LVU393
 1361 0080 0A9A     		ldr	r2, [sp, #40]
 206:network.c     ****             // for all neurons on the previous layer
 1362              		.loc 1 206 41 view .LVU394
 1363 0082 03F18043 		add	r3, r3, #1073741824
 1364 0086 013B     		subs	r3, r3, #1
 1365              	.LBB38:
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1366              		.loc 1 211 65 view .LVU395
 1367 0088 B600     		lsls	r6, r6, #2
 1368              	.LBE38:
 206:network.c     ****             // for all neurons on the previous layer
 1369              		.loc 1 206 24 view .LVU396
 1370 008a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1371 008e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 1372              	.LVL127:
 208:network.c     ****                 
 1373              		.loc 1 208 13 is_stmt 1 view .LVU397
 1374              	.LBB39:
 208:network.c     ****                 
 1375              		.loc 1 208 18 view .LVU398
 208:network.c     ****                 
 1376              		.loc 1 208 31 is_stmt 0 view .LVU399
 1377 0092 0023     		movs	r3, #0
 1378 0094 0B93     		str	r3, [sp, #44]
 208:network.c     ****                 
 1379              		.loc 1 208 48 view .LVU400
 1380 0096 6FF06048 		mvn	r8, #-536870912
 1381              	.L51:
 208:network.c     ****                 
 1382              		.loc 1 208 36 is_stmt 1 discriminator 1 view .LVU401
 208:network.c     ****                 
 1383              		.loc 1 208 48 is_stmt 0 discriminator 1 view .LVU402
 1384 009a 099B     		ldr	r3, [sp, #36]
 208:network.c     ****                 
 1385              		.loc 1 208 37 discriminator 1 view .LVU403
 1386 009c 0B99     		ldr	r1, [sp, #44]
 208:network.c     ****                 
 1387              		.loc 1 208 48 discriminator 1 view .LVU404
 1388 009e 4344     		add	r3, r3, r8
 208:network.c     ****                 
 1389              		.loc 1 208 13 discriminator 1 view .LVU405
 1390 00a0 54F83330 		ldr	r3, [r4, r3, lsl #3]
 1391 00a4 8B42     		cmp	r3, r1
 1392 00a6 26DC     		bgt	.L52
 1393              	.LBE39:
 215:network.c     ****             //apply relu
 1394              		.loc 1 215 13 is_stmt 1 view .LVU406
 215:network.c     ****             //apply relu
 1395              		.loc 1 215 55 is_stmt 0 view .LVU407
 1396 00a8 099A     		ldr	r2, [sp, #36]
 1397              	.LVL128:
 215:network.c     ****             //apply relu
 1398              		.loc 1 215 23 view .LVU408
 1399 00aa 099B     		ldr	r3, [sp, #36]
 215:network.c     ****             //apply relu
 1400              		.loc 1 215 72 view .LVU409
 1401 00ac 04EBC202 		add	r2, r4, r2, lsl #3
 215:network.c     ****             //apply relu
 1402              		.loc 1 215 43 view .LVU410
 1403 00b0 04EBC303 		add	r3, r4, r3, lsl #3
 215:network.c     ****             //apply relu
 1404              		.loc 1 215 72 view .LVU411
 1405 00b4 5268     		ldr	r2, [r2, #4]
 215:network.c     ****             //apply relu
 1406              		.loc 1 215 43 view .LVU412
 1407 00b6 5B68     		ldr	r3, [r3, #4]
 215:network.c     ****             //apply relu
 1408              		.loc 1 215 72 view .LVU413
 1409 00b8 2A44     		add	r2, r2, r5
 215:network.c     ****             //apply relu
 1410              		.loc 1 215 43 view .LVU414
 1411 00ba 2B44     		add	r3, r3, r5
 1412 00bc D268     		ldr	r2, [r2, #12]	@ float
 1413 00be 1A61     		str	r2, [r3, #16]	@ float
 217:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1414              		.loc 1 217 13 is_stmt 1 view .LVU415
 217:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1415              		.loc 1 217 18 is_stmt 0 view .LVU416
 1416 00c0 099B     		ldr	r3, [sp, #36]
 217:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1417              		.loc 1 217 34 view .LVU417
 1418 00c2 0AF1FF32 		add	r2, r10, #-1
 217:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1419              		.loc 1 217 15 view .LVU418
 1420 00c6 9A42     		cmp	r2, r3
 218:network.c     ****                 {
 1421              		.loc 1 218 31 view .LVU419
 1422 00c8 099B     		ldr	r3, [sp, #36]
 218:network.c     ****                 {
 1423              		.loc 1 218 48 view .LVU420
 1424 00ca 04EBC303 		add	r3, r4, r3, lsl #3
 1425 00ce 5B68     		ldr	r3, [r3, #4]
 1426 00d0 2B44     		add	r3, r3, r5
 217:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1427              		.loc 1 217 15 view .LVU421
 1428 00d2 50DD     		ble	.L53
 218:network.c     ****                 {
 1429              		.loc 1 218 17 is_stmt 1 view .LVU422
 218:network.c     ****                 {
 1430              		.loc 1 218 19 is_stmt 0 view .LVU423
 1431 00d4 D868     		ldr	r0, [r3, #12]	@ float
 1432 00d6 5946     		mov	r1, fp
 1433 00d8 FFF7FEFF 		bl	__aeabi_fcmplt
 1434              	.LVL129:
 1435 00dc 0028     		cmp	r0, #0
 1436 00de 3DD0     		beq	.L60
 220:network.c     ****                 }
 1437              		.loc 1 220 21 is_stmt 1 view .LVU424
 220:network.c     ****                 }
 1438              		.loc 1 220 31 is_stmt 0 view .LVU425
 1439 00e0 099B     		ldr	r3, [sp, #36]
 220:network.c     ****                 }
 1440              		.loc 1 220 51 view .LVU426
 1441 00e2 04EBC303 		add	r3, r4, r3, lsl #3
 1442 00e6 5B68     		ldr	r3, [r3, #4]
 1443 00e8 1D44     		add	r5, r5, r3
 1444 00ea C5F810B0 		str	fp, [r5, #16]	@ float
 1445              	.L56:
 201:network.c     ****             nidx = rand_n_idx[j];  
 1446              		.loc 1 201 61 is_stmt 1 discriminator 2 view .LVU427
 201:network.c     ****             nidx = rand_n_idx[j];  
 1447              		.loc 1 201 62 is_stmt 0 discriminator 2 view .LVU428
 1448 00ee 0A9B     		ldr	r3, [sp, #40]
 1449 00f0 0133     		adds	r3, r3, #1
 1450 00f2 0A93     		str	r3, [sp, #40]
 1451 00f4 A6E7     		b	.L50
 1452              	.LVL130:
 1453              	.L52:
 1454              	.LBB40:
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1455              		.loc 1 210 17 is_stmt 1 discriminator 3 view .LVU429
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1456              		.loc 1 210 59 is_stmt 0 discriminator 3 view .LVU430
 1457 00f6 099B     		ldr	r3, [sp, #36]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1458              		.loc 1 211 29 discriminator 3 view .LVU431
 1459 00f8 0998     		ldr	r0, [sp, #36]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1460              		.loc 1 211 53 discriminator 3 view .LVU432
 1461 00fa DDF82CE0 		ldr	lr, [sp, #44]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1462              		.loc 1 211 86 discriminator 3 view .LVU433
 1463 00fe 0999     		ldr	r1, [sp, #36]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1464              		.loc 1 211 42 discriminator 3 view .LVU434
 1465 0100 52F82EE0 		ldr	lr, [r2, lr, lsl #2]
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1466              		.loc 1 210 59 discriminator 3 view .LVU435
 1467 0104 0193     		str	r3, [sp, #4]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1468              		.loc 1 211 29 discriminator 3 view .LVU436
 1469 0106 4044     		add	r0, r0, r8
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1470              		.loc 1 211 57 discriminator 3 view .LVU437
 1471 0108 04EBC000 		add	r0, r4, r0, lsl #3
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1472              		.loc 1 211 86 discriminator 3 view .LVU438
 1473 010c 4144     		add	r1, r1, r8
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1474              		.loc 1 211 110 discriminator 3 view .LVU439
 1475 010e 0B9B     		ldr	r3, [sp, #44]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1476              		.loc 1 211 57 discriminator 3 view .LVU440
 1477 0110 4068     		ldr	r0, [r0, #4]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1478              		.loc 1 211 99 discriminator 3 view .LVU441
 1479 0112 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1480 0116 0592     		str	r2, [sp, #20]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1481              		.loc 1 211 114 discriminator 3 view .LVU442
 1482 0118 04EBC101 		add	r1, r4, r1, lsl #3
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1483              		.loc 1 211 57 discriminator 3 view .LVU443
 1484 011c 07FB0E00 		mla	r0, r7, lr, r0
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1485              		.loc 1 211 114 discriminator 3 view .LVU444
 1486 0120 4968     		ldr	r1, [r1, #4]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1487              		.loc 1 211 65 discriminator 3 view .LVU445
 1488 0122 4068     		ldr	r0, [r0, #4]
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1489              		.loc 1 210 27 discriminator 3 view .LVU446
 1490 0124 DDF82490 		ldr	r9, [sp, #36]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1491              		.loc 1 211 73 discriminator 3 view .LVU447
 1492 0128 8059     		ldr	r0, [r0, r6]	@ float
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1493              		.loc 1 211 114 discriminator 3 view .LVU448
 1494 012a 07FB0311 		mla	r1, r7, r3, r1
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1495              		.loc 1 210 47 discriminator 3 view .LVU449
 1496 012e 04EBC909 		add	r9, r4, r9, lsl #3
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1497              		.loc 1 211 73 discriminator 3 view .LVU450
 1498 0132 0969     		ldr	r1, [r1, #16]	@ float
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1499              		.loc 1 210 47 discriminator 3 view .LVU451
 1500 0134 D9F80490 		ldr	r9, [r9, #4]
 211:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1501              		.loc 1 211 73 discriminator 3 view .LVU452
 1502 0138 FFF7FEFF 		bl	__aeabi_fmul
 1503              	.LVL131:
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1504              		.loc 1 210 76 discriminator 3 view .LVU453
 1505 013c 019B     		ldr	r3, [sp, #4]
 1506 013e 04EBC303 		add	r3, r4, r3, lsl #3
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1507              		.loc 1 210 47 discriminator 3 view .LVU454
 1508 0142 A944     		add	r9, r9, r5
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1509              		.loc 1 210 76 discriminator 3 view .LVU455
 1510 0144 5B68     		ldr	r3, [r3, #4]
 1511 0146 2B44     		add	r3, r3, r5
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1512              		.loc 1 210 79 discriminator 3 view .LVU456
 1513 0148 D968     		ldr	r1, [r3, #12]	@ float
 1514 014a FFF7FEFF 		bl	__aeabi_fadd
 1515              	.LVL132:
 208:network.c     ****                 
 1516              		.loc 1 208 70 discriminator 3 view .LVU457
 1517 014e 0B9B     		ldr	r3, [sp, #44]
 1518 0150 059A     		ldr	r2, [sp, #20]
 210:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1519              		.loc 1 210 47 discriminator 3 view .LVU458
 1520 0152 C9F80C00 		str	r0, [r9, #12]	@ float
 208:network.c     ****                 
 1521              		.loc 1 208 69 is_stmt 1 discriminator 3 view .LVU459
 208:network.c     ****                 
 1522              		.loc 1 208 70 is_stmt 0 discriminator 3 view .LVU460
 1523 0156 0133     		adds	r3, r3, #1
 1524 0158 0B93     		str	r3, [sp, #44]
 1525 015a 9EE7     		b	.L51
 1526              	.LVL133:
 1527              	.L60:
 208:network.c     ****                 
 1528              		.loc 1 208 70 discriminator 3 view .LVU461
 1529              	.LBE40:
 225:network.c     ****                 }
 1530              		.loc 1 225 21 is_stmt 1 view .LVU462
 225:network.c     ****                 }
 1531              		.loc 1 225 63 is_stmt 0 view .LVU463
 1532 015c 099A     		ldr	r2, [sp, #36]
 225:network.c     ****                 }
 1533              		.loc 1 225 31 view .LVU464
 1534 015e 099B     		ldr	r3, [sp, #36]
 225:network.c     ****                 }
 1535              		.loc 1 225 80 view .LVU465
 1536 0160 04EBC202 		add	r2, r4, r2, lsl #3
 225:network.c     ****                 }
 1537              		.loc 1 225 51 view .LVU466
 1538 0164 04EBC303 		add	r3, r4, r3, lsl #3
 225:network.c     ****                 }
 1539              		.loc 1 225 80 view .LVU467
 1540 0168 5268     		ldr	r2, [r2, #4]
 225:network.c     ****                 }
 1541              		.loc 1 225 51 view .LVU468
 1542 016a 5B68     		ldr	r3, [r3, #4]
 1543 016c 2B44     		add	r3, r3, r5
 225:network.c     ****                 }
 1544              		.loc 1 225 80 view .LVU469
 1545 016e 1544     		add	r5, r5, r2
 225:network.c     ****                 }
 1546              		.loc 1 225 51 view .LVU470
 1547 0170 EA68     		ldr	r2, [r5, #12]	@ float
 1548 0172 1A61     		str	r2, [r3, #16]	@ float
 1549 0174 BBE7     		b	.L56
 1550              	.L53:
 230:network.c     ****             }
 1551              		.loc 1 230 17 is_stmt 1 view .LVU471
 230:network.c     ****             }
 1552              		.loc 1 230 58 is_stmt 0 view .LVU472
 1553 0176 D868     		ldr	r0, [r3, #12]
 1554 0178 00F10040 		add	r0, r0, #-2147483648
 230:network.c     ****             }
 1555              		.loc 1 230 54 view .LVU473
 1556 017c FFF7FEFF 		bl	__aeabi_f2d
 1557              	.LVL134:
 1558 0180 FFF7FEFF 		bl	exp
 1559              	.LVL135:
 230:network.c     ****             }
 1560              		.loc 1 230 27 view .LVU474
 1561 0184 099B     		ldr	r3, [sp, #36]
 230:network.c     ****             }
 1562              		.loc 1 230 47 view .LVU475
 1563 0186 04EBC303 		add	r3, r4, r3, lsl #3
 230:network.c     ****             }
 1564              		.loc 1 230 53 view .LVU476
 1565 018a 0022     		movs	r2, #0
 230:network.c     ****             }
 1566              		.loc 1 230 47 view .LVU477
 1567 018c 5B68     		ldr	r3, [r3, #4]
 1568 018e 1D44     		add	r5, r5, r3
 230:network.c     ****             }
 1569              		.loc 1 230 53 view .LVU478
 1570 0190 064B     		ldr	r3, .L61
 1571 0192 FFF7FEFF 		bl	__aeabi_dadd
 1572              	.LVL136:
 1573 0196 0246     		mov	r2, r0
 1574 0198 0B46     		mov	r3, r1
 230:network.c     ****             }
 1575              		.loc 1 230 50 view .LVU479
 1576 019a 0020     		movs	r0, #0
 1577 019c 0349     		ldr	r1, .L61
 1578 019e FFF7FEFF 		bl	__aeabi_ddiv
 1579              	.LVL137:
 1580 01a2 FFF7FEFF 		bl	__aeabi_d2f
 1581              	.LVL138:
 1582 01a6 2861     		str	r0, [r5, #16]	@ float
 1583 01a8 A1E7     		b	.L56
 1584              	.L62:
 1585 01aa 00BF     		.align	2
 1586              	.L61:
 1587 01ac 0000F03F 		.word	1072693248
 1588              	.LBE43:
 1589              	.LBE45:
 1590              		.cfi_endproc
 1591              	.LFE15:
 1593              		.section	.text.forward_shuffled_NO_AAE,"ax",%progbits
 1594              		.align	1
 1595              		.global	forward_shuffled_NO_AAE
 1596              		.syntax unified
 1597              		.thumb
 1598              		.thumb_func
 1599              		.fpu softvfp
 1601              	forward_shuffled_NO_AAE:
 1602              	.LVL139:
 1603              	.LFB16:
 244:network.c     **** 
 245:network.c     **** void forward_shuffled_NO_AAE(network net, int**** random_indices, int dummy_operations) {
 1604              		.loc 1 245 89 is_stmt 1 view -0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 48
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608              		.loc 1 245 89 is_stmt 0 view .LVU481
 1609 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1610              	.LCFI25:
 1611              		.cfi_def_cfa_offset 36
 1612              		.cfi_offset 4, -36
 1613              		.cfi_offset 5, -32
 1614              		.cfi_offset 6, -28
 1615              		.cfi_offset 7, -24
 1616              		.cfi_offset 8, -20
 1617              		.cfi_offset 9, -16
 1618              		.cfi_offset 10, -12
 1619              		.cfi_offset 11, -8
 1620              		.cfi_offset 14, -4
 1621 0004 8DB0     		sub	sp, sp, #52
 1622              	.LCFI26:
 1623              		.cfi_def_cfa_offset 88
 1624              		.loc 1 245 89 view .LVU482
 1625 0006 06AB     		add	r3, sp, #24
 1626              	.LVL140:
 1627              		.loc 1 245 89 view .LVU483
 1628 0008 83E80300 		stm	r3, {r0, r1}
 246:network.c     ****     //int i, j, k,
 247:network.c     ****     int nidx = 0;
 248:network.c     ****     int *rand_n_idx, *rand_w_idx;
 249:network.c     **** 
 250:network.c     ****     int **rand_n_indices = *random_indices[0];
 1629              		.loc 1 250 11 view .LVU484
 1630 000c 1368     		ldr	r3, [r2]
 1631 000e 0090     		str	r0, [sp]
 1632              	.LVL141:
 1633              		.loc 1 250 11 view .LVU485
 1634 0010 1B68     		ldr	r3, [r3]
 1635 0012 0293     		str	r3, [sp, #8]
 251:network.c     ****     int ***rand_ws_indices = random_indices[1];
 1636              		.loc 1 251 12 view .LVU486
 1637 0014 5368     		ldr	r3, [r2, #4]
 1638 0016 0393     		str	r3, [sp, #12]
 1639              	.LBB46:
 252:network.c     **** 
 253:network.c     ****     //uint8_t result, scmd = 16;
 254:network.c     ****     // for each layer
 255:network.c     ****     for (volatile int i=1; i<net.num_layers; i++){
 1640              		.loc 1 255 23 view .LVU487
 1641 0018 0123     		movs	r3, #1
 1642 001a 0C46     		mov	r4, r1
 1643              	.LVL142:
 1644              		.loc 1 255 23 view .LVU488
 1645              	.LBE46:
 247:network.c     ****     int *rand_n_idx, *rand_w_idx;
 1646              		.loc 1 247 5 is_stmt 1 view .LVU489
 248:network.c     **** 
 1647              		.loc 1 248 5 view .LVU490
 250:network.c     ****     int ***rand_ws_indices = random_indices[1];
 1648              		.loc 1 250 5 view .LVU491
 251:network.c     **** 
 1649              		.loc 1 251 5 view .LVU492
 1650              		.loc 1 255 5 view .LVU493
 1651              	.LBB55:
 1652              		.loc 1 255 10 view .LVU494
 1653              		.loc 1 255 23 is_stmt 0 view .LVU495
 1654 001c 0893     		str	r3, [sp, #32]
 1655              	.LBE55:
 247:network.c     ****     int *rand_n_idx, *rand_w_idx;
 1656              		.loc 1 247 9 view .LVU496
 1657 001e 0027     		movs	r7, #0
 1658              	.LBB56:
 1659              	.LBB47:
 256:network.c     ****         
 257:network.c     ****         rand_n_idx = rand_n_indices[i - 1];
 258:network.c     ****         // for each neuron in this layer
 259:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 260:network.c     ****             nidx = rand_n_idx[j];  
 261:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 262:network.c     **** 
 263:network.c     **** 
 264:network.c     ****             rand_w_idx = rand_ws_indices[i - 1][j];
 265:network.c     ****             // for all neurons on the previous layer
 266:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 267:network.c     ****                 
 268:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 269:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 270:network.c     ****                 // We are looking for THIS MULTIPLICATION
 271:network.c     ****             }
 272:network.c     ****             //get a values
 273:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 274:network.c     ****             //if (dummy_operations > 1){
 275:network.c     ****             //for (volatile int dummy_i = 0; dummy_i<50; dummy_i++) {
 276:network.c     ****             //    result = scmd *scmd;
 277:network.c     ****             //    result = scmd *scmd;
 278:network.c     ****             //    result = scmd *scmd;
 279:network.c     ****             //}
 280:network.c     ****             //} 
 281:network.c     ****         }
 282:network.c     **** 
 283:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 284:network.c     ****             //apply relu
 285:network.c     ****             if(i < net.num_layers-1){
 286:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1660              		.loc 1 286 19 view .LVU497
 1661 0020 4FF0000B 		mov	fp, #0
 1662              	.LVL143:
 1663              	.L64:
 1664              		.loc 1 286 19 view .LVU498
 1665              	.LBE47:
 255:network.c     ****         
 1666              		.loc 1 255 28 is_stmt 1 discriminator 1 view .LVU499
 255:network.c     ****         
 1667              		.loc 1 255 29 is_stmt 0 discriminator 1 view .LVU500
 1668 0024 089B     		ldr	r3, [sp, #32]
 255:network.c     ****         
 1669              		.loc 1 255 5 discriminator 1 view .LVU501
 1670 0026 009A     		ldr	r2, [sp]
 1671 0028 9342     		cmp	r3, r2
 1672 002a 02DB     		blt	.L75
 1673              	.LBE56:
 287:network.c     ****                 {
 288:network.c     ****                     net.layers[i].neurons[nidx].a = 0;
 289:network.c     ****                 }
 290:network.c     **** 
 291:network.c     ****                 else
 292:network.c     ****                 {
 293:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 294:network.c     ****                 }
 295:network.c     ****             }
 296:network.c     ****             //apply sigmoid to the last layer
 297:network.c     ****             else{
 298:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 299:network.c     ****             }
 300:network.c     ****         }
 301:network.c     ****         //OPTIONAL DUMMY OPERATIONS
 302:network.c     ****         //if (dummy_operations > 0){
 303:network.c     ****         //    for (volatile int dummy_i = 0; dummy_i<50; dummy_i++) {
 304:network.c     ****         //        result = scmd *scmd;
 305:network.c     ****         //        result = scmd *scmd;
 306:network.c     ****         //        result = scmd *scmd;
 307:network.c     ****         //    }
 308:network.c     ****         //} 
 309:network.c     ****     }
 310:network.c     **** }
 1674              		.loc 1 310 1 view .LVU502
 1675 002c 0DB0     		add	sp, sp, #52
 1676              	.LCFI27:
 1677              		.cfi_remember_state
 1678              		.cfi_def_cfa_offset 36
 1679              	.LVL144:
 1680              		.loc 1 310 1 view .LVU503
 1681              		@ sp needed
 1682 002e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1683              	.LVL145:
 1684              	.L75:
 1685              	.LCFI28:
 1686              		.cfi_restore_state
 1687              	.LBB57:
 257:network.c     ****         // for each neuron in this layer
 1688              		.loc 1 257 9 is_stmt 1 view .LVU504
 257:network.c     ****         // for each neuron in this layer
 1689              		.loc 1 257 36 is_stmt 0 view .LVU505
 1690 0032 089B     		ldr	r3, [sp, #32]
 257:network.c     ****         // for each neuron in this layer
 1691              		.loc 1 257 20 view .LVU506
 1692 0034 029A     		ldr	r2, [sp, #8]
 257:network.c     ****         // for each neuron in this layer
 1693              		.loc 1 257 36 view .LVU507
 1694 0036 03F18043 		add	r3, r3, #1073741824
 1695 003a 013B     		subs	r3, r3, #1
 1696 003c 1425     		movs	r5, #20
 257:network.c     ****         // for each neuron in this layer
 1697              		.loc 1 257 20 view .LVU508
 1698 003e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1699 0042 0493     		str	r3, [sp, #16]
 1700              	.LVL146:
 259:network.c     ****             nidx = rand_n_idx[j];  
 1701              		.loc 1 259 9 is_stmt 1 view .LVU509
 1702              	.LBB48:
 259:network.c     ****             nidx = rand_n_idx[j];  
 1703              		.loc 1 259 14 view .LVU510
 259:network.c     ****             nidx = rand_n_idx[j];  
 1704              		.loc 1 259 27 is_stmt 0 view .LVU511
 1705 0044 0023     		movs	r3, #0
 1706              	.LVL147:
 259:network.c     ****             nidx = rand_n_idx[j];  
 1707              		.loc 1 259 27 view .LVU512
 1708 0046 0993     		str	r3, [sp, #36]
 1709              	.LBB49:
 266:network.c     ****                 
 1710              		.loc 1 266 48 view .LVU513
 1711 0048 6FF06048 		mvn	r8, #-536870912
 1712              	.L65:
 1713              	.LVL148:
 266:network.c     ****                 
 1714              		.loc 1 266 48 view .LVU514
 1715              	.LBE49:
 259:network.c     ****             nidx = rand_n_idx[j];  
 1716              		.loc 1 259 32 is_stmt 1 discriminator 1 view .LVU515
 259:network.c     ****             nidx = rand_n_idx[j];  
 1717              		.loc 1 259 44 is_stmt 0 discriminator 1 view .LVU516
 1718 004c 089A     		ldr	r2, [sp, #32]
 259:network.c     ****             nidx = rand_n_idx[j];  
 1719              		.loc 1 259 33 discriminator 1 view .LVU517
 1720 004e 099B     		ldr	r3, [sp, #36]
 259:network.c     ****             nidx = rand_n_idx[j];  
 1721              		.loc 1 259 9 discriminator 1 view .LVU518
 1722 0050 54F83220 		ldr	r2, [r4, r2, lsl #3]
 1723 0054 9A42     		cmp	r2, r3
 1724 0056 0FDC     		bgt	.L68
 1725              	.LBE48:
 283:network.c     ****             //apply relu
 1726              		.loc 1 283 9 is_stmt 1 view .LVU519
 1727              	.LBB52:
 283:network.c     ****             //apply relu
 1728              		.loc 1 283 14 view .LVU520
 283:network.c     ****             //apply relu
 1729              		.loc 1 283 27 is_stmt 0 view .LVU521
 1730 0058 0023     		movs	r3, #0
 1731 005a 0B93     		str	r3, [sp, #44]
 285:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1732              		.loc 1 285 34 view .LVU522
 1733 005c 009B     		ldr	r3, [sp]
 298:network.c     ****             }
 1734              		.loc 1 298 80 view .LVU523
 1735 005e 7D43     		muls	r5, r7, r5
 285:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1736              		.loc 1 285 34 view .LVU524
 1737 0060 03F1FF38 		add	r8, r3, #-1
 1738              	.L69:
 283:network.c     ****             //apply relu
 1739              		.loc 1 283 32 is_stmt 1 discriminator 1 view .LVU525
 283:network.c     ****             //apply relu
 1740              		.loc 1 283 44 is_stmt 0 discriminator 1 view .LVU526
 1741 0064 089A     		ldr	r2, [sp, #32]
 283:network.c     ****             //apply relu
 1742              		.loc 1 283 33 discriminator 1 view .LVU527
 1743 0066 0B9B     		ldr	r3, [sp, #44]
 283:network.c     ****             //apply relu
 1744              		.loc 1 283 9 discriminator 1 view .LVU528
 1745 0068 54F83220 		ldr	r2, [r4, r2, lsl #3]
 1746 006c 9A42     		cmp	r2, r3
 285:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1747              		.loc 1 285 18 discriminator 1 view .LVU529
 1748 006e 089B     		ldr	r3, [sp, #32]
 283:network.c     ****             //apply relu
 1749              		.loc 1 283 9 discriminator 1 view .LVU530
 1750 0070 6DDC     		bgt	.L74
 1751              	.LBE52:
 255:network.c     ****         
 1752              		.loc 1 255 46 is_stmt 1 discriminator 2 view .LVU531
 255:network.c     ****         
 1753              		.loc 1 255 47 is_stmt 0 discriminator 2 view .LVU532
 1754 0072 0133     		adds	r3, r3, #1
 1755 0074 0893     		str	r3, [sp, #32]
 1756 0076 D5E7     		b	.L64
 1757              	.L68:
 1758              	.LBB53:
 260:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 1759              		.loc 1 260 13 is_stmt 1 view .LVU533
 260:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 1760              		.loc 1 260 30 is_stmt 0 view .LVU534
 1761 0078 099B     		ldr	r3, [sp, #36]
 260:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 1762              		.loc 1 260 18 view .LVU535
 1763 007a 049A     		ldr	r2, [sp, #16]
 264:network.c     ****             // for all neurons on the previous layer
 1764              		.loc 1 264 24 view .LVU536
 1765 007c 0399     		ldr	r1, [sp, #12]
 260:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 1766              		.loc 1 260 18 view .LVU537
 1767 007e 52F82370 		ldr	r7, [r2, r3, lsl #2]
 1768              	.LVL149:
 261:network.c     **** 
 1769              		.loc 1 261 13 is_stmt 1 view .LVU538
 261:network.c     **** 
 1770              		.loc 1 261 55 is_stmt 0 view .LVU539
 1771 0082 089A     		ldr	r2, [sp, #32]
 261:network.c     **** 
 1772              		.loc 1 261 23 view .LVU540
 1773 0084 089B     		ldr	r3, [sp, #32]
 261:network.c     **** 
 1774              		.loc 1 261 72 view .LVU541
 1775 0086 04EBC202 		add	r2, r4, r2, lsl #3
 261:network.c     **** 
 1776              		.loc 1 261 43 view .LVU542
 1777 008a 04EBC303 		add	r3, r4, r3, lsl #3
 261:network.c     **** 
 1778              		.loc 1 261 72 view .LVU543
 1779 008e 5268     		ldr	r2, [r2, #4]
 261:network.c     **** 
 1780              		.loc 1 261 43 view .LVU544
 1781 0090 5B68     		ldr	r3, [r3, #4]
 261:network.c     **** 
 1782              		.loc 1 261 66 view .LVU545
 1783 0092 05FB07F6 		mul	r6, r5, r7
 261:network.c     **** 
 1784              		.loc 1 261 72 view .LVU546
 1785 0096 3244     		add	r2, r2, r6
 261:network.c     **** 
 1786              		.loc 1 261 43 view .LVU547
 1787 0098 3344     		add	r3, r3, r6
 1788 009a 9268     		ldr	r2, [r2, #8]	@ float
 1789 009c DA60     		str	r2, [r3, #12]	@ float
 264:network.c     ****             // for all neurons on the previous layer
 1790              		.loc 1 264 13 is_stmt 1 view .LVU548
 264:network.c     ****             // for all neurons on the previous layer
 1791              		.loc 1 264 41 is_stmt 0 view .LVU549
 1792 009e 089B     		ldr	r3, [sp, #32]
 264:network.c     ****             // for all neurons on the previous layer
 1793              		.loc 1 264 48 view .LVU550
 1794 00a0 099A     		ldr	r2, [sp, #36]
 264:network.c     ****             // for all neurons on the previous layer
 1795              		.loc 1 264 41 view .LVU551
 1796 00a2 03F18043 		add	r3, r3, #1073741824
 1797 00a6 013B     		subs	r3, r3, #1
 264:network.c     ****             // for all neurons on the previous layer
 1798              		.loc 1 264 24 view .LVU552
 1799 00a8 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1800 00ac 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1801              	.LVL150:
 266:network.c     ****                 
 1802              		.loc 1 266 13 is_stmt 1 view .LVU553
 1803              	.LBB50:
 266:network.c     ****                 
 1804              		.loc 1 266 18 view .LVU554
 266:network.c     ****                 
 1805              		.loc 1 266 31 is_stmt 0 view .LVU555
 1806 00b0 0022     		movs	r2, #0
 1807 00b2 0A92     		str	r2, [sp, #40]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1808              		.loc 1 269 65 view .LVU556
 1809 00b4 BA00     		lsls	r2, r7, #2
 1810 00b6 0192     		str	r2, [sp, #4]
 1811              	.L66:
 266:network.c     ****                 
 1812              		.loc 1 266 36 is_stmt 1 discriminator 1 view .LVU557
 266:network.c     ****                 
 1813              		.loc 1 266 48 is_stmt 0 discriminator 1 view .LVU558
 1814 00b8 0899     		ldr	r1, [sp, #32]
 266:network.c     ****                 
 1815              		.loc 1 266 37 discriminator 1 view .LVU559
 1816 00ba 0A98     		ldr	r0, [sp, #40]
 266:network.c     ****                 
 1817              		.loc 1 266 48 discriminator 1 view .LVU560
 1818 00bc 4144     		add	r1, r1, r8
 266:network.c     ****                 
 1819              		.loc 1 266 13 discriminator 1 view .LVU561
 1820 00be 54F83110 		ldr	r1, [r4, r1, lsl #3]
 1821 00c2 8142     		cmp	r1, r0
 1822 00c4 0FDC     		bgt	.L67
 1823              	.LBE50:
 273:network.c     ****             //if (dummy_operations > 1){
 1824              		.loc 1 273 13 is_stmt 1 discriminator 2 view .LVU562
 273:network.c     ****             //if (dummy_operations > 1){
 1825              		.loc 1 273 55 is_stmt 0 discriminator 2 view .LVU563
 1826 00c6 089A     		ldr	r2, [sp, #32]
 273:network.c     ****             //if (dummy_operations > 1){
 1827              		.loc 1 273 23 discriminator 2 view .LVU564
 1828 00c8 089B     		ldr	r3, [sp, #32]
 1829              	.LVL151:
 273:network.c     ****             //if (dummy_operations > 1){
 1830              		.loc 1 273 72 discriminator 2 view .LVU565
 1831 00ca 04EBC202 		add	r2, r4, r2, lsl #3
 273:network.c     ****             //if (dummy_operations > 1){
 1832              		.loc 1 273 43 discriminator 2 view .LVU566
 1833 00ce 04EBC303 		add	r3, r4, r3, lsl #3
 273:network.c     ****             //if (dummy_operations > 1){
 1834              		.loc 1 273 72 discriminator 2 view .LVU567
 1835 00d2 5268     		ldr	r2, [r2, #4]
 273:network.c     ****             //if (dummy_operations > 1){
 1836              		.loc 1 273 43 discriminator 2 view .LVU568
 1837 00d4 5B68     		ldr	r3, [r3, #4]
 1838 00d6 3344     		add	r3, r3, r6
 273:network.c     ****             //if (dummy_operations > 1){
 1839              		.loc 1 273 72 discriminator 2 view .LVU569
 1840 00d8 1644     		add	r6, r6, r2
 273:network.c     ****             //if (dummy_operations > 1){
 1841              		.loc 1 273 43 discriminator 2 view .LVU570
 1842 00da F268     		ldr	r2, [r6, #12]	@ float
 1843 00dc 1A61     		str	r2, [r3, #16]	@ float
 259:network.c     ****             nidx = rand_n_idx[j];  
 1844              		.loc 1 259 61 is_stmt 1 discriminator 2 view .LVU571
 259:network.c     ****             nidx = rand_n_idx[j];  
 1845              		.loc 1 259 62 is_stmt 0 discriminator 2 view .LVU572
 1846 00de 099B     		ldr	r3, [sp, #36]
 1847 00e0 0133     		adds	r3, r3, #1
 1848 00e2 0993     		str	r3, [sp, #36]
 1849 00e4 B2E7     		b	.L65
 1850              	.LVL152:
 1851              	.L67:
 1852              	.LBB51:
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1853              		.loc 1 268 17 is_stmt 1 discriminator 3 view .LVU573
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1854              		.loc 1 268 59 is_stmt 0 discriminator 3 view .LVU574
 1855 00e6 DDF820A0 		ldr	r10, [sp, #32]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1856              		.loc 1 269 29 discriminator 3 view .LVU575
 1857 00ea 0898     		ldr	r0, [sp, #32]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1858              		.loc 1 269 53 discriminator 3 view .LVU576
 1859 00ec DDF828E0 		ldr	lr, [sp, #40]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1860              		.loc 1 269 86 discriminator 3 view .LVU577
 1861 00f0 0899     		ldr	r1, [sp, #32]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1862              		.loc 1 269 42 discriminator 3 view .LVU578
 1863 00f2 53F82EE0 		ldr	lr, [r3, lr, lsl #2]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1864              		.loc 1 269 110 discriminator 3 view .LVU579
 1865 00f6 0A9A     		ldr	r2, [sp, #40]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1866              		.loc 1 269 99 discriminator 3 view .LVU580
 1867 00f8 0593     		str	r3, [sp, #20]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1868              		.loc 1 269 29 discriminator 3 view .LVU581
 1869 00fa 4044     		add	r0, r0, r8
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1870              		.loc 1 269 57 discriminator 3 view .LVU582
 1871 00fc 04EBC000 		add	r0, r4, r0, lsl #3
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1872              		.loc 1 269 86 discriminator 3 view .LVU583
 1873 0100 4144     		add	r1, r1, r8
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1874              		.loc 1 269 57 discriminator 3 view .LVU584
 1875 0102 4068     		ldr	r0, [r0, #4]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1876              		.loc 1 269 99 discriminator 3 view .LVU585
 1877 0104 53F82220 		ldr	r2, [r3, r2, lsl #2]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1878              		.loc 1 269 73 discriminator 3 view .LVU586
 1879 0108 019B     		ldr	r3, [sp, #4]
 1880              	.LVL153:
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1881              		.loc 1 268 27 discriminator 3 view .LVU587
 1882 010a DDF82090 		ldr	r9, [sp, #32]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1883              		.loc 1 269 114 discriminator 3 view .LVU588
 1884 010e 04EBC101 		add	r1, r4, r1, lsl #3
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1885              		.loc 1 269 57 discriminator 3 view .LVU589
 1886 0112 05FB0E00 		mla	r0, r5, lr, r0
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1887              		.loc 1 269 114 discriminator 3 view .LVU590
 1888 0116 4968     		ldr	r1, [r1, #4]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1889              		.loc 1 269 65 discriminator 3 view .LVU591
 1890 0118 4068     		ldr	r0, [r0, #4]
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1891              		.loc 1 269 114 discriminator 3 view .LVU592
 1892 011a 05FB0211 		mla	r1, r5, r2, r1
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1893              		.loc 1 268 76 discriminator 3 view .LVU593
 1894 011e 04EBCA0A 		add	r10, r4, r10, lsl #3
 269:network.c     ****                 // We are looking for THIS MULTIPLICATION
 1895              		.loc 1 269 73 discriminator 3 view .LVU594
 1896 0122 C058     		ldr	r0, [r0, r3]	@ float
 1897 0124 0969     		ldr	r1, [r1, #16]	@ float
 1898 0126 FFF7FEFF 		bl	__aeabi_fmul
 1899              	.LVL154:
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1900              		.loc 1 268 76 discriminator 3 view .LVU595
 1901 012a DAF80410 		ldr	r1, [r10, #4]
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1902              		.loc 1 268 47 discriminator 3 view .LVU596
 1903 012e 04EBC909 		add	r9, r4, r9, lsl #3
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1904              		.loc 1 268 76 discriminator 3 view .LVU597
 1905 0132 3144     		add	r1, r1, r6
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1906              		.loc 1 268 47 discriminator 3 view .LVU598
 1907 0134 D9F80490 		ldr	r9, [r9, #4]
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1908              		.loc 1 268 79 discriminator 3 view .LVU599
 1909 0138 C968     		ldr	r1, [r1, #12]	@ float
 1910 013a FFF7FEFF 		bl	__aeabi_fadd
 1911              	.LVL155:
 266:network.c     ****                 
 1912              		.loc 1 266 70 discriminator 3 view .LVU600
 1913 013e 0A99     		ldr	r1, [sp, #40]
 1914 0140 059B     		ldr	r3, [sp, #20]
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1915              		.loc 1 268 47 discriminator 3 view .LVU601
 1916 0142 B144     		add	r9, r9, r6
 266:network.c     ****                 
 1917              		.loc 1 266 70 discriminator 3 view .LVU602
 1918 0144 0131     		adds	r1, r1, #1
 268:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 1919              		.loc 1 268 47 discriminator 3 view .LVU603
 1920 0146 C9F80C00 		str	r0, [r9, #12]	@ float
 266:network.c     ****                 
 1921              		.loc 1 266 69 is_stmt 1 discriminator 3 view .LVU604
 266:network.c     ****                 
 1922              		.loc 1 266 70 is_stmt 0 discriminator 3 view .LVU605
 1923 014a 0A91     		str	r1, [sp, #40]
 1924 014c B4E7     		b	.L66
 1925              	.LVL156:
 1926              	.L74:
 266:network.c     ****                 
 1927              		.loc 1 266 70 discriminator 3 view .LVU606
 1928              	.LBE51:
 1929              	.LBE53:
 1930              	.LBB54:
 285:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1931              		.loc 1 285 13 is_stmt 1 view .LVU607
 285:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1932              		.loc 1 285 15 is_stmt 0 view .LVU608
 1933 014e 9845     		cmp	r8, r3
 286:network.c     ****                 {
 1934              		.loc 1 286 31 view .LVU609
 1935 0150 089B     		ldr	r3, [sp, #32]
 286:network.c     ****                 {
 1936              		.loc 1 286 48 view .LVU610
 1937 0152 04EBC303 		add	r3, r4, r3, lsl #3
 1938 0156 5B68     		ldr	r3, [r3, #4]
 1939 0158 2B44     		add	r3, r3, r5
 285:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 1940              		.loc 1 285 15 view .LVU611
 1941 015a 1CDD     		ble	.L70
 286:network.c     ****                 {
 1942              		.loc 1 286 17 is_stmt 1 view .LVU612
 286:network.c     ****                 {
 1943              		.loc 1 286 19 is_stmt 0 view .LVU613
 1944 015c D868     		ldr	r0, [r3, #12]	@ float
 1945 015e 5946     		mov	r1, fp
 1946 0160 FFF7FEFF 		bl	__aeabi_fcmplt
 1947              	.LVL157:
 1948 0164 50B1     		cbz	r0, .L77
 288:network.c     ****                 }
 1949              		.loc 1 288 21 is_stmt 1 view .LVU614
 288:network.c     ****                 }
 1950              		.loc 1 288 31 is_stmt 0 view .LVU615
 1951 0166 089B     		ldr	r3, [sp, #32]
 288:network.c     ****                 }
 1952              		.loc 1 288 51 view .LVU616
 1953 0168 04EBC303 		add	r3, r4, r3, lsl #3
 1954 016c 5B68     		ldr	r3, [r3, #4]
 1955 016e 2B44     		add	r3, r3, r5
 1956 0170 C3F810B0 		str	fp, [r3, #16]	@ float
 1957              	.L73:
 283:network.c     ****             //apply relu
 1958              		.loc 1 283 61 is_stmt 1 discriminator 2 view .LVU617
 283:network.c     ****             //apply relu
 1959              		.loc 1 283 62 is_stmt 0 discriminator 2 view .LVU618
 1960 0174 0B9B     		ldr	r3, [sp, #44]
 1961 0176 0133     		adds	r3, r3, #1
 1962 0178 0B93     		str	r3, [sp, #44]
 1963 017a 73E7     		b	.L69
 1964              	.L77:
 293:network.c     ****                 }
 1965              		.loc 1 293 21 is_stmt 1 view .LVU619
 293:network.c     ****                 }
 1966              		.loc 1 293 63 is_stmt 0 view .LVU620
 1967 017c 089A     		ldr	r2, [sp, #32]
 293:network.c     ****                 }
 1968              		.loc 1 293 31 view .LVU621
 1969 017e 089B     		ldr	r3, [sp, #32]
 293:network.c     ****                 }
 1970              		.loc 1 293 80 view .LVU622
 1971 0180 04EBC202 		add	r2, r4, r2, lsl #3
 293:network.c     ****                 }
 1972              		.loc 1 293 51 view .LVU623
 1973 0184 04EBC303 		add	r3, r4, r3, lsl #3
 293:network.c     ****                 }
 1974              		.loc 1 293 80 view .LVU624
 1975 0188 5268     		ldr	r2, [r2, #4]
 293:network.c     ****                 }
 1976              		.loc 1 293 51 view .LVU625
 1977 018a 5B68     		ldr	r3, [r3, #4]
 293:network.c     ****                 }
 1978              		.loc 1 293 80 view .LVU626
 1979 018c 2A44     		add	r2, r2, r5
 293:network.c     ****                 }
 1980              		.loc 1 293 51 view .LVU627
 1981 018e 2B44     		add	r3, r3, r5
 1982 0190 D268     		ldr	r2, [r2, #12]	@ float
 1983 0192 1A61     		str	r2, [r3, #16]	@ float
 1984 0194 EEE7     		b	.L73
 1985              	.L70:
 298:network.c     ****             }
 1986              		.loc 1 298 17 is_stmt 1 view .LVU628
 298:network.c     ****             }
 1987              		.loc 1 298 58 is_stmt 0 view .LVU629
 1988 0196 D868     		ldr	r0, [r3, #12]
 1989 0198 00F10040 		add	r0, r0, #-2147483648
 298:network.c     ****             }
 1990              		.loc 1 298 54 view .LVU630
 1991 019c FFF7FEFF 		bl	__aeabi_f2d
 1992              	.LVL158:
 1993 01a0 FFF7FEFF 		bl	exp
 1994              	.LVL159:
 298:network.c     ****             }
 1995              		.loc 1 298 27 view .LVU631
 1996 01a4 089B     		ldr	r3, [sp, #32]
 298:network.c     ****             }
 1997              		.loc 1 298 47 view .LVU632
 1998 01a6 04EBC303 		add	r3, r4, r3, lsl #3
 298:network.c     ****             }
 1999              		.loc 1 298 53 view .LVU633
 2000 01aa 0022     		movs	r2, #0
 298:network.c     ****             }
 2001              		.loc 1 298 47 view .LVU634
 2002 01ac 5E68     		ldr	r6, [r3, #4]
 298:network.c     ****             }
 2003              		.loc 1 298 53 view .LVU635
 2004 01ae 074B     		ldr	r3, .L78
 2005 01b0 FFF7FEFF 		bl	__aeabi_dadd
 2006              	.LVL160:
 2007 01b4 0246     		mov	r2, r0
 2008 01b6 0B46     		mov	r3, r1
 298:network.c     ****             }
 2009              		.loc 1 298 50 view .LVU636
 2010 01b8 0020     		movs	r0, #0
 2011 01ba 0449     		ldr	r1, .L78
 2012 01bc FFF7FEFF 		bl	__aeabi_ddiv
 2013              	.LVL161:
 2014 01c0 FFF7FEFF 		bl	__aeabi_d2f
 2015              	.LVL162:
 298:network.c     ****             }
 2016              		.loc 1 298 47 view .LVU637
 2017 01c4 2E44     		add	r6, r6, r5
 298:network.c     ****             }
 2018              		.loc 1 298 50 view .LVU638
 2019 01c6 3061     		str	r0, [r6, #16]	@ float
 2020 01c8 D4E7     		b	.L73
 2021              	.L79:
 2022 01ca 00BF     		.align	2
 2023              	.L78:
 2024 01cc 0000F03F 		.word	1072693248
 2025              	.LBE54:
 2026              	.LBE57:
 2027              		.cfi_endproc
 2028              	.LFE16:
 2030              		.section	.text.forward_shuffled,"ax",%progbits
 2031              		.align	1
 2032              		.global	forward_shuffled
 2033              		.syntax unified
 2034              		.thumb
 2035              		.thumb_func
 2036              		.fpu softvfp
 2038              	forward_shuffled:
 2039              	.LVL163:
 2040              	.LFB17:
 311:network.c     **** 
 312:network.c     **** void forward_shuffled(network net, int dummy_operations) {
 2041              		.loc 1 312 58 is_stmt 1 view -0
 2042              		.cfi_startproc
 2043              		@ args = 0, pretend = 0, frame = 32
 2044              		@ frame_needed = 0, uses_anonymous_args = 0
 2045              		.loc 1 312 58 is_stmt 0 view .LVU640
 2046 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2047              	.LCFI29:
 2048              		.cfi_def_cfa_offset 36
 2049              		.cfi_offset 4, -36
 2050              		.cfi_offset 5, -32
 2051              		.cfi_offset 6, -28
 2052              		.cfi_offset 7, -24
 2053              		.cfi_offset 8, -20
 2054              		.cfi_offset 9, -16
 2055              		.cfi_offset 10, -12
 2056              		.cfi_offset 11, -8
 2057              		.cfi_offset 14, -4
 2058 0004 89B0     		sub	sp, sp, #36
 2059              	.LCFI30:
 2060              		.cfi_def_cfa_offset 72
 2061              		.loc 1 312 58 view .LVU641
 2062 0006 08AB     		add	r3, sp, #32
 2063 0008 03E90300 		stmdb	r3, {r0, r1}
 2064 000c 0090     		str	r0, [sp]
 2065              	.LVL164:
 313:network.c     ****     int i, j, k, nidx;
 2066              		.loc 1 313 5 is_stmt 1 view .LVU642
 314:network.c     ****     int *rand_n_idx, *rand_w_idx;
 2067              		.loc 1 314 5 view .LVU643
 315:network.c     ****     //uint8_t result, scmd = 16;
 316:network.c     ****     // for each layer
 317:network.c     ****     for (i=1; i<net.num_layers; i++){
 2068              		.loc 1 317 5 view .LVU644
 2069              		.loc 1 317 5 is_stmt 0 view .LVU645
 2070 000e 0C46     		mov	r4, r1
 2071              		.loc 1 317 11 view .LVU646
 2072 0010 0127     		movs	r7, #1
 318:network.c     ****         
 319:network.c     ****         rand_n_idx = get_random_indices(net.layers[i].num_neurons);
 320:network.c     ****         // for each neuron in this layer
 321:network.c     ****         for (j=0; j<net.layers[i].num_neurons; j++){
 322:network.c     ****             nidx = rand_n_idx[j];  
 323:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 324:network.c     **** 
 325:network.c     **** 
 326:network.c     ****             rand_w_idx = get_random_indices(net.layers[i - 1].num_neurons);
 327:network.c     ****             // for all neurons on the previous layer
 328:network.c     ****             for (k=0; k<net.layers[i - 1].num_neurons; k++){
 329:network.c     ****                 
 330:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 331:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 332:network.c     ****                 // We are looking for THIS MULTIPLICATION
 333:network.c     ****             }
 334:network.c     ****             //get a values
 335:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 336:network.c     ****             //apply relu
 337:network.c     ****             if(i < net.num_layers-1){
 338:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 2073              		.loc 1 338 19 view .LVU647
 2074 0012 4FF0000A 		mov	r10, #0
 2075              	.LVL165:
 2076              	.L81:
 317:network.c     ****         
 2077              		.loc 1 317 15 is_stmt 1 discriminator 1 view .LVU648
 317:network.c     ****         
 2078              		.loc 1 317 5 is_stmt 0 discriminator 1 view .LVU649
 2079 0016 009B     		ldr	r3, [sp]
 2080 0018 9F42     		cmp	r7, r3
 2081 001a 02DB     		blt	.L89
 339:network.c     ****                 {
 340:network.c     ****                     net.layers[i].neurons[nidx].a = 0;
 341:network.c     ****                 }
 342:network.c     **** 
 343:network.c     ****                 else
 344:network.c     ****                 {
 345:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 346:network.c     ****                 }
 347:network.c     ****             }
 348:network.c     ****             //apply sigmoid to the last layer
 349:network.c     ****             else{
 350:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 351:network.c     ****             }
 352:network.c     ****         }
 353:network.c     ****         //OPTIONAL DUMMY OPERATIONS
 354:network.c     ****         //if (dummy_operations > 0){
 355:network.c     ****         //    for (volatile int dummy_i = 0; dummy_i<10; dummy_i++) {
 356:network.c     ****         //        result = scmd *scmd;
 357:network.c     ****         //        result = scmd *scmd;
 358:network.c     ****         //        result = scmd *scmd;
 359:network.c     ****         //    }
 360:network.c     ****         //}
 361:network.c     ****     }
 362:network.c     **** }
 2082              		.loc 1 362 1 view .LVU650
 2083 001c 09B0     		add	sp, sp, #36
 2084              	.LCFI31:
 2085              		.cfi_remember_state
 2086              		.cfi_def_cfa_offset 36
 2087              	.LVL166:
 2088              		.loc 1 362 1 view .LVU651
 2089              		@ sp needed
 2090 001e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2091              	.LVL167:
 2092              	.L89:
 2093              	.LCFI32:
 2094              		.cfi_restore_state
 319:network.c     ****         // for each neuron in this layer
 2095              		.loc 1 319 9 is_stmt 1 view .LVU652
 319:network.c     ****         // for each neuron in this layer
 2096              		.loc 1 319 22 is_stmt 0 view .LVU653
 2097 0022 A068     		ldr	r0, [r4, #8]
 2098 0024 FFF7FEFF 		bl	get_random_indices
 2099              	.LVL168:
 321:network.c     ****             nidx = rand_n_idx[j];  
 2100              		.loc 1 321 15 view .LVU654
 2101 0028 4FF00008 		mov	r8, #0
 319:network.c     ****         // for each neuron in this layer
 2102              		.loc 1 319 22 view .LVU655
 2103 002c 0390     		str	r0, [sp, #12]
 2104              	.LVL169:
 321:network.c     ****             nidx = rand_n_idx[j];  
 2105              		.loc 1 321 9 is_stmt 1 view .LVU656
 323:network.c     **** 
 2106              		.loc 1 323 66 is_stmt 0 view .LVU657
 2107 002e 4FF0140B 		mov	fp, #20
 2108              	.LVL170:
 2109              	.L82:
 321:network.c     ****             nidx = rand_n_idx[j];  
 2110              		.loc 1 321 19 is_stmt 1 discriminator 1 view .LVU658
 321:network.c     ****             nidx = rand_n_idx[j];  
 2111              		.loc 1 321 9 is_stmt 0 discriminator 1 view .LVU659
 2112 0032 A368     		ldr	r3, [r4, #8]
 2113 0034 4345     		cmp	r3, r8
 2114 0036 02DC     		bgt	.L88
 317:network.c     ****         
 2115              		.loc 1 317 33 is_stmt 1 discriminator 2 view .LVU660
 317:network.c     ****         
 2116              		.loc 1 317 34 is_stmt 0 discriminator 2 view .LVU661
 2117 0038 0137     		adds	r7, r7, #1
 2118              	.LVL171:
 317:network.c     ****         
 2119              		.loc 1 317 34 discriminator 2 view .LVU662
 2120 003a 0834     		adds	r4, r4, #8
 2121 003c EBE7     		b	.L81
 2122              	.L88:
 322:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2123              		.loc 1 322 13 is_stmt 1 view .LVU663
 2124              	.LVL172:
 323:network.c     **** 
 2125              		.loc 1 323 13 view .LVU664
 323:network.c     **** 
 2126              		.loc 1 323 66 is_stmt 0 view .LVU665
 2127 003e 039B     		ldr	r3, [sp, #12]
 326:network.c     ****             // for all neurons on the previous layer
 2128              		.loc 1 326 26 view .LVU666
 2129 0040 2068     		ldr	r0, [r4]
 323:network.c     **** 
 2130              		.loc 1 323 66 view .LVU667
 2131 0042 53F82850 		ldr	r5, [r3, r8, lsl #2]
 2132 0046 E368     		ldr	r3, [r4, #12]
 2133 0048 0BFB05F9 		mul	r9, fp, r5
 2134 004c 4B44     		add	r3, r3, r9
 323:network.c     **** 
 2135              		.loc 1 323 43 view .LVU668
 2136 004e 9A68     		ldr	r2, [r3, #8]	@ float
 2137 0050 DA60     		str	r2, [r3, #12]	@ float
 2138              	.LVL173:
 326:network.c     ****             // for all neurons on the previous layer
 2139              		.loc 1 326 13 is_stmt 1 view .LVU669
 326:network.c     ****             // for all neurons on the previous layer
 2140              		.loc 1 326 26 is_stmt 0 view .LVU670
 2141 0052 FFF7FEFF 		bl	get_random_indices
 2142              	.LVL174:
 328:network.c     ****                 
 2143              		.loc 1 328 42 view .LVU671
 2144 0056 2368     		ldr	r3, [r4]
 330:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2145              		.loc 1 330 70 view .LVU672
 2146 0058 E668     		ldr	r6, [r4, #12]
 328:network.c     ****                 
 2147              		.loc 1 328 42 view .LVU673
 2148 005a 0293     		str	r3, [sp, #8]
 331:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2149              		.loc 1 331 65 view .LVU674
 2150 005c AB00     		lsls	r3, r5, #2
 2151 005e 0193     		str	r3, [sp, #4]
 326:network.c     ****             // for all neurons on the previous layer
 2152              		.loc 1 326 26 view .LVU675
 2153 0060 0246     		mov	r2, r0
 2154              	.LVL175:
 328:network.c     ****                 
 2155              		.loc 1 328 13 is_stmt 1 view .LVU676
 330:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2156              		.loc 1 330 70 is_stmt 0 view .LVU677
 2157 0062 4E44     		add	r6, r6, r9
 328:network.c     ****                 
 2158              		.loc 1 328 19 view .LVU678
 2159 0064 0023     		movs	r3, #0
 2160              	.LVL176:
 2161              	.L83:
 328:network.c     ****                 
 2162              		.loc 1 328 23 is_stmt 1 discriminator 1 view .LVU679
 328:network.c     ****                 
 2163              		.loc 1 328 13 is_stmt 0 discriminator 1 view .LVU680
 2164 0066 0299     		ldr	r1, [sp, #8]
 330:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2165              		.loc 1 330 76 discriminator 1 view .LVU681
 2166 0068 F568     		ldr	r5, [r6, #12]	@ float
 328:network.c     ****                 
 2167              		.loc 1 328 13 discriminator 1 view .LVU682
 2168 006a 9942     		cmp	r1, r3
 2169 006c 0EDC     		bgt	.L84
 335:network.c     ****             //apply relu
 2170              		.loc 1 335 13 is_stmt 1 view .LVU683
 337:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 2171              		.loc 1 337 34 is_stmt 0 view .LVU684
 2172 006e 009B     		ldr	r3, [sp]
 2173              	.LVL177:
 335:network.c     ****             //apply relu
 2174              		.loc 1 335 43 view .LVU685
 2175 0070 3561     		str	r5, [r6, #16]	@ float
 337:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 2176              		.loc 1 337 13 is_stmt 1 view .LVU686
 337:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 2177              		.loc 1 337 34 is_stmt 0 view .LVU687
 2178 0072 013B     		subs	r3, r3, #1
 337:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 2179              		.loc 1 337 15 view .LVU688
 2180 0074 BB42     		cmp	r3, r7
 2181 0076 1EDD     		ble	.L85
 338:network.c     ****                 {
 2182              		.loc 1 338 17 is_stmt 1 view .LVU689
 338:network.c     ****                 {
 2183              		.loc 1 338 19 is_stmt 0 view .LVU690
 2184 0078 5146     		mov	r1, r10
 2185 007a 2846     		mov	r0, r5
 2186 007c FFF7FEFF 		bl	__aeabi_fcmplt
 2187              	.LVL178:
 338:network.c     ****                 {
 2188              		.loc 1 338 19 view .LVU691
 2189 0080 08B1     		cbz	r0, .L86
 340:network.c     ****                 }
 2190              		.loc 1 340 21 is_stmt 1 view .LVU692
 340:network.c     ****                 }
 2191              		.loc 1 340 51 is_stmt 0 view .LVU693
 2192 0082 C6F810A0 		str	r10, [r6, #16]	@ float
 2193              	.L86:
 321:network.c     ****             nidx = rand_n_idx[j];  
 2194              		.loc 1 321 48 is_stmt 1 discriminator 2 view .LVU694
 321:network.c     ****             nidx = rand_n_idx[j];  
 2195              		.loc 1 321 49 is_stmt 0 discriminator 2 view .LVU695
 2196 0086 08F10108 		add	r8, r8, #1
 2197              	.LVL179:
 321:network.c     ****             nidx = rand_n_idx[j];  
 2198              		.loc 1 321 49 discriminator 2 view .LVU696
 2199 008a D2E7     		b	.L82
 2200              	.LVL180:
 2201              	.L84:
 330:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2202              		.loc 1 330 17 is_stmt 1 discriminator 3 view .LVU697
 331:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2203              		.loc 1 331 42 is_stmt 0 discriminator 3 view .LVU698
 2204 008c 52F82300 		ldr	r0, [r2, r3, lsl #2]
 2205 0090 6168     		ldr	r1, [r4, #4]
 2206 0092 0BFB0011 		mla	r1, fp, r0, r1
 2207 0096 CDE90432 		strd	r3, r2, [sp, #16]
 331:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2208              		.loc 1 331 65 discriminator 3 view .LVU699
 2209 009a 4868     		ldr	r0, [r1, #4]
 331:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2210              		.loc 1 331 73 discriminator 3 view .LVU700
 2211 009c 019B     		ldr	r3, [sp, #4]
 2212              	.LVL181:
 331:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2213              		.loc 1 331 73 discriminator 3 view .LVU701
 2214 009e 0969     		ldr	r1, [r1, #16]	@ float
 2215 00a0 C058     		ldr	r0, [r0, r3]	@ float
 2216 00a2 FFF7FEFF 		bl	__aeabi_fmul
 2217              	.LVL182:
 330:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2218              		.loc 1 330 79 discriminator 3 view .LVU702
 2219 00a6 2946     		mov	r1, r5
 2220 00a8 FFF7FEFF 		bl	__aeabi_fadd
 2221              	.LVL183:
 328:network.c     ****                 
 2222              		.loc 1 328 57 discriminator 3 view .LVU703
 2223 00ac 049B     		ldr	r3, [sp, #16]
 2224 00ae 059A     		ldr	r2, [sp, #20]
 330:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2225              		.loc 1 330 47 discriminator 3 view .LVU704
 2226 00b0 F060     		str	r0, [r6, #12]	@ float
 328:network.c     ****                 
 2227              		.loc 1 328 56 is_stmt 1 discriminator 3 view .LVU705
 328:network.c     ****                 
 2228              		.loc 1 328 57 is_stmt 0 discriminator 3 view .LVU706
 2229 00b2 0133     		adds	r3, r3, #1
 2230              	.LVL184:
 328:network.c     ****                 
 2231              		.loc 1 328 57 discriminator 3 view .LVU707
 2232 00b4 D7E7     		b	.L83
 2233              	.LVL185:
 2234              	.L85:
 350:network.c     ****             }
 2235              		.loc 1 350 17 is_stmt 1 view .LVU708
 350:network.c     ****             }
 2236              		.loc 1 350 58 is_stmt 0 view .LVU709
 2237 00b6 05F10040 		add	r0, r5, #-2147483648
 350:network.c     ****             }
 2238              		.loc 1 350 54 view .LVU710
 2239 00ba FFF7FEFF 		bl	__aeabi_f2d
 2240              	.LVL186:
 350:network.c     ****             }
 2241              		.loc 1 350 54 view .LVU711
 2242 00be FFF7FEFF 		bl	exp
 2243              	.LVL187:
 350:network.c     ****             }
 2244              		.loc 1 350 47 view .LVU712
 2245 00c2 E368     		ldr	r3, [r4, #12]
 350:network.c     ****             }
 2246              		.loc 1 350 53 view .LVU713
 2247 00c4 0022     		movs	r2, #0
 350:network.c     ****             }
 2248              		.loc 1 350 47 view .LVU714
 2249 00c6 9944     		add	r9, r9, r3
 350:network.c     ****             }
 2250              		.loc 1 350 53 view .LVU715
 2251 00c8 064B     		ldr	r3, .L91
 2252 00ca FFF7FEFF 		bl	__aeabi_dadd
 2253              	.LVL188:
 2254 00ce 0246     		mov	r2, r0
 2255 00d0 0B46     		mov	r3, r1
 350:network.c     ****             }
 2256              		.loc 1 350 50 view .LVU716
 2257 00d2 0020     		movs	r0, #0
 2258 00d4 0349     		ldr	r1, .L91
 2259 00d6 FFF7FEFF 		bl	__aeabi_ddiv
 2260              	.LVL189:
 2261 00da FFF7FEFF 		bl	__aeabi_d2f
 2262              	.LVL190:
 2263 00de C9F81000 		str	r0, [r9, #16]	@ float
 2264 00e2 D0E7     		b	.L86
 2265              	.L92:
 2266              		.align	2
 2267              	.L91:
 2268 00e4 0000F03F 		.word	1072693248
 2269              		.cfi_endproc
 2270              	.LFE17:
 2272              		.section	.text.forward,"ax",%progbits
 2273              		.align	1
 2274              		.global	forward
 2275              		.syntax unified
 2276              		.thumb
 2277              		.thumb_func
 2278              		.fpu softvfp
 2280              	forward:
 2281              	.LVL191:
 2282              	.LFB18:
 363:network.c     **** 
 364:network.c     **** void forward(network net, int dummy_operations){
 2283              		.loc 1 364 48 is_stmt 1 view -0
 2284              		.cfi_startproc
 2285              		@ args = 0, pretend = 0, frame = 24
 2286              		@ frame_needed = 0, uses_anonymous_args = 0
 2287              		.loc 1 364 48 is_stmt 0 view .LVU718
 2288 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2289              	.LCFI33:
 2290              		.cfi_def_cfa_offset 36
 2291              		.cfi_offset 4, -36
 2292              		.cfi_offset 5, -32
 2293              		.cfi_offset 6, -28
 2294              		.cfi_offset 7, -24
 2295              		.cfi_offset 8, -20
 2296              		.cfi_offset 9, -16
 2297              		.cfi_offset 10, -12
 2298              		.cfi_offset 11, -8
 2299              		.cfi_offset 14, -4
 2300 0004 87B0     		sub	sp, sp, #28
 2301              	.LCFI34:
 2302              		.cfi_def_cfa_offset 64
 2303              		.loc 1 364 48 view .LVU719
 2304 0006 6B46     		mov	r3, sp
 2305 0008 83E80300 		stm	r3, {r0, r1}
 365:network.c     ****     volatile int i, j, k;
 366:network.c     ****     //uint8_t result, scmd = 16;
 367:network.c     ****     // for each layer
 368:network.c     ****     for (i=1; i<net.num_layers; i++){
 2306              		.loc 1 368 11 view .LVU720
 2307 000c 0123     		movs	r3, #1
 2308 000e 8046     		mov	r8, r0
 2309              	.LVL192:
 2310              		.loc 1 368 11 view .LVU721
 2311 0010 0C46     		mov	r4, r1
 2312              	.LVL193:
 365:network.c     ****     volatile int i, j, k;
 2313              		.loc 1 365 5 is_stmt 1 view .LVU722
 2314              		.loc 1 368 5 view .LVU723
 2315              		.loc 1 368 11 is_stmt 0 view .LVU724
 2316 0012 0393     		str	r3, [sp, #12]
 369:network.c     ****         
 370:network.c     ****         // for each neuron in this layer
 371:network.c     ****         for (j=0; j<net.layers[i].num_neurons; j++){   
 372:network.c     ****             net.layers[i].neurons[j].z = net.layers[i].neurons[j].bias;
 373:network.c     **** 
 374:network.c     ****             // for all neurons on the previous layer
 375:network.c     ****             for (k=0; k<net.layers[i - 1].num_neurons; k++){
 376:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 377:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 378:network.c     ****                 // We are looking for THIS MULTIPLICATION
 379:network.c     ****             }
 380:network.c     ****             //get a values
 381:network.c     ****             net.layers[i].neurons[j].a = net.layers[i].neurons[j].z;
 382:network.c     ****             //apply relu
 383:network.c     ****             if(i < net.num_layers-1){
 384:network.c     ****                 if((net.layers[i].neurons[j].z) < 0)
 2317              		.loc 1 384 19 view .LVU725
 2318 0014 4FF00009 		mov	r9, #0
 2319              	.LVL194:
 2320              	.L94:
 368:network.c     ****         
 2321              		.loc 1 368 15 is_stmt 1 discriminator 1 view .LVU726
 368:network.c     ****         
 2322              		.loc 1 368 16 is_stmt 0 discriminator 1 view .LVU727
 2323 0018 039B     		ldr	r3, [sp, #12]
 368:network.c     ****         
 2324              		.loc 1 368 5 discriminator 1 view .LVU728
 2325 001a 4345     		cmp	r3, r8
 2326 001c 02DB     		blt	.L103
 385:network.c     ****                 {
 386:network.c     ****                     net.layers[i].neurons[j].a = 0;
 387:network.c     ****                 }
 388:network.c     **** 
 389:network.c     ****                 else
 390:network.c     ****                 {
 391:network.c     ****                     net.layers[i].neurons[j].a = net.layers[i].neurons[j].z;
 392:network.c     ****                 }
 393:network.c     ****             }
 394:network.c     ****             //apply sigmoid to the last layer
 395:network.c     ****             else{
 396:network.c     ****                 net.layers[i].neurons[j].a = 1/(1+exp(-net.layers[i].neurons[j].z));
 397:network.c     ****             }
 398:network.c     ****         }
 399:network.c     ****         //OPTIONAL DUMMY OPERATIONS
 400:network.c     ****         //if (dummy_operations > 0){
 401:network.c     ****         //    for (volatile int dummy_i = 0; dummy_i<10; dummy_i++) {
 402:network.c     ****         //        result = scmd *scmd;
 403:network.c     ****         //        result = scmd *scmd;
 404:network.c     ****         //        result = scmd *scmd;
 405:network.c     ****         //    }
 406:network.c     ****         //}
 407:network.c     ****     }
 408:network.c     **** }
 2327              		.loc 1 408 1 view .LVU729
 2328 001e 07B0     		add	sp, sp, #28
 2329              	.LCFI35:
 2330              		.cfi_remember_state
 2331              		.cfi_def_cfa_offset 36
 2332              		@ sp needed
 2333 0020 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2334              	.LVL195:
 2335              	.L103:
 2336              	.LCFI36:
 2337              		.cfi_restore_state
 371:network.c     ****             net.layers[i].neurons[j].z = net.layers[i].neurons[j].bias;
 2338              		.loc 1 371 9 is_stmt 1 view .LVU730
 371:network.c     ****             net.layers[i].neurons[j].z = net.layers[i].neurons[j].bias;
 2339              		.loc 1 371 15 is_stmt 0 view .LVU731
 2340 0024 0023     		movs	r3, #0
 2341 0026 0493     		str	r3, [sp, #16]
 372:network.c     **** 
 2342              		.loc 1 372 40 view .LVU732
 2343 0028 1425     		movs	r5, #20
 2344              	.L95:
 371:network.c     ****             net.layers[i].neurons[j].z = net.layers[i].neurons[j].bias;
 2345              		.loc 1 371 19 is_stmt 1 discriminator 1 view .LVU733
 371:network.c     ****             net.layers[i].neurons[j].z = net.layers[i].neurons[j].bias;
 2346              		.loc 1 371 31 is_stmt 0 discriminator 1 view .LVU734
 2347 002a 039A     		ldr	r2, [sp, #12]
 371:network.c     ****             net.layers[i].neurons[j].z = net.layers[i].neurons[j].bias;
 2348              		.loc 1 371 20 discriminator 1 view .LVU735
 2349 002c 049B     		ldr	r3, [sp, #16]
 371:network.c     ****             net.layers[i].neurons[j].z = net.layers[i].neurons[j].bias;
 2350              		.loc 1 371 9 discriminator 1 view .LVU736
 2351 002e 54F83220 		ldr	r2, [r4, r2, lsl #3]
 2352 0032 9A42     		cmp	r2, r3
 2353 0034 03DC     		bgt	.L102
 368:network.c     ****         
 2354              		.loc 1 368 33 is_stmt 1 discriminator 2 view .LVU737
 368:network.c     ****         
 2355              		.loc 1 368 34 is_stmt 0 discriminator 2 view .LVU738
 2356 0036 039B     		ldr	r3, [sp, #12]
 2357 0038 0133     		adds	r3, r3, #1
 2358 003a 0393     		str	r3, [sp, #12]
 2359 003c ECE7     		b	.L94
 2360              	.L102:
 372:network.c     **** 
 2361              		.loc 1 372 13 is_stmt 1 view .LVU739
 372:network.c     **** 
 2362              		.loc 1 372 52 is_stmt 0 view .LVU740
 2363 003e 0399     		ldr	r1, [sp, #12]
 372:network.c     **** 
 2364              		.loc 1 372 63 view .LVU741
 2365 0040 049E     		ldr	r6, [sp, #16]
 372:network.c     **** 
 2366              		.loc 1 372 23 view .LVU742
 2367 0042 0398     		ldr	r0, [sp, #12]
 372:network.c     **** 
 2368              		.loc 1 372 34 view .LVU743
 2369 0044 049A     		ldr	r2, [sp, #16]
 372:network.c     **** 
 2370              		.loc 1 372 40 view .LVU744
 2371 0046 04EBC000 		add	r0, r4, r0, lsl #3
 372:network.c     **** 
 2372              		.loc 1 372 66 view .LVU745
 2373 004a 04EBC101 		add	r1, r4, r1, lsl #3
 372:network.c     **** 
 2374              		.loc 1 372 40 view .LVU746
 2375 004e 4368     		ldr	r3, [r0, #4]
 2376 0050 05FB0233 		mla	r3, r5, r2, r3
 372:network.c     **** 
 2377              		.loc 1 372 66 view .LVU747
 2378 0054 4A68     		ldr	r2, [r1, #4]
 2379 0056 05FB0622 		mla	r2, r5, r6, r2
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2380              		.loc 1 375 35 view .LVU748
 2381 005a 6FF06046 		mvn	r6, #-536870912
 372:network.c     **** 
 2382              		.loc 1 372 40 view .LVU749
 2383 005e 9268     		ldr	r2, [r2, #8]	@ float
 2384 0060 DA60     		str	r2, [r3, #12]	@ float
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2385              		.loc 1 375 13 is_stmt 1 view .LVU750
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2386              		.loc 1 375 19 is_stmt 0 view .LVU751
 2387 0062 0023     		movs	r3, #0
 2388 0064 0593     		str	r3, [sp, #20]
 2389              	.L96:
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2390              		.loc 1 375 23 is_stmt 1 discriminator 1 view .LVU752
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2391              		.loc 1 375 35 is_stmt 0 discriminator 1 view .LVU753
 2392 0066 039B     		ldr	r3, [sp, #12]
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2393              		.loc 1 375 24 discriminator 1 view .LVU754
 2394 0068 059A     		ldr	r2, [sp, #20]
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2395              		.loc 1 375 35 discriminator 1 view .LVU755
 2396 006a 3344     		add	r3, r3, r6
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2397              		.loc 1 375 13 discriminator 1 view .LVU756
 2398 006c 54F83330 		ldr	r3, [r4, r3, lsl #3]
 2399 0070 9342     		cmp	r3, r2
 2400 0072 2EDC     		bgt	.L97
 381:network.c     ****             //apply relu
 2401              		.loc 1 381 13 is_stmt 1 view .LVU757
 381:network.c     ****             //apply relu
 2402              		.loc 1 381 52 is_stmt 0 view .LVU758
 2403 0074 0399     		ldr	r1, [sp, #12]
 381:network.c     ****             //apply relu
 2404              		.loc 1 381 63 view .LVU759
 2405 0076 049E     		ldr	r6, [sp, #16]
 381:network.c     ****             //apply relu
 2406              		.loc 1 381 23 view .LVU760
 2407 0078 0398     		ldr	r0, [sp, #12]
 381:network.c     ****             //apply relu
 2408              		.loc 1 381 34 view .LVU761
 2409 007a 049A     		ldr	r2, [sp, #16]
 381:network.c     ****             //apply relu
 2410              		.loc 1 381 40 view .LVU762
 2411 007c 04EBC000 		add	r0, r4, r0, lsl #3
 381:network.c     ****             //apply relu
 2412              		.loc 1 381 66 view .LVU763
 2413 0080 04EBC101 		add	r1, r4, r1, lsl #3
 381:network.c     ****             //apply relu
 2414              		.loc 1 381 40 view .LVU764
 2415 0084 4368     		ldr	r3, [r0, #4]
 2416 0086 05FB0233 		mla	r3, r5, r2, r3
 381:network.c     ****             //apply relu
 2417              		.loc 1 381 66 view .LVU765
 2418 008a 4A68     		ldr	r2, [r1, #4]
 2419 008c 05FB0622 		mla	r2, r5, r6, r2
 381:network.c     ****             //apply relu
 2420              		.loc 1 381 40 view .LVU766
 2421 0090 D268     		ldr	r2, [r2, #12]	@ float
 2422 0092 1A61     		str	r2, [r3, #16]	@ float
 383:network.c     ****                 if((net.layers[i].neurons[j].z) < 0)
 2423              		.loc 1 383 13 is_stmt 1 view .LVU767
 383:network.c     ****                 if((net.layers[i].neurons[j].z) < 0)
 2424              		.loc 1 383 18 is_stmt 0 view .LVU768
 2425 0094 039B     		ldr	r3, [sp, #12]
 383:network.c     ****                 if((net.layers[i].neurons[j].z) < 0)
 2426              		.loc 1 383 34 view .LVU769
 2427 0096 08F1FF32 		add	r2, r8, #-1
 383:network.c     ****                 if((net.layers[i].neurons[j].z) < 0)
 2428              		.loc 1 383 15 view .LVU770
 2429 009a 9A42     		cmp	r2, r3
 384:network.c     ****                 {
 2430              		.loc 1 384 31 view .LVU771
 2431 009c 039A     		ldr	r2, [sp, #12]
 384:network.c     ****                 {
 2432              		.loc 1 384 42 view .LVU772
 2433 009e 0499     		ldr	r1, [sp, #16]
 384:network.c     ****                 {
 2434              		.loc 1 384 45 view .LVU773
 2435 00a0 04EBC202 		add	r2, r4, r2, lsl #3
 2436 00a4 5368     		ldr	r3, [r2, #4]
 2437 00a6 05FB0133 		mla	r3, r5, r1, r3
 383:network.c     ****                 if((net.layers[i].neurons[j].z) < 0)
 2438              		.loc 1 383 15 view .LVU774
 2439 00aa 57DD     		ble	.L98
 384:network.c     ****                 {
 2440              		.loc 1 384 17 is_stmt 1 view .LVU775
 384:network.c     ****                 {
 2441              		.loc 1 384 19 is_stmt 0 view .LVU776
 2442 00ac D868     		ldr	r0, [r3, #12]	@ float
 2443 00ae 4946     		mov	r1, r9
 2444 00b0 FFF7FEFF 		bl	__aeabi_fcmplt
 2445              	.LVL196:
 2446 00b4 0028     		cmp	r0, #0
 2447 00b6 40D0     		beq	.L105
 386:network.c     ****                 }
 2448              		.loc 1 386 21 is_stmt 1 view .LVU777
 386:network.c     ****                 }
 2449              		.loc 1 386 31 is_stmt 0 view .LVU778
 2450 00b8 039A     		ldr	r2, [sp, #12]
 386:network.c     ****                 }
 2451              		.loc 1 386 42 view .LVU779
 2452 00ba 0499     		ldr	r1, [sp, #16]
 386:network.c     ****                 }
 2453              		.loc 1 386 48 view .LVU780
 2454 00bc 04EBC202 		add	r2, r4, r2, lsl #3
 2455 00c0 5368     		ldr	r3, [r2, #4]
 2456 00c2 05FB0133 		mla	r3, r5, r1, r3
 2457 00c6 C3F81090 		str	r9, [r3, #16]	@ float
 2458              	.L101:
 371:network.c     ****             net.layers[i].neurons[j].z = net.layers[i].neurons[j].bias;
 2459              		.loc 1 371 48 is_stmt 1 discriminator 2 view .LVU781
 371:network.c     ****             net.layers[i].neurons[j].z = net.layers[i].neurons[j].bias;
 2460              		.loc 1 371 49 is_stmt 0 discriminator 2 view .LVU782
 2461 00ca 049B     		ldr	r3, [sp, #16]
 2462 00cc 0133     		adds	r3, r3, #1
 2463 00ce 0493     		str	r3, [sp, #16]
 2464 00d0 ABE7     		b	.L95
 2465              	.L97:
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2466              		.loc 1 376 17 is_stmt 1 discriminator 3 view .LVU783
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2467              		.loc 1 376 56 is_stmt 0 discriminator 3 view .LVU784
 2468 00d2 DDF80CA0 		ldr	r10, [sp, #12]
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2469              		.loc 1 376 67 discriminator 3 view .LVU785
 2470 00d6 DDF810B0 		ldr	fp, [sp, #16]
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2471              		.loc 1 377 29 discriminator 3 view .LVU786
 2472 00da 039A     		ldr	r2, [sp, #12]
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2473              		.loc 1 377 42 discriminator 3 view .LVU787
 2474 00dc DDF814C0 		ldr	ip, [sp, #20]
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2475              		.loc 1 377 53 discriminator 3 view .LVU788
 2476 00e0 0498     		ldr	r0, [sp, #16]
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2477              		.loc 1 377 71 discriminator 3 view .LVU789
 2478 00e2 039B     		ldr	r3, [sp, #12]
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2479              		.loc 1 377 84 discriminator 3 view .LVU790
 2480 00e4 0599     		ldr	r1, [sp, #20]
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2481              		.loc 1 376 27 discriminator 3 view .LVU791
 2482 00e6 DDF80CE0 		ldr	lr, [sp, #12]
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2483              		.loc 1 376 38 discriminator 3 view .LVU792
 2484 00ea 049F     		ldr	r7, [sp, #16]
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2485              		.loc 1 377 29 discriminator 3 view .LVU793
 2486 00ec 3244     		add	r2, r2, r6
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2487              		.loc 1 377 45 discriminator 3 view .LVU794
 2488 00ee 04EBC202 		add	r2, r4, r2, lsl #3
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2489              		.loc 1 377 71 discriminator 3 view .LVU795
 2490 00f2 3344     		add	r3, r3, r6
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2491              		.loc 1 377 45 discriminator 3 view .LVU796
 2492 00f4 5268     		ldr	r2, [r2, #4]
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2493              		.loc 1 377 87 discriminator 3 view .LVU797
 2494 00f6 04EBC303 		add	r3, r4, r3, lsl #3
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2495              		.loc 1 377 45 discriminator 3 view .LVU798
 2496 00fa 05FB0C22 		mla	r2, r5, ip, r2
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2497              		.loc 1 377 87 discriminator 3 view .LVU799
 2498 00fe 5B68     		ldr	r3, [r3, #4]
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2499              		.loc 1 377 53 discriminator 3 view .LVU800
 2500 0100 5268     		ldr	r2, [r2, #4]
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2501              		.loc 1 376 44 discriminator 3 view .LVU801
 2502 0102 04EBCE0E 		add	lr, r4, lr, lsl #3
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2503              		.loc 1 377 87 discriminator 3 view .LVU802
 2504 0106 05FB0131 		mla	r1, r5, r1, r3
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2505              		.loc 1 376 44 discriminator 3 view .LVU803
 2506 010a DEF804E0 		ldr	lr, [lr, #4]
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2507              		.loc 1 377 58 discriminator 3 view .LVU804
 2508 010e 0969     		ldr	r1, [r1, #16]	@ float
 2509 0110 52F82000 		ldr	r0, [r2, r0, lsl #2]	@ float
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2510              		.loc 1 376 70 discriminator 3 view .LVU805
 2511 0114 04EBCA0A 		add	r10, r4, r10, lsl #3
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2512              		.loc 1 376 44 discriminator 3 view .LVU806
 2513 0118 05FB07E7 		mla	r7, r5, r7, lr
 377:network.c     ****                 // We are looking for THIS MULTIPLICATION
 2514              		.loc 1 377 58 discriminator 3 view .LVU807
 2515 011c FFF7FEFF 		bl	__aeabi_fmul
 2516              	.LVL197:
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2517              		.loc 1 376 70 discriminator 3 view .LVU808
 2518 0120 DAF80430 		ldr	r3, [r10, #4]
 2519 0124 05FB0B3B 		mla	fp, r5, fp, r3
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2520              		.loc 1 376 73 discriminator 3 view .LVU809
 2521 0128 DBF80C10 		ldr	r1, [fp, #12]	@ float
 2522 012c FFF7FEFF 		bl	__aeabi_fadd
 2523              	.LVL198:
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2524              		.loc 1 375 57 discriminator 3 view .LVU810
 2525 0130 059B     		ldr	r3, [sp, #20]
 376:network.c     ****                 ((net.layers[i-1].neurons[k].weights[j]) * (net.layers[i-1].neurons[k].a));
 2526              		.loc 1 376 44 discriminator 3 view .LVU811
 2527 0132 F860     		str	r0, [r7, #12]	@ float
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2528              		.loc 1 375 56 is_stmt 1 discriminator 3 view .LVU812
 375:network.c     ****                 net.layers[i].neurons[j].z = net.layers[i].neurons[j].z +
 2529              		.loc 1 375 57 is_stmt 0 discriminator 3 view .LVU813
 2530 0134 0133     		adds	r3, r3, #1
 2531 0136 0593     		str	r3, [sp, #20]
 2532 0138 95E7     		b	.L96
 2533              	.L105:
 391:network.c     ****                 }
 2534              		.loc 1 391 21 is_stmt 1 view .LVU814
 391:network.c     ****                 }
 2535              		.loc 1 391 60 is_stmt 0 view .LVU815
 2536 013a 0399     		ldr	r1, [sp, #12]
 391:network.c     ****                 }
 2537              		.loc 1 391 71 view .LVU816
 2538 013c 049E     		ldr	r6, [sp, #16]
 391:network.c     ****                 }
 2539              		.loc 1 391 31 view .LVU817
 2540 013e 0398     		ldr	r0, [sp, #12]
 391:network.c     ****                 }
 2541              		.loc 1 391 42 view .LVU818
 2542 0140 049A     		ldr	r2, [sp, #16]
 391:network.c     ****                 }
 2543              		.loc 1 391 48 view .LVU819
 2544 0142 04EBC000 		add	r0, r4, r0, lsl #3
 391:network.c     ****                 }
 2545              		.loc 1 391 74 view .LVU820
 2546 0146 04EBC101 		add	r1, r4, r1, lsl #3
 391:network.c     ****                 }
 2547              		.loc 1 391 48 view .LVU821
 2548 014a 4368     		ldr	r3, [r0, #4]
 2549 014c 05FB0233 		mla	r3, r5, r2, r3
 391:network.c     ****                 }
 2550              		.loc 1 391 74 view .LVU822
 2551 0150 4A68     		ldr	r2, [r1, #4]
 2552 0152 05FB0622 		mla	r2, r5, r6, r2
 391:network.c     ****                 }
 2553              		.loc 1 391 48 view .LVU823
 2554 0156 D268     		ldr	r2, [r2, #12]	@ float
 2555 0158 1A61     		str	r2, [r3, #16]	@ float
 2556 015a B6E7     		b	.L101
 2557              	.L98:
 396:network.c     ****             }
 2558              		.loc 1 396 17 is_stmt 1 view .LVU824
 396:network.c     ****             }
 2559              		.loc 1 396 55 is_stmt 0 view .LVU825
 2560 015c D868     		ldr	r0, [r3, #12]
 2561 015e 00F10040 		add	r0, r0, #-2147483648
 396:network.c     ****             }
 2562              		.loc 1 396 51 view .LVU826
 2563 0162 FFF7FEFF 		bl	__aeabi_f2d
 2564              	.LVL199:
 2565 0166 FFF7FEFF 		bl	exp
 2566              	.LVL200:
 396:network.c     ****             }
 2567              		.loc 1 396 27 view .LVU827
 2568 016a 039B     		ldr	r3, [sp, #12]
 396:network.c     ****             }
 2569              		.loc 1 396 38 view .LVU828
 2570 016c 049A     		ldr	r2, [sp, #16]
 396:network.c     ****             }
 2571              		.loc 1 396 44 view .LVU829
 2572 016e 04EBC303 		add	r3, r4, r3, lsl #3
 2573 0172 5E68     		ldr	r6, [r3, #4]
 396:network.c     ****             }
 2574              		.loc 1 396 50 view .LVU830
 2575 0174 074B     		ldr	r3, .L106
 396:network.c     ****             }
 2576              		.loc 1 396 44 view .LVU831
 2577 0176 05FB0266 		mla	r6, r5, r2, r6
 396:network.c     ****             }
 2578              		.loc 1 396 50 view .LVU832
 2579 017a 0022     		movs	r2, #0
 2580 017c FFF7FEFF 		bl	__aeabi_dadd
 2581              	.LVL201:
 2582 0180 0246     		mov	r2, r0
 2583 0182 0B46     		mov	r3, r1
 396:network.c     ****             }
 2584              		.loc 1 396 47 view .LVU833
 2585 0184 0020     		movs	r0, #0
 2586 0186 0349     		ldr	r1, .L106
 2587 0188 FFF7FEFF 		bl	__aeabi_ddiv
 2588              	.LVL202:
 2589 018c FFF7FEFF 		bl	__aeabi_d2f
 2590              	.LVL203:
 2591 0190 3061     		str	r0, [r6, #16]	@ float
 2592 0192 9AE7     		b	.L101
 2593              	.L107:
 2594              		.align	2
 2595              	.L106:
 2596 0194 0000F03F 		.word	1072693248
 2597              		.cfi_endproc
 2598              	.LFE18:
 2600              		.section	.rodata.str1.1
 2601              	.LC1:
 2602 000f 4F4B3300 		.ascii	"OK3\000"
 2603              		.section	.text.forward_shuffled_NO_AAE_RDO,"ax",%progbits
 2604              		.align	1
 2605              		.global	forward_shuffled_NO_AAE_RDO
 2606              		.syntax unified
 2607              		.thumb
 2608              		.thumb_func
 2609              		.fpu softvfp
 2611              	forward_shuffled_NO_AAE_RDO:
 2612              	.LVL204:
 2613              	.LFB19:
 409:network.c     **** 
 410:network.c     **** void forward_shuffled_NO_AAE_RDO(network net, int**** random_indices, int ***random_dummy_operation
 2614              		.loc 1 410 103 is_stmt 1 view -0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 48
 2617              		@ frame_needed = 0, uses_anonymous_args = 0
 2618              		.loc 1 410 103 is_stmt 0 view .LVU835
 2619 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2620              	.LCFI37:
 2621              		.cfi_def_cfa_offset 36
 2622              		.cfi_offset 4, -36
 2623              		.cfi_offset 5, -32
 2624              		.cfi_offset 6, -28
 2625              		.cfi_offset 7, -24
 2626              		.cfi_offset 8, -20
 2627              		.cfi_offset 9, -16
 2628              		.cfi_offset 10, -12
 2629              		.cfi_offset 11, -8
 2630              		.cfi_offset 14, -4
 2631 0004 8DB0     		sub	sp, sp, #52
 2632              	.LCFI38:
 2633              		.cfi_def_cfa_offset 88
 2634              		.loc 1 410 103 view .LVU836
 2635 0006 06AB     		add	r3, sp, #24
 2636              	.LVL205:
 2637              		.loc 1 410 103 view .LVU837
 2638 0008 83E80300 		stm	r3, {r0, r1}
 411:network.c     ****     int i, j, k, nidx = 0;
 412:network.c     ****     int *rand_n_idx, *rand_w_idx;
 413:network.c     **** 
 414:network.c     ****     int **rand_n_indices = *random_indices[0];
 2639              		.loc 1 414 11 view .LVU838
 2640 000c 1368     		ldr	r3, [r2]
 2641 000e 0090     		str	r0, [sp]
 2642              	.LVL206:
 2643              		.loc 1 414 11 view .LVU839
 2644 0010 1B68     		ldr	r3, [r3]
 2645 0012 0393     		str	r3, [sp, #12]
 415:network.c     ****     int ***rand_ws_indices = random_indices[1];
 2646              		.loc 1 415 12 view .LVU840
 2647 0014 5368     		ldr	r3, [r2, #4]
 2648 0016 0493     		str	r3, [sp, #16]
 2649              	.LBB58:
 416:network.c     **** 
 417:network.c     ****     int *rand_dummy_ops_idx;
 418:network.c     **** 
 419:network.c     ****     uint8_t result, scmd = 16;
 420:network.c     ****     // for each layer
 421:network.c     ****     //printf("Network - num layers = %d\n", net.num_layers);
 422:network.c     ****     for (volatile int i=1; i<net.num_layers; i++){
 2650              		.loc 1 422 23 view .LVU841
 2651 0018 0123     		movs	r3, #1
 2652 001a 0C46     		mov	r4, r1
 2653              	.LVL207:
 2654              		.loc 1 422 23 view .LVU842
 2655              	.LBE58:
 411:network.c     ****     int *rand_n_idx, *rand_w_idx;
 2656              		.loc 1 411 5 is_stmt 1 view .LVU843
 412:network.c     **** 
 2657              		.loc 1 412 5 view .LVU844
 414:network.c     ****     int ***rand_ws_indices = random_indices[1];
 2658              		.loc 1 414 5 view .LVU845
 415:network.c     **** 
 2659              		.loc 1 415 5 view .LVU846
 417:network.c     **** 
 2660              		.loc 1 417 5 view .LVU847
 419:network.c     ****     // for each layer
 2661              		.loc 1 419 5 view .LVU848
 2662              		.loc 1 422 5 view .LVU849
 2663              	.LBB68:
 2664              		.loc 1 422 10 view .LVU850
 2665              		.loc 1 422 23 is_stmt 0 view .LVU851
 2666 001c 0893     		str	r3, [sp, #32]
 2667              	.LBE68:
 411:network.c     ****     int *rand_n_idx, *rand_w_idx;
 2668              		.loc 1 411 18 view .LVU852
 2669 001e 0027     		movs	r7, #0
 2670              	.LBB69:
 2671              	.LBB59:
 423:network.c     ****         //printf("Neuron %d - num of neurons = %d\n", j, net.layers[i].num_neurons);
 424:network.c     ****         rand_n_idx = rand_n_indices[i - 1];
 425:network.c     ****         
 426:network.c     ****         // for each neuron in this layer
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 428:network.c     ****             nidx = rand_n_idx[j];
 429:network.c     ****             //printf("OK\n");
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 431:network.c     ****             //printf("OK2\n");
 432:network.c     ****             
 433:network.c     ****             rand_w_idx = rand_ws_indices[i - 1][j];
 434:network.c     ****             rand_dummy_ops_idx = random_dummy_operations[i - 1][j];
 435:network.c     **** 
 436:network.c     ****             // for all neurons on the previous layer
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 438:network.c     ****                 printf("OK3\n");
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 441:network.c     ****                 // We are looking for THIS MULTIPLICATION
 442:network.c     **** 
 443:network.c     ****                 // Insert a dummy operations if there is a 1 at this index, don't if there is a 0
 444:network.c     ****                 if (rand() %2 == 1){
 445:network.c     ****                 //if (rand_dummy_ops_idx[k] == 1){
 446:network.c     ****                     result = scmd * scmd;
 447:network.c     ****                     result = scmd * scmd;
 448:network.c     ****                 }
 449:network.c     ****             }
 450:network.c     ****             //get a values
 451:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 452:network.c     ****         }
 453:network.c     **** 
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 455:network.c     ****             //apply relu
 456:network.c     ****             if(i < net.num_layers-1){
 457:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 2672              		.loc 1 457 19 view .LVU853
 2673 0020 4FF0000A 		mov	r10, #0
 2674              	.LVL208:
 2675              	.L109:
 2676              		.loc 1 457 19 view .LVU854
 2677              	.LBE59:
 422:network.c     ****         //printf("Neuron %d - num of neurons = %d\n", j, net.layers[i].num_neurons);
 2678              		.loc 1 422 28 is_stmt 1 discriminator 1 view .LVU855
 422:network.c     ****         //printf("Neuron %d - num of neurons = %d\n", j, net.layers[i].num_neurons);
 2679              		.loc 1 422 29 is_stmt 0 discriminator 1 view .LVU856
 2680 0024 089B     		ldr	r3, [sp, #32]
 422:network.c     ****         //printf("Neuron %d - num of neurons = %d\n", j, net.layers[i].num_neurons);
 2681              		.loc 1 422 5 discriminator 1 view .LVU857
 2682 0026 009A     		ldr	r2, [sp]
 2683 0028 9342     		cmp	r3, r2
 2684 002a 02DB     		blt	.L120
 2685              	.LBE69:
 458:network.c     ****                 {
 459:network.c     ****                     net.layers[i].neurons[nidx].a = 0;
 460:network.c     ****                 }
 461:network.c     **** 
 462:network.c     ****                 else
 463:network.c     ****                 {
 464:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 465:network.c     ****                 }
 466:network.c     ****             }
 467:network.c     ****             //apply sigmoid to the last layer
 468:network.c     ****             else{
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 470:network.c     ****             }
 471:network.c     ****         }
 472:network.c     ****     }
 473:network.c     **** }...
 2686              		.loc 1 473 1 view .LVU858
 2687 002c 0DB0     		add	sp, sp, #52
 2688              	.LCFI39:
 2689              		.cfi_remember_state
 2690              		.cfi_def_cfa_offset 36
 2691              	.LVL209:
 2692              		.loc 1 473 1 view .LVU859
 2693              		@ sp needed
 2694 002e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2695              	.LVL210:
 2696              	.L120:
 2697              	.LCFI40:
 2698              		.cfi_restore_state
 2699              	.LBB70:
 424:network.c     ****         rand_n_idx = rand_n_indices[i - 1];
 2700              		.loc 1 424 9 is_stmt 1 view .LVU860
 424:network.c     ****         rand_n_idx = rand_n_indices[i - 1];
 2701              		.loc 1 424 36 is_stmt 0 view .LVU861
 2702 0032 089B     		ldr	r3, [sp, #32]
 424:network.c     ****         rand_n_idx = rand_n_indices[i - 1];
 2703              		.loc 1 424 20 view .LVU862
 2704 0034 039A     		ldr	r2, [sp, #12]
 424:network.c     ****         rand_n_idx = rand_n_indices[i - 1];
 2705              		.loc 1 424 36 view .LVU863
 2706 0036 03F18043 		add	r3, r3, #1073741824
 2707 003a 013B     		subs	r3, r3, #1
 2708 003c 1425     		movs	r5, #20
 424:network.c     ****         rand_n_idx = rand_n_indices[i - 1];
 2709              		.loc 1 424 20 view .LVU864
 2710 003e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2711 0042 0593     		str	r3, [sp, #20]
 2712              	.LVL211:
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 2713              		.loc 1 427 9 is_stmt 1 view .LVU865
 2714              	.LBB60:
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 2715              		.loc 1 427 14 view .LVU866
 2716              	.LBB61:
 438:network.c     ****                 printf("OK3\n");
 2717              		.loc 1 438 17 is_stmt 0 view .LVU867
 2718 0044 644A     		ldr	r2, .L123
 2719              	.LBE61:
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 2720              		.loc 1 427 27 view .LVU868
 2721 0046 0023     		movs	r3, #0
 2722              	.LVL212:
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 2723              		.loc 1 427 27 view .LVU869
 2724 0048 0993     		str	r3, [sp, #36]
 2725              	.L110:
 2726              	.LVL213:
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 2727              		.loc 1 427 32 is_stmt 1 discriminator 1 view .LVU870
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 2728              		.loc 1 427 44 is_stmt 0 discriminator 1 view .LVU871
 2729 004a 0899     		ldr	r1, [sp, #32]
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 2730              		.loc 1 427 33 discriminator 1 view .LVU872
 2731 004c 099B     		ldr	r3, [sp, #36]
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 2732              		.loc 1 427 9 discriminator 1 view .LVU873
 2733 004e 54F83110 		ldr	r1, [r4, r1, lsl #3]
 2734 0052 9942     		cmp	r1, r3
 2735 0054 0FDC     		bgt	.L113
 2736              	.LBE60:
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 2737              		.loc 1 454 9 is_stmt 1 view .LVU874
 2738              	.LBB65:
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 2739              		.loc 1 454 14 view .LVU875
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 2740              		.loc 1 454 27 is_stmt 0 view .LVU876
 2741 0056 0023     		movs	r3, #0
 2742 0058 0B93     		str	r3, [sp, #44]
 456:network.c     ****             if(i < net.num_layers-1){
 2743              		.loc 1 456 34 view .LVU877
 2744 005a 009B     		ldr	r3, [sp]
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 2745              		.loc 1 469 80 view .LVU878
 2746 005c 7D43     		muls	r5, r7, r5
 456:network.c     ****             if(i < net.num_layers-1){
 2747              		.loc 1 456 34 view .LVU879
 2748 005e 03F1FF38 		add	r8, r3, #-1
 2749              	.L114:
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 2750              		.loc 1 454 32 is_stmt 1 discriminator 1 view .LVU880
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 2751              		.loc 1 454 44 is_stmt 0 discriminator 1 view .LVU881
 2752 0062 089A     		ldr	r2, [sp, #32]
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 2753              		.loc 1 454 33 discriminator 1 view .LVU882
 2754 0064 0B9B     		ldr	r3, [sp, #44]
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 2755              		.loc 1 454 9 discriminator 1 view .LVU883
 2756 0066 54F83220 		ldr	r2, [r4, r2, lsl #3]
 2757 006a 9A42     		cmp	r2, r3
 456:network.c     ****             if(i < net.num_layers-1){
 2758              		.loc 1 456 18 discriminator 1 view .LVU884
 2759 006c 089B     		ldr	r3, [sp, #32]
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 2760              		.loc 1 454 9 discriminator 1 view .LVU885
 2761 006e 75DC     		bgt	.L119
 2762              	.LBE65:
 422:network.c     ****     for (volatile int i=1; i<net.num_layers; i++){
 2763              		.loc 1 422 46 is_stmt 1 discriminator 2 view .LVU886
 422:network.c     ****     for (volatile int i=1; i<net.num_layers; i++){
 2764              		.loc 1 422 47 is_stmt 0 discriminator 2 view .LVU887
 2765 0070 0133     		adds	r3, r3, #1
 2766 0072 0893     		str	r3, [sp, #32]
 2767 0074 D6E7     		b	.L109
 2768              	.L113:
 2769              	.LBB66:
 428:network.c     ****             nidx = rand_n_idx[j];
 2770              		.loc 1 428 13 is_stmt 1 view .LVU888
 428:network.c     ****             nidx = rand_n_idx[j];
 2771              		.loc 1 428 30 is_stmt 0 view .LVU889
 2772 0076 099B     		ldr	r3, [sp, #36]
 428:network.c     ****             nidx = rand_n_idx[j];
 2773              		.loc 1 428 18 view .LVU890
 2774 0078 0599     		ldr	r1, [sp, #20]
 433:network.c     ****             rand_w_idx = rand_ws_indices[i - 1][j];
 2775              		.loc 1 433 24 view .LVU891
 2776 007a 0498     		ldr	r0, [sp, #16]
 428:network.c     ****             nidx = rand_n_idx[j];
 2777              		.loc 1 428 18 view .LVU892
 2778 007c 51F82370 		ldr	r7, [r1, r3, lsl #2]
 2779              	.LVL214:
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2780              		.loc 1 430 13 is_stmt 1 view .LVU893
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2781              		.loc 1 430 55 is_stmt 0 view .LVU894
 2782 0080 0899     		ldr	r1, [sp, #32]
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2783              		.loc 1 430 23 view .LVU895
 2784 0082 089B     		ldr	r3, [sp, #32]
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2785              		.loc 1 430 72 view .LVU896
 2786 0084 04EBC101 		add	r1, r4, r1, lsl #3
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2787              		.loc 1 430 43 view .LVU897
 2788 0088 04EBC303 		add	r3, r4, r3, lsl #3
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2789              		.loc 1 430 72 view .LVU898
 2790 008c 4968     		ldr	r1, [r1, #4]
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2791              		.loc 1 430 43 view .LVU899
 2792 008e 5B68     		ldr	r3, [r3, #4]
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2793              		.loc 1 430 66 view .LVU900
 2794 0090 05FB07F6 		mul	r6, r5, r7
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2795              		.loc 1 430 72 view .LVU901
 2796 0094 3144     		add	r1, r1, r6
 430:network.c     ****             net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].bias;
 2797              		.loc 1 430 43 view .LVU902
 2798 0096 3344     		add	r3, r3, r6
 2799 0098 8968     		ldr	r1, [r1, #8]	@ float
 2800 009a D960     		str	r1, [r3, #12]	@ float
 433:network.c     ****             rand_w_idx = rand_ws_indices[i - 1][j];
 2801              		.loc 1 433 13 is_stmt 1 view .LVU903
 433:network.c     ****             rand_w_idx = rand_ws_indices[i - 1][j];
 2802              		.loc 1 433 41 is_stmt 0 view .LVU904
 2803 009c 089B     		ldr	r3, [sp, #32]
 433:network.c     ****             rand_w_idx = rand_ws_indices[i - 1][j];
 2804              		.loc 1 433 48 view .LVU905
 2805 009e 0999     		ldr	r1, [sp, #36]
 433:network.c     ****             rand_w_idx = rand_ws_indices[i - 1][j];
 2806              		.loc 1 433 41 view .LVU906
 2807 00a0 03F18043 		add	r3, r3, #1073741824
 2808 00a4 013B     		subs	r3, r3, #1
 2809              	.LBB62:
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2810              		.loc 1 437 48 view .LVU907
 2811 00a6 6FF06048 		mvn	r8, #-536870912
 2812              	.LBE62:
 433:network.c     ****             rand_w_idx = rand_ws_indices[i - 1][j];
 2813              		.loc 1 433 24 view .LVU908
 2814 00aa 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2815 00ae 53F821B0 		ldr	fp, [r3, r1, lsl #2]
 2816              	.LVL215:
 434:network.c     ****             rand_dummy_ops_idx = random_dummy_operations[i - 1][j];
 2817              		.loc 1 434 13 is_stmt 1 view .LVU909
 434:network.c     ****             rand_dummy_ops_idx = random_dummy_operations[i - 1][j];
 2818              		.loc 1 434 57 is_stmt 0 view .LVU910
 2819 00b2 089B     		ldr	r3, [sp, #32]
 434:network.c     ****             rand_dummy_ops_idx = random_dummy_operations[i - 1][j];
 2820              		.loc 1 434 64 view .LVU911
 2821 00b4 099B     		ldr	r3, [sp, #36]
 2822              	.LVL216:
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2823              		.loc 1 437 13 is_stmt 1 view .LVU912
 2824              	.LBB63:
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2825              		.loc 1 437 18 view .LVU913
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2826              		.loc 1 437 31 is_stmt 0 view .LVU914
 2827 00b6 0023     		movs	r3, #0
 2828 00b8 0A93     		str	r3, [sp, #40]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2829              		.loc 1 440 65 view .LVU915
 2830 00ba BB00     		lsls	r3, r7, #2
 2831 00bc 0293     		str	r3, [sp, #8]
 2832              	.L111:
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2833              		.loc 1 437 36 is_stmt 1 discriminator 1 view .LVU916
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2834              		.loc 1 437 48 is_stmt 0 discriminator 1 view .LVU917
 2835 00be 089B     		ldr	r3, [sp, #32]
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2836              		.loc 1 437 37 discriminator 1 view .LVU918
 2837 00c0 0A99     		ldr	r1, [sp, #40]
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2838              		.loc 1 437 48 discriminator 1 view .LVU919
 2839 00c2 4344     		add	r3, r3, r8
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2840              		.loc 1 437 13 discriminator 1 view .LVU920
 2841 00c4 54F83330 		ldr	r3, [r4, r3, lsl #3]
 2842 00c8 8B42     		cmp	r3, r1
 2843 00ca 0FDC     		bgt	.L112
 2844              	.LBE63:
 451:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2845              		.loc 1 451 13 is_stmt 1 discriminator 2 view .LVU921
 451:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2846              		.loc 1 451 55 is_stmt 0 discriminator 2 view .LVU922
 2847 00cc 0899     		ldr	r1, [sp, #32]
 451:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2848              		.loc 1 451 23 discriminator 2 view .LVU923
 2849 00ce 089B     		ldr	r3, [sp, #32]
 451:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2850              		.loc 1 451 72 discriminator 2 view .LVU924
 2851 00d0 04EBC101 		add	r1, r4, r1, lsl #3
 451:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2852              		.loc 1 451 43 discriminator 2 view .LVU925
 2853 00d4 04EBC303 		add	r3, r4, r3, lsl #3
 451:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2854              		.loc 1 451 72 discriminator 2 view .LVU926
 2855 00d8 4968     		ldr	r1, [r1, #4]
 451:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2856              		.loc 1 451 43 discriminator 2 view .LVU927
 2857 00da 5B68     		ldr	r3, [r3, #4]
 2858 00dc 3344     		add	r3, r3, r6
 451:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2859              		.loc 1 451 72 discriminator 2 view .LVU928
 2860 00de 0E44     		add	r6, r6, r1
 451:network.c     ****             net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2861              		.loc 1 451 43 discriminator 2 view .LVU929
 2862 00e0 F168     		ldr	r1, [r6, #12]	@ float
 2863 00e2 1961     		str	r1, [r3, #16]	@ float
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 2864              		.loc 1 427 61 is_stmt 1 discriminator 2 view .LVU930
 427:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++){
 2865              		.loc 1 427 62 is_stmt 0 discriminator 2 view .LVU931
 2866 00e4 099B     		ldr	r3, [sp, #36]
 2867 00e6 0133     		adds	r3, r3, #1
 2868 00e8 0993     		str	r3, [sp, #36]
 2869 00ea AEE7     		b	.L110
 2870              	.L112:
 2871              	.LBB64:
 438:network.c     ****                 printf("OK3\n");
 2872              		.loc 1 438 17 is_stmt 1 view .LVU932
 2873 00ec 1046     		mov	r0, r2
 2874 00ee FFF7FEFF 		bl	puts
 2875              	.LVL217:
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2876              		.loc 1 439 17 view .LVU933
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2877              		.loc 1 439 59 is_stmt 0 view .LVU934
 2878 00f2 089B     		ldr	r3, [sp, #32]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2879              		.loc 1 440 29 view .LVU935
 2880 00f4 0898     		ldr	r0, [sp, #32]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2881              		.loc 1 440 53 view .LVU936
 2882 00f6 DDF828E0 		ldr	lr, [sp, #40]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2883              		.loc 1 440 86 view .LVU937
 2884 00fa 0899     		ldr	r1, [sp, #32]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2885              		.loc 1 440 42 view .LVU938
 2886 00fc 5BF82EE0 		ldr	lr, [fp, lr, lsl #2]
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2887              		.loc 1 439 59 view .LVU939
 2888 0100 0193     		str	r3, [sp, #4]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2889              		.loc 1 440 29 view .LVU940
 2890 0102 4044     		add	r0, r0, r8
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2891              		.loc 1 440 57 view .LVU941
 2892 0104 04EBC000 		add	r0, r4, r0, lsl #3
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2893              		.loc 1 440 86 view .LVU942
 2894 0108 4144     		add	r1, r1, r8
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2895              		.loc 1 440 110 view .LVU943
 2896 010a 0A9B     		ldr	r3, [sp, #40]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2897              		.loc 1 440 57 view .LVU944
 2898 010c 4068     		ldr	r0, [r0, #4]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2899              		.loc 1 440 99 view .LVU945
 2900 010e 5BF82330 		ldr	r3, [fp, r3, lsl #2]
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2901              		.loc 1 439 27 view .LVU946
 2902 0112 DDF82090 		ldr	r9, [sp, #32]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2903              		.loc 1 440 114 view .LVU947
 2904 0116 04EBC101 		add	r1, r4, r1, lsl #3
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2905              		.loc 1 440 57 view .LVU948
 2906 011a 05FB0E00 		mla	r0, r5, lr, r0
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2907              		.loc 1 440 114 view .LVU949
 2908 011e 4968     		ldr	r1, [r1, #4]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2909              		.loc 1 440 65 view .LVU950
 2910 0120 4068     		ldr	r0, [r0, #4]
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2911              		.loc 1 440 114 view .LVU951
 2912 0122 05FB0311 		mla	r1, r5, r3, r1
 440:network.c     ****                 ((net.layers[i-1].neurons[rand_w_idx[k]].weights[nidx]) * (net.layers[i-1].neurons[
 2913              		.loc 1 440 73 view .LVU952
 2914 0126 029B     		ldr	r3, [sp, #8]
 2915 0128 0969     		ldr	r1, [r1, #16]	@ float
 2916 012a C058     		ldr	r0, [r0, r3]	@ float
 2917 012c FFF7FEFF 		bl	__aeabi_fmul
 2918              	.LVL218:
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2919              		.loc 1 439 76 view .LVU953
 2920 0130 019B     		ldr	r3, [sp, #4]
 2921 0132 04EBC303 		add	r3, r4, r3, lsl #3
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2922              		.loc 1 439 47 view .LVU954
 2923 0136 04EBC909 		add	r9, r4, r9, lsl #3
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2924              		.loc 1 439 76 view .LVU955
 2925 013a 5B68     		ldr	r3, [r3, #4]
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2926              		.loc 1 439 47 view .LVU956
 2927 013c D9F80490 		ldr	r9, [r9, #4]
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2928              		.loc 1 439 76 view .LVU957
 2929 0140 3344     		add	r3, r3, r6
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2930              		.loc 1 439 47 view .LVU958
 2931 0142 B144     		add	r9, r9, r6
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2932              		.loc 1 439 79 view .LVU959
 2933 0144 D968     		ldr	r1, [r3, #12]	@ float
 2934 0146 FFF7FEFF 		bl	__aeabi_fadd
 2935              	.LVL219:
 439:network.c     ****                 net.layers[i].neurons[nidx].z = net.layers[i].neurons[nidx].z +
 2936              		.loc 1 439 47 view .LVU960
 2937 014a C9F80C00 		str	r0, [r9, #12]	@ float
 444:network.c     ****                 if (rand() %2 == 1){
 2938              		.loc 1 444 17 is_stmt 1 view .LVU961
 444:network.c     ****                 if (rand() %2 == 1){
 2939              		.loc 1 444 21 is_stmt 0 view .LVU962
 2940 014e FFF7FEFF 		bl	rand
 2941              	.LVL220:
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2942              		.loc 1 437 69 is_stmt 1 view .LVU963
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2943              		.loc 1 437 70 is_stmt 0 view .LVU964
 2944 0152 0A9B     		ldr	r3, [sp, #40]
 2945 0154 204A     		ldr	r2, .L123
 2946 0156 0133     		adds	r3, r3, #1
 2947 0158 0A93     		str	r3, [sp, #40]
 2948 015a B0E7     		b	.L111
 2949              	.LVL221:
 2950              	.L119:
 437:network.c     ****             for (volatile int k=0; k<net.layers[i - 1].num_neurons; k++){
 2951              		.loc 1 437 70 view .LVU965
 2952              	.LBE64:
 2953              	.LBE66:
 2954              	.LBB67:
 456:network.c     ****             if(i < net.num_layers-1){
 2955              		.loc 1 456 13 is_stmt 1 view .LVU966
 456:network.c     ****             if(i < net.num_layers-1){
 2956              		.loc 1 456 15 is_stmt 0 view .LVU967
 2957 015c 9845     		cmp	r8, r3
 457:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 2958              		.loc 1 457 31 view .LVU968
 2959 015e 089B     		ldr	r3, [sp, #32]
 457:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 2960              		.loc 1 457 48 view .LVU969
 2961 0160 04EBC303 		add	r3, r4, r3, lsl #3
 2962 0164 5B68     		ldr	r3, [r3, #4]
 2963 0166 2B44     		add	r3, r3, r5
 456:network.c     ****             if(i < net.num_layers-1){
 2964              		.loc 1 456 15 view .LVU970
 2965 0168 1CDD     		ble	.L115
 457:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 2966              		.loc 1 457 17 is_stmt 1 view .LVU971
 457:network.c     ****                 if((net.layers[i].neurons[nidx].z) < 0)
 2967              		.loc 1 457 19 is_stmt 0 view .LVU972
 2968 016a D868     		ldr	r0, [r3, #12]	@ float
 2969 016c 5146     		mov	r1, r10
 2970 016e FFF7FEFF 		bl	__aeabi_fcmplt
 2971              	.LVL222:
 2972 0172 50B1     		cbz	r0, .L122
 459:network.c     ****                     net.layers[i].neurons[nidx].a = 0;
 2973              		.loc 1 459 21 is_stmt 1 view .LVU973
 459:network.c     ****                     net.layers[i].neurons[nidx].a = 0;
 2974              		.loc 1 459 31 is_stmt 0 view .LVU974
 2975 0174 089B     		ldr	r3, [sp, #32]
 459:network.c     ****                     net.layers[i].neurons[nidx].a = 0;
 2976              		.loc 1 459 51 view .LVU975
 2977 0176 04EBC303 		add	r3, r4, r3, lsl #3
 2978 017a 5B68     		ldr	r3, [r3, #4]
 2979 017c 2B44     		add	r3, r3, r5
 2980 017e C3F810A0 		str	r10, [r3, #16]	@ float
 2981              	.L118:
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 2982              		.loc 1 454 61 is_stmt 1 discriminator 2 view .LVU976
 454:network.c     ****         for (volatile int j=0; j<net.layers[i].num_neurons; j++) {
 2983              		.loc 1 454 62 is_stmt 0 discriminator 2 view .LVU977
 2984 0182 0B9B     		ldr	r3, [sp, #44]
 2985 0184 0133     		adds	r3, r3, #1
 2986 0186 0B93     		str	r3, [sp, #44]
 2987 0188 6BE7     		b	.L114
 2988              	.L122:
 464:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2989              		.loc 1 464 21 is_stmt 1 view .LVU978
 464:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2990              		.loc 1 464 63 is_stmt 0 view .LVU979
 2991 018a 089A     		ldr	r2, [sp, #32]
 464:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2992              		.loc 1 464 31 view .LVU980
 2993 018c 089B     		ldr	r3, [sp, #32]
 464:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2994              		.loc 1 464 80 view .LVU981
 2995 018e 04EBC202 		add	r2, r4, r2, lsl #3
 464:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2996              		.loc 1 464 51 view .LVU982
 2997 0192 04EBC303 		add	r3, r4, r3, lsl #3
 464:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 2998              		.loc 1 464 80 view .LVU983
 2999 0196 5268     		ldr	r2, [r2, #4]
 464:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 3000              		.loc 1 464 51 view .LVU984
 3001 0198 5B68     		ldr	r3, [r3, #4]
 464:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 3002              		.loc 1 464 80 view .LVU985
 3003 019a 2A44     		add	r2, r2, r5
 464:network.c     ****                     net.layers[i].neurons[nidx].a = net.layers[i].neurons[nidx].z;
 3004              		.loc 1 464 51 view .LVU986
 3005 019c 2B44     		add	r3, r3, r5
 3006 019e D268     		ldr	r2, [r2, #12]	@ float
 3007 01a0 1A61     		str	r2, [r3, #16]	@ float
 3008 01a2 EEE7     		b	.L118
 3009              	.L115:
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3010              		.loc 1 469 17 is_stmt 1 view .LVU987
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3011              		.loc 1 469 58 is_stmt 0 view .LVU988
 3012 01a4 D868     		ldr	r0, [r3, #12]
 3013 01a6 00F10040 		add	r0, r0, #-2147483648
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3014              		.loc 1 469 54 view .LVU989
 3015 01aa FFF7FEFF 		bl	__aeabi_f2d
 3016              	.LVL223:
 3017 01ae FFF7FEFF 		bl	exp
 3018              	.LVL224:
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3019              		.loc 1 469 27 view .LVU990
 3020 01b2 089B     		ldr	r3, [sp, #32]
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3021              		.loc 1 469 47 view .LVU991
 3022 01b4 04EBC303 		add	r3, r4, r3, lsl #3
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3023              		.loc 1 469 53 view .LVU992
 3024 01b8 0022     		movs	r2, #0
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3025              		.loc 1 469 47 view .LVU993
 3026 01ba 5E68     		ldr	r6, [r3, #4]
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3027              		.loc 1 469 53 view .LVU994
 3028 01bc 074B     		ldr	r3, .L123+4
 3029 01be FFF7FEFF 		bl	__aeabi_dadd
 3030              	.LVL225:
 3031 01c2 0246     		mov	r2, r0
 3032 01c4 0B46     		mov	r3, r1
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3033              		.loc 1 469 50 view .LVU995
 3034 01c6 0020     		movs	r0, #0
 3035 01c8 0449     		ldr	r1, .L123+4
 3036 01ca FFF7FEFF 		bl	__aeabi_ddiv
 3037              	.LVL226:
 3038 01ce FFF7FEFF 		bl	__aeabi_d2f
 3039              	.LVL227:
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3040              		.loc 1 469 47 view .LVU996
 3041 01d2 2E44     		add	r6, r6, r5
 469:network.c     ****                 net.layers[i].neurons[nidx].a = 1/(1+exp(-net.layers[i].neurons[nidx].z));
 3042              		.loc 1 469 50 view .LVU997
 3043 01d4 3061     		str	r0, [r6, #16]	@ float
 3044 01d6 D4E7     		b	.L118
 3045              	.L124:
 3046              		.align	2
 3047              	.L123:
 3048 01d8 0F000000 		.word	.LC1
 3049 01dc 0000F03F 		.word	1072693248
 3050              	.LBE67:
 3051              	.LBE70:
 3052              		.cfi_endproc
 3053              	.LFE19:
 3055              		.text
 3056              	.Letext0:
 3057              		.file 2 "c:\\users\\leonard\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\machine
 3058              		.file 3 "c:\\users\\leonard\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\sys\\_s
 3059              		.file 4 "network.h"
 3060              		.file 5 "c:\\users\\leonard\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\stdlib.
 3061              		.file 6 "c:\\users\\leonard\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\time.h"
 3062              		.file 7 "<built-in>"
 3063              		.file 8 "c:\\users\\leonard\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 network.c
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:16     .text.swap:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:24     .text.swap:00000000 swap
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:54     .text.free_network_memory:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:61     .text.free_network_memory:00000000 free_network_memory
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:241    .text.free_network_memory:00000080 $d
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:246    .text.shuffleArray:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:253    .text.shuffleArray:00000000 shuffleArray
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:336    .text.get_random_indices:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:343    .text.get_random_indices:00000000 get_random_indices
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:413    .text.create_neuron:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:420    .text.create_neuron:00000000 create_neuron
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:510    .text.create_layer:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:517    .text.create_layer:00000000 create_layer
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:559    .text.create_network:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:566    .text.create_network:00000000 create_network
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:606    .text.construct_network:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:613    .text.construct_network:00000000 construct_network
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:791    .text.forward_layer:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:798    .text.forward_layer:00000000 forward_layer
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:824    .text.generate_random_indices:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:831    .text.generate_random_indices:00000000 generate_random_indices
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:994    .text.get_random_binary_indices:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:1001   .text.get_random_binary_indices:00000000 get_random_binary_indices
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:1066   .text.generate_random_dummy_operations:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:1073   .text.generate_random_dummy_operations:00000000 generate_random_dummy_operations
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:1195   .text.forward_shuffled_NO:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:1202   .text.forward_shuffled_NO:00000000 forward_shuffled_NO
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:1587   .text.forward_shuffled_NO:000001ac $d
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:1594   .text.forward_shuffled_NO_AAE:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:1601   .text.forward_shuffled_NO_AAE:00000000 forward_shuffled_NO_AAE
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:2024   .text.forward_shuffled_NO_AAE:000001cc $d
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:2031   .text.forward_shuffled:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:2038   .text.forward_shuffled:00000000 forward_shuffled
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:2268   .text.forward_shuffled:000000e4 $d
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:2273   .text.forward:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:2280   .text.forward:00000000 forward
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:2596   .text.forward:00000194 $d
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:2604   .text.forward_shuffled_NO_AAE_RDO:00000000 $t
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:2611   .text.forward_shuffled_NO_AAE_RDO:00000000 forward_shuffled_NO_AAE_RDO
C:\Users\Leonard\AppData\Local\Temp\ccHRFpoo.s:3048   .text.forward_shuffled_NO_AAE_RDO:000001d8 $d

UNDEFINED SYMBOLS
free
puts
time
srand
rand
malloc
__aeabi_i2f
__aeabi_fmul
__aeabi_fadd
__aeabi_fcmplt
__aeabi_f2d
__aeabi_dadd
__aeabi_ddiv
__aeabi_d2f
exp
